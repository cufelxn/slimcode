public getSelectedExampleData ( ) { < = ( ( allSelectedItems null || isEmpty ) { ; for String selectedItem allSelectedItems ) { < Integer > rowIndex = . selectedItem ) ( ) } null }<CODESPLIT>Get the example which is selected in the tree .
public float alpha ) ( ) return if ( mDimView null ) ; ( mDimView . isShown ( ) { mDimView . setVisibility ( ) ; . mDimView . setAlpha ; }<CODESPLIT>Set the dim - behind layer a specific opacity .
public extract if ( isFound ( ) ) throw only extractSW . start ) ; currEdge = ; ( . adjNode ) boolean EdgeIterator Edge ( currEdge . int nextEdge ; ) = Edge . ( . parent . ; = currEdge . edge ; processEdge ( currEdge edge . , . } currEdge . adjNode ) reverseOrder ( ) ; ; return setFound ( true ) ; }<CODESPLIT>Extracts the Path from the shortest - path - tree determined by sptEntry .
public writeInt ( byte [ , int [ offset ] = byte ( 24 ) [ offset + ] = ( byte ) ) target ] ) >>> 8 ; target offset + 3 ] ; return Integer . BYTES }<CODESPLIT>Writes the given 32 - bit Integer to the given byte array at the given offset .
void visitGetElem Node . getJSType ( n . getFirstChild ) ) , getJSType ( ) ) ; ( n }<CODESPLIT>Visits a GETELEM node .
private Class < getTypedClass java . lang . reflect type if { return Class ) ; else if ( instanceof ParameterizedType ) java . . ( ) getRawType return ( rawParamterizedType } else ( instanceof TypeVariable ) { . lang . reflect Type upperBound TypeVariable ) ) [ ] ; return getTypedClass ( ) ; IllegalArgumentException while class :" + ) ;<CODESPLIT>Gets the typed class .
URI toUri fileStore . state ( ( ) ; return . toUri ( path . ; }<CODESPLIT>Gets the URI of the given path in this file system .
getActivityInterface ( activityInterface == null ) new ActivityInterface apiKey , sharedSecret ) ; ; }<CODESPLIT>Get the ActivityInterface .
private void initBeforeList ) final List < > = new ArrayList > ( ) ; final invokeHolder = getInvokeHolder ( ? > . getDeclaringClass ( if processorClass && . isAnnotationPresent ( Before . ) Class ? ProcessAdvice [ ] = processorClass getAnnotation ( . ) for ( = 0 i . length ++ ) < extends bc i ] final ProcessAdvice = . getInstance bc ) ; add beforeRequestProcessAdvice ; } invokeHolder . . ) { final ? ProcessAdvice [ ] bcs = getAnnotation ) . ( ) int = i < bcs length i ) { < extends > = bcs [ final = ( . getReference bc ) ; beforeRequestProcessAdvices ( beforeRequestProcessAdvice } beforeRequestProcessAdvices ;<CODESPLIT>Initializes before process advices .
void ) jsFactory JsonFactory ( ; . ( JsonParser . Feature ALLOW_COMMENTS , ( JsonParser . Feature ALLOW_SINGLE_QUOTES , true jsFactory . configure , true ; }<CODESPLIT>Creates the JsonFactory .
void Looper ) handler = looper { public void handleMessage Message msg ) , THREAD_LEAK_CLEANING_MS ) } } . sendMessageDelayed ( ) , THREAD_LEAK_CLEANING_MS ; }<CODESPLIT>Prior to Android 5 HandlerThread always keeps a stack local reference to the last message that was sent to it . This method makes sure that stack local reference never stays there for too long by sending new messages to it every second .
void String ) ( buttons null buttonsAtBottom ) ; Element e new Input , label ) ; ( extendRow ) null , e ( e ; }<CODESPLIT>Add a reset button .
int getMaximumVolume { return ( ( . getSystemService ( . AUDIO_SERVICE ) getStreamMaxVolume ( ; }<CODESPLIT>Returns maximum volume the media volume can have
@ SuppressWarnings ( ) removeSREs ( ISREInstall ... ) { = ( ) ; final String = ? : defaultSRE ) ; int - ( defaultId null ) { ( int = 0 defaultIndex - && i < this . sreTable . ) { defaultId equals ( ( ) getItem ( ( ) . ( ) ) = ; } String = boolean = ; ( sre ) { this . ( ) . ( ) . equals normedDefaultId { } refreshSREListUI ( if ( ( this ( ) { setSelection null } if ( defaultIndex < ) { defaultIndex } else if >= this sreTable ( ) = this . sreTable getItemCount - 1 } setSelection ( . . defaultIndex ) . ) } } this . sresList . refresh true ) ; ( defaultIsRemoved ) fireDefaultSREChanged } updateUI ( )<CODESPLIT>Removes the given SREs from the table .
public WikiUser ( String wikiId , String ) WikiUser ; { Properties wikiId ) ; ( ) result props getProperty ( setEmail ( props . getProperty ) ) Crypt "cypher" ) , . getProperty ) ) . setPassword . ( . "secret" ) ) ; } { msg = , siteurl ; LOGGER log ( Level . SEVERE } ( e ) { LOGGER log . SEVERE , ) ) catch ( e ) { LOGGER log ( . SEVERE , e getMessage ; return result }<CODESPLIT>get the Wiki user for the given wikiid
public ( ) { int { T next ( ) ; ( alreadyGenerated ( next { alreadyGenerated . ( next ) ; return ++ } numberOfRetries new on ( " ) join ( "Exhausted" , generate unique value" ) ) }<CODESPLIT>Returns unique &lt ; T&gt ; generated by delegate Generator&lt ; T&gt ;
boolean Node node ) ( getNodeType ) Node . ELEMENT_NODE || . getNodeName ) ( . getNodeType ( ) Node . TEXT_NODE || . getNodeValue ) ( == ) ; }<CODESPLIT>Checks if a given node is allowed or not as a child of a &lt ; ul&gt ; or &lt ; ol&gt ; element .
public static [ ] matchSequenceToStructure seq , struct { < Integer atomIndexPosition < Integer , Group ( ; structSeq getProteinSequenceForStructure ( struct , atomIndexPosition ) ; < AminoAcidCompound > matrix = SimpleSubstitutionMatrix < AminoAcidCompound ( . ( ) 1 , = new SimpleSubstitutionMatrix < AminoAcidCompoundSet getAminoAcidCompoundSet ( new SimpleSubstitutionMatrix class ) , ) ; ProteinSequence Alignments . getPairwiseAlignment seq structSeq , PairwiseSequenceAlignerType GLOBAL ) matrix ) ; ProteinSequence AminoAcidCompound > alignedSeq = ( ) ; ProteinSequence > = pair ( ) getLength ( . ( ) ) ; ResidueNumber [ ca = new . getLength ( ) int pos = getStart ) getPosition pos alignedSeq . getPosition ) { if ( alignedSeq isGap pos ) ) { structIndex = ( assert 0 ) = atomIndexPosition . get ( logger . "Chain {} in {} has corresponding acid the g getChainId ) , ( ) toString ) , g . getChain ) getStructure ) ( ) continue ; } if ( ! . ) { int = . pos ) 1 ; alignedStruct . ( ) - . get ; ( 0 seqIndex seqIndex < ca . [ seqIndex . getResidueNumber ( } return }<CODESPLIT>Given a sequence and the corresponding Structure get the ResidueNumber for each residue in the sequence .
@ SuppressWarnings { "unchecked" } static IMeta ( < ? , ? IMetaData < ? ) Map String Object map1 = ( ( Map < String , > ) metaData1 ) Set < Entry String Object map1 entrySet ( ) , map2 = ( ( Map Object ) metaData2 Set < , > = . entrySet ) Map < Object = new HashMap String Object > ( ; for String Object > entry1 ) String key1 = entry1 ) ; if . key1 ) { = map1 ( ) ; Object . ( key1 ) ; if ( instanceof Double ) Double . valueOf ( ) ) . ) Double toString ) ) ) key1 , value2 ) ; } if ( value1 instanceof ) { if Integer ( . valueOf ( value2 . ) . intValue ) ) rep ( key1 , ) } else if ) { if Long valueOf toString ) ) valueOf ( toString ) . ) put key1 , ) } instanceof Boolean if ! . ( ) && Boolean valueOf toString ) ) rep . put ; } } set1 . removeAll ( rep entrySet ( ) ) ; set1 . entrySet ( ; set1 . ; return<CODESPLIT>Merges the two Meta objects
List > ( , int while allResults . size ( < arg1 moveNextResults ( ) ; } return unmodifiableList ( allResults arg1 ) ; }<CODESPLIT>Returns a sub - list in the range specified loading more results as necessary .
private ( String channel , ] ) setMetadata ( , message setMetadata ( "cwf.pub.channel" ) message setMetadata ( "cwf.pub.event" , UUID . . toString ( ) . ( ) ; message . setMetadata "cwf.pub.recipients" recipients ) ; return }<CODESPLIT>Adds publication - specific metadata to the message .
private > GraphRequest < T , type params ) this . ) < T = GraphRequest T > object , params , this mapper , this . < type this add req ; return req }<CODESPLIT>The actual implementation of this after we ve converted to proper Jackson JavaType
public void writeLength long { if length 251 ) { [ position ++ ] = ( byte ) length ; < 65536 [ position ++ ( ; buf position ++ ] ( byte length ; [ ++ = ( byte ) length >>> ; length ) buf [ ++ ] = byte ; buf ++ ] ) ; buf position ( byte length 8 ; byte >>> ) } else [ position = byte ) ; buf [ ] ( ) buf ) ( length >>> ++ ( byte ) ( length >>> [ position = ( byte ( length buf [ position byte ) ( [ position ++ = ( ( length 40 ) [ ] = ) ( 48 ; buf [ position ++ ( byte ( length 54 ) ;<CODESPLIT>Write length .
public < TSource TResult > TResult > map ( Collection TSource > , < mapper if ( items ) { new ArrayList < ) ; List items size ( ) ( TSource : items ) mappedItem = mapper map item . add ) } result ; }<CODESPLIT>Projects each element of a collection into a new collection .
static void , final ContentHandler handler { serializeElement ( "real" String valueOf ( doubleValue ) , ; }<CODESPLIT>Serialize a Number as a real element .
public JMenuBar setupStandardMenu ( ActionListener bAddHelpMenu ) { Application application = . getApplication ) oldResources = application ) ; application getResources ( null , ) ; . setupActions ( targetAction ; JMenuBar menuBar JMenuBar ) static long 1L ; Dimension ( ( . ) , . ( height ) ; } setOpaque ( char rgchItemShortcuts new char 20 = . addMenu . ) ; this . addMenuItem , PRINT , ) ; . addSeparator ) . addMenuItem ( menu , ThinMenuConstants . LOGON ; . addMenuItem menu ThinMenuConstants LOGOUT , ) addMenuItem ( CHANGE_PASSWORD , rgchItemShortcuts addSeparator ( ) this addMenuItem menu . ) = [ 20 ] . , . EDIT ; this , . CUT rgchItemShortcuts ( , ) ; menu , ThinMenuConstants . PASTE , rgchItemShortcuts menu . addSeparator ( ) addMenuItem ( menu , , rgchItemShortcuts ) oldResources != ) application . setResourceBundle ( oldResources ) ; if ) . ) ; return ;<CODESPLIT>Setup the standard menu items .
static String ( final prefs . ( class ) if ( prefs != . ( "LANE_COUNT_ATTR_NAME" ) ; } return }<CODESPLIT>Replies the preferred name for the number of lanes of the roads .
public [ ] get ( ) Exception obj = new ( ) option ( option set_args ( nitro_util . ( args ) ) ; nsrollbackcmd [ ] response ( ] option ) response }<CODESPLIT>Use this API to fetch all the nsrollbackcmd resources that are configured on netscaler . This uses nsrollbackcmd_args which is a way to provide additional arguments while fetching the resources .
private ( int i ) if || < return i } int 0 rule = ) . ; for int k = ; k < i ; ++ j += ( ) } j }<CODESPLIT>Gets the index of the element indexed by i adding any offsets because of the phrases in the rule .
String getProxyHostsWhiteList ( ) ( null _proxyHostsWhiteList size ( ) == ) return String hosts new String [ _proxyHostsWhiteList size ( ) ] hosts = String ( ) return ; }<CODESPLIT>Get proxy host white list .
public ( MetatypeAd metatypeAd ) if metatypeAds null metatypeAds = LinkedList < ( ( : ) ( ad getID ( ) . equals ( metatypeAd . getID false add ) ; return true }<CODESPLIT>Adds a metatype AD .
public skip ( n IOException { if ( mInputStream . ( ) n { ( ; } close ) ; += n ; mObject = . , null ; mInputStream new BufferedInputStream . getDataInputStream ( ) ) ; catch e ) new IOException ( ) ; n }<CODESPLIT>This method leverages the ability to open a stream from GCS from a given offset . When the underlying stream has fewer bytes buffered than the skip request the stream is closed and a new stream is opened starting at the requested offset .
boolean ( Name name tree if ( name null ) table . names ; name == names . ; { return false } }<CODESPLIT>Is this a call to super?
public static String getShortRequestDump ( String boolean includeHeaders HttpServletRequest ) StringBuilder dump ( append ( "Timestamp . ( ISO8601 . getTimestamp ( ) . append "\n" ) ; dump append ( "fromMethod : ) append ) append ) ; . append ( request ) . append ) . append ( "Scheme append ( getScheme ) ; dump . ( : " ) append ( ) . append '\n' dump . append ( "Query-String ) . append . ) . append ) ; : " ( . getAuthType ( ) ( '\n' ) append ( "Remote-Addr ( request . ) . ( ) dump . "Scheme " . request ) . append '\n' ; . append : " . append request getContentType '\n' . append ( " append request . append ( ) ; ( includeHeaders ) dump . append ) Enumeration String > headers getHeaderNames ( ) ; while ( . ( ) header = nextElement ( append ( ) append ( ) . append " ) . ( . getHeader ( header ( '\n' } return ( ( }<CODESPLIT>Build a String containing a short multi - line dump of an HTTP request .
static ( String stringToCheck trim argumentName throws { validateNotNull ( stringToCheck argumentName ) ( 0 ( trim && stringToCheck trim ( ) . ( ) 0 ( + ) } }<CODESPLIT>Validates that the string is not null and not an empty string .
static JPanel _panel = new JPanel _panel . setLayout ( new ( _panel , ) ) }<CODESPLIT>Create a panel that lays out components vertically .
boolean shouldAnalyze ) instanceof FileTypeAnalyzer fileTypeAnalyzer = ( FileTypeAnalyzer analyzer ; return fileTypeAnalyzer . getActualFile ( ) } return }<CODESPLIT>Determines if the analyzer can analyze the given dependency .
void registerServiceClass registeredServiceClasses . put ( ( ) , serviceClass ; . Services ( . ( ; }<CODESPLIT>Registers a service enabling the service layer to automatically start autorun servies .
String getSectionText sectionNumber ) throws Exception = this . getPageContent pageTitle , "&rvsection=" , false ; }<CODESPLIT>get the text for the given section
public ( int [ , ] ) ( x . != y ( format "Arrays have different length: y[%d]" , x . length , . length ) cor ( x ; }<CODESPLIT>Pearson correlation distance between the two arrays of type int .
static TileGrid int zoom ) { ProjectionFactory . getProjection ( . ) ; ( , , ; }<CODESPLIT>Get the tile grid for the location specified as WGS84
List > ( ArrayList < > = ArrayList < VectorLayer > ) ; layer layers ) if ( layer ) { list . ( } } return ; }<CODESPLIT>Return a list containing all vector layers within this model .
private calcRmsd ] x , Point3d [ ] y ) x ) ; else { = CalcPoint clonePoint3dArray x ; xtrans = . xref ; debug ( "x xtrans ) ; ( CalcPoint ( new ( ) , xref yref = ( y ytrans centroid ( ; . "y " ) negate ( ; translate ( new Vector3d ( ytrans ) yref ; innerProduct yref calcRmsd ( wsum ; }<CODESPLIT>Calculates the RMSD value for superposition of y onto x . This requires the coordinates to be precentered .
public Title v ) ( featOkTst ( ) jcasType ) casFeat_sectionHeading == throwFeatMissing , ) ; jcasType . . ll_setRefValue ( addr , ( Section_Type ) ) . ll_getFSRef ( ; }<CODESPLIT>setter for sectionHeading - sets the title of the section
public Response ( InputStream is IOException , , { SxmpParser = version ) operation ; { = . is ) ; catch ( SxmpParsingException ) { if ( . ( != && ) getType ( ) logger ( "Unable to fully parse request, ErrorResponse; error: e ( + parsed: e getOperation ( ) return new e . ( ) getType ( , e ( ) ) e . getErrorMessage ( ) else { throw ( e . getMessage , ; } try { ! ) ) { throw new ( . UNSUPPORTED_OPERATION , "A session process requests" ) } req ( Request ( req . ) null new ( . must ( ! . ( ( ) { throw SxmpErrorException ( . , failure" if ( ) { return processor . req . getAccount ( , ( ) operation ) ; } ( instanceof { processor req . ( ) ( ) operation ) if ) { . deliveryReport req . ( DeliveryReportRequest ) } else throw "Unsupported operation ; } } ) { . . ( ) return new ErrorResponse operation . getType ( ) e . ( ) . e . ( catch ( Throwable ) logger ( "Major uncaught request, generating an ErrorResponse" ; return new ErrorResponse ( operation , . ( ) request" )<CODESPLIT>Processes an InputStream that contains a request . Does its best to only produce a Response that can be written to an OutputStream . Any exception this method throws should be treated as fatal and no attempt should be made to print out valid XML as a response .
private void submitPayload ( String url . ConnectionSettings , jsonPayloadObject , callback < String > if ( redirectUrls . contains ( url ) { throw PushSenderException ( "The site an infinite redirect url: + ; else . add null ; try { final credentials = + ; encoded = Base64 . getBytes ( ) = HttpRequestUtil post ( url encoded jsonPayloadObject , proxy ) final int statusCode httpURLConnection ( ) logger . Level . INFO . "HTTP code from UnifiedPush %s" , ( isRedirect ) String redirectURL = httpURLConnection "Location" ) . ( Level . ( "Performing , ) ; ( . , masterSecret ) ; } statusCode . log Level SEVERE , Unified Server returned + ) ; new ( } { if callback != ) callback . ; catch ( PushSenderHttpException { throw pshe ; } catch ( Exception e log ( Level INFO , trying to the request" e ) ; ( e getMessage ( ) , e ) finally if ( httpURLConnection ) { httpURLConnection ) ; } }<CODESPLIT>The actual method that does the real send and connection handling
public [ ] ( ) null || ) == 0 ) EMPTY_NAMES String arr = [ children . ) ] ; for 0 i ; { [ i = ( RamResourceCore ) . get ( i ) ; } return arr }<CODESPLIT>Gibt den Feldnamen children zurueck .
public Object array , int index ) throws UtilTargetError "getIndex: index=" , index ; try if ( instanceof ) ( ( List ? array . index ) ; val Array . get index return wrap ( , . arrayElementType . getClass ( } IndexOutOfBoundsException { int len = ? List array ) ( array ) ; throw new UtilTargetError ( " index + out-of-bounds for len e1 ) ; } }<CODESPLIT>Get object from array or list at index .
public base_response add nitro_service client throws Exception { addresource aaakcdaccount ( ) ; = kcdaccount ; keytab = resource keytab ; addresource . realmstr ; . delegateduser kcdpassword resource . addresource . usercert . usercert . cacert = resource add_resource ( client ) }<CODESPLIT>Use this API to add aaakcdaccount .
public synchronized ( ) { if ( . ( ) && . isEntryEnabled ( ) ) SibTr . ( this this ) = ! ) { if TraceComponent ) . ) . debug , tc , "Waiting lock" ) ; wait ( 1000 ) catch ( InterruptedException ) = true } while 0 { if isAnyTracingEnabled && tc ) debug tc lock to 0 iLockCount ) 1000 ) } ( InterruptedException ) { true } } if ( { . ) . ( if ( TraceComponent isAnyTracingEnabled ( ) && tc . isEntryEnabled ( . exit tc "lockExclusive" ) ;<CODESPLIT>This method locks the mutex so no other lockers can get the lock .
setCPOptionValueLocalService ( . commerce . product . cpOptionValueLocalService { cpOptionValueLocalService = ; }<CODESPLIT>Sets the cp option value local service .
static String ( ) PackageDeclaration getPackage ; return != null ? '/' + . replace '.' , '/' ) : }<CODESPLIT>Infers the Struts module path from the given controller class .
final getLeapMonth , int yearOfCycle ) { int [ getLeapMonths = ( cycle 1 ) 60 + - ; index = 2 ( - [ ) / 3 lm = 0 ( leapMonths ) ) int = leapMonths [ ; if elapsedYears ) += max ( ( - / ) else ( > { break ; } else lm = leapMonths [ 1 } } return lm ; }<CODESPLIT>number of leap month or zero if no leap year
public getSnippet ( snippetId , { if snippetId ) { throw new ( can't ) ; response = get . Status . OK , ) response Snippet class ) ; ( { . ( getSnippetContent ( snippet ) ; } return snippet }<CODESPLIT>Get a specific Snippet .
public final int ( codePoint ) { value int ix ; ( codePoint >= 0 ) if ( codePoint < 0x0dbff && ) index UTRIE2_SHIFT_2 ix = ix + & ) value data32 [ ] ; value ; codePoint <= 0xffff ) { ix = index + ( codePoint ) >> ] ; ix UTRIE2_INDEX_SHIFT ( ; = data32 ix ; return codePoint < highStart ( - UTRIE2_OMITTED_BMP_INDEX_1_LENGTH + ( codePoint >> ) ; ix = [ ix ] ; += codePoint UTRIE2_SHIFT_2 & ; ; = UTRIE2_INDEX_SHIFT ( codePoint & ) value data32 [ return value if ( 0x10ffff { value highValueIndex ] value return errorValue ;<CODESPLIT>Get the value for a code point as stored in the Trie2 .
static Object ( , attrName MBeanServer getMBeanServer ( ; ObjectName objName = new return server getAttribute ( objName , attrName }<CODESPLIT>Get MBean attribute object
public void setSelectedIndex int ) { if ( items ( selectedIndex ) { IndexOutOfBoundsException ( to " + selectedIndex ; } final oldSelection . ; selectedIndex selectedIndex - updateText "" ) else { ( . get ( selectedIndex . toString ( ) ; } Runnable ) run ) for ( Listener listener : listeners listener . , oldSelection ; } invalidate ) ;<CODESPLIT>Programmatically selects one item in the combo box which causes the displayed text to change to match the label of the selected index .
( photoId date ) throws FlickrException ( METHOD_GET_PHOTO_STATS "photo_id" photoId , ; }<CODESPLIT>Get the number of views comments and favorites on a photo for a given date .
public ServiceCall < > getDocumentStatus ( GetDocumentStatusOptions getDocumentStatusOptions { . , cannot be [ ] pathSegments "collections" , } ] = { getDocumentStatusOptions . collectionId ( . documentId builder RequestBuilder . constructHttpUrl getEndPoint ( pathSegments , ) ; query "version" versionDate Map < , String > . ( , "v1" ; for Entry < , String > : . ) ) { . header ( header ( header . getValue ) ) builder ( "application/json" ) ; createServiceCall ( builder build ( ) , . . )<CODESPLIT>Get document details .
Pager > ( , Integer itemsPerPage throws GitLabApiException { return Pager < . class , itemsPerPage null , getProjectIdOrPath ( projectIdOrPath mergeRequestIid , "closes_issues" ; }<CODESPLIT>Get a Pager containing all the issues that would be closed by merging the provided merge request .
public final Class < ? > clazz , String ) { String "" ; e null e length == 1 { = StringWriter ; PrintWriter pw ( ) 0 printStackTrace ) ; . ( ) exceptionStr "exception = " . toString } . err . ( "[" + ) + "]" + "-" + + . getSimpleName "] " + + exceptionStr ) ; } }<CODESPLIT>To output the error log message to the error out
static ( HtmlStyle styleClass scope body { htmltree = new HtmlTree HtmlTag . ) ( != null ) htmltree addStyle ( styleClass ) htmltree . ( scope ) return ; }<CODESPLIT>Generates a TH tag with style class and scope attributes and some content .
void final themeResourceId TypedArray typedArray ) getTheme ( ) . ( themeResourceId R . attr . materialDialogDividerMargin } setDividerMargin ( typedArray 0 ) ; }<CODESPLIT>Obtains the left and right margin of dividers from a specific theme .
setDefaultButton ( this . getScreenFieldView ( ( button null ? null . getScreenFieldView ; }<CODESPLIT>Set the default button for this basepanel .
Key int ) ( k k size ( root ) throw new Key , Value > x = root , k getKey ( ; }<CODESPLIT>Return the kth smallest key in the symbol table .
void add RequestHandler { . ) lock ; try newSessionRequests . add ( { . writeLock . unlock ( ) }<CODESPLIT>Adds a request handler to this queue .
< > T ( stream ClosureParams value . class , options = "java.io.PrintWriter" ) ) throws IOException withWriter ( newPrintWriter , closure }<CODESPLIT>Create a new PrintWriter for this OutputStream . The writer is passed to the closure and will be closed before this method returns .
addRegexRoute ( < ? extends Actor throws RouteAlreadyMappedException { ( new Route , true ; }<CODESPLIT>Add a URL pattern to the routing table .
public synchronized void ( , KeenCallback ) if ( ! ) { handleLibraryInactive ( callback ; return ; } && defaultProject { handleFailure ( new project specified, no default project found" ) return ; if ! ( ) { . log "Not sending no " "Events will retried next time is ; handleFailure , new not ) return useProject = == ? : project projectId = useProject ( ; < String List < Object > eventStore . projectId ) < , < Map < String > buildEventMap ( , eventHandles ; response publishAll events if ( response != { try ( response ; catch ( Exception e KeenLogging . response batch publish: e . ) ; } ; } catch e ) , }<CODESPLIT>Synchronously sends all queued events for the given project . This method will immediately publish the events to the Keen server in the current thread .
public ( ) { return ( ? 1 getThreadPool ( . getQueue instanceof ( ) ( . getQueue ) ) . size ( ) + ( ( . remainingCapacity : - 1 ) }<CODESPLIT>this should only be used as an estimate
final public ( boolean requiresFoot ) throws { jjtn000 = new ( ) ; boolean = ; jjtree ; Tree ) , true ; ; { true new ( t ) ; } catch ( jjte000 ) { ( jjtc000 ) . clearNodeScope ( ) = false } else { ( ; if if ( ) throw ( RuntimeException ; if ( jjte000 { { true throw ( ParseException ) ; { ( true ( Error ) } finally jjtc000 . closeNodeScope ( jjtn000 , true ; } throw new Error function" ) ;<CODESPLIT>the argument says whether there must be a foot node on the aux tree .
INodeDirectory ( [ src , INodeDirectory , INode newNode int childIndex = null ; writeLock ( { try { newParent rootDir addToParent src , false propagateModTime , childIndex ) ; ) ; } ( e } if ( newParent null ; newNode ( ) INodeFile = ( INodeFile BlockInfo = . < blocks . length ; newF . setBlock , getFSNamesystem ( . . addINodeForLoading ( blocks i ] , newF ) ; } } { ) ; return newParent }<CODESPLIT>Add node to parent node when loading the image .
public void setModel final , final notifyModelChangeListeners { this . ) ; try { if ( this . elementUnderEdit { . safeSwingBlockingCall ( ) { run endEdit ( ) ; } ) ; final List int ] selectedPaths = new ArrayList int [ ( final : . selectedTopics { selectedPaths . getPositionPath ( ; } . . ( ) final = this . this model assertNotNull model ( PanelAwarePlugin : MindMapPluginRegistry ( ) ( . class ) { p ( , oldModel , this model ) ; = ( [ ] posPath : selectedPaths ) { final = this . findForPositionPath ( ) ; ( null ) ; } else topic ) this . add ( ) ; } if ( selectionChanged { ; } ( ) finally { ; if ( ) ) }<CODESPLIT>Set model for the panel allows to notify listeners optionally .
OperationFuture > ( ) { findByRef loadBalancer ) ; loadBalancerClient delete ( loadBalancerMetadata . getId ( ) ; OperationFuture < > NoWaitingJobFuture ( ) ; }<CODESPLIT>Delete load balancer
public ( GetSnapshotRequest request ) checkNotNull "request not ; checkStringNotEmpty request . ) should empty." ; internalRequest = . createRequest ( request , HttpMethodName . GET , ( ( GetSnapshotResponse . class ) }<CODESPLIT>Getting the detail information of specified snapshot .
SuppressWarnings ( ) void ( { BugsnagAppender addExcludedLoggerPattern + "\\[Tomcat.*\\][.]\\[.*\\][.]\\[/.*\\][.]\\[.*\\]" ; BugsnagAppender . addExcludedLoggerPattern . addExcludedLoggerPattern ) ; ( ignored ) }<CODESPLIT>If using Logback stop any configured appender from creating Bugsnag reports for Spring log messages as they effectively duplicate error reports for unhandled exceptions .
public ( relationships ) == base throw new ( ) ( int 0 ; base length ; ++ { [ ] } = [ i new ( set . addAll base [ i ] ( != relationships . data [ i ) set . removeAll . data ] ; } } }<CODESPLIT>This should only ever be called when the relationships wrap an initial state and no other methods have been called .
private static < > ( Class E type , String , Reflections reflections ) { E result = null ; extends E = reflections . type < Class ? extends E > endpointClasses new HashSet > ) for ( Class < extends E : ( . ( clazz getModifiers ( ) ) . add ) ; } < < ? E = endpointClasses ( ; ( Class E next iterator . ) ; StringUtils startsWithIgnoreCase ( . getName ( "com.github.davidcarboni.restolino.routes." ) iterator . ( . size ( ) ) endpointClasses ( ) > 1 ) { log "Warning: found for {} endpoint: , } try { ( ) ) ( ) catch ( Exception { . info ( class {}" , endpointClasses . next ) ) . printStackTrace ) ; } } return<CODESPLIT>Locates a single endpoint class .
public final void ( stream , Item ) if ( TraceComponent isAnyTracingEnabled ( ) && tc isEntryEnabled ( ) ) , "writtenStartedFlush" key = ( ( stream . ( ) StreamInfo streamTable get key ; if ( sinfo null ) . equals stream streamId ) synchronized ( ) . item AOStartedFlushItem ) } { = . ( "INTERNAL_MESSAGING_ERROR_CWSIP0001" new [ ] , null ) FFDCFilter processException , "1:2865:1.89.4.1" , this ; SibTr . exception tc , e SibTr error tc , , new "1:2872:1.89.4.1" } ; if TraceComponent isAnyTracingEnabled . ) ) SibTr . exit tc , "writtenStartedFlush" , throw e if ( TraceComponent isAnyTracingEnabled ) && tc ( ) , ;<CODESPLIT>Callback when the Item that records that flush has been started has been committed to persistent storage
public List getDetailSubreports ( ReportLayout reportLayout ) { List new ) ; = reportLayout ( ; ( i = 0 rows . ( i < rows ) { List list band . i ) for int j 0 size = list ( ) j ++ ) { be . get ( be instanceof ReportBandElement ) { . ( ReportBandElement . getReport ) } } return ; }<CODESPLIT>Get detail band subreports for a report layout
getApiApps ( return new ApiAppList ( ( auth ) get ( BASE_URI ) . ; }<CODESPLIT>Retrieves a paged list of API apps for the authenticated account .
public detachAgent ( ) try { pVm ) pVm ) ; = clazz ( ) ; method setAccessible ( true invoke pVm catch ) throw new "Error detaching" , , options ) ( NoSuchMethodException e ) throw new ( "Error , , options ) ; } ( IllegalAccessException ) throw ( "Error detaching" e options ) }<CODESPLIT>Detach from the virtual machine
ObjectGraph Class ? classes ) for Class ? > c : ) { { throw new NullPointerException "Null class not ; } excludedClasses } return ; }<CODESPLIT>Exclude any object that extends from these classes .
void setSampling double double , ) this = min this . sampleMax = = total this . new double [ numSamples }<CODESPLIT>Specifies how focal lengths are sampled on a log scale . Remember 1 . 0 = nominal length
private ( int v , , excl2 ( int = 0 < numNbsT1 ( ; ++ { if nb == excl1 == excl2 ) { msgs opposingT1 ( v , ) ] prod elemMultiply nbMsg ) ; }<CODESPLIT>Computes the product of all messages being sent to a node optionally excluding messages sent from another node or two .
protected QPath itemPath ) ( = . ) - 1 i >= ItemState itemAddStates get ( i ) if ( istate . getData ( . getQPath ) return istate ; ; }<CODESPLIT>Find last ItemState .
void addDispatcher String ) ) { ( dispatchers containsKey ( dispatcherId ) ) dispatchers . ( dispatcherId dispatcher ) }<CODESPLIT>Registering custom dispatcher
private void sgdTrain ( ClassificationDataSet W , b int sign_mul boolean IntList order = IntList . ( ) ListUtils ( order , , D . ) , 1 ; double = / ( * epochs ) ; owned int [ K ] ; 0 int [ = [ D . ( ; . fill assignments - 1 Vec dots new DenseVector W . ( ) long t for int epoch = 0 epoch ; epoch ++ Collections . shuffle ( ; int : order ) ++ 1 / ( lambda_adj * ) Vec x_i = D . i ) . ( ; y_i = ( i ) - ) b copyTo dots multiply ; if y_i - for ( = k < ; if - 1 ) { W ( k ) . ( eta x_i ) ; b . increment k - ; } int k_true_max = ( int = 1 < . k ++ ) dots ( k ) dots get ( k_true_max = k ( ) < ) z i , owned assigned_positive_instances W ( ) . mutableAdd ( ) ; b . ( z eta [ 0 assigned_positive_instances ; else owned [ assignments [ ] ] owned [ ] [ i = ; } } W . mutableMultiply / ) ; mutableMultiply ( 1.0 ) ;<CODESPLIT>Training procedure that can be applied to each version of the CPM sub - problem .
static appfwfieldtype ] nitro_service ) { obj appfwfieldtype ( ; appfwfieldtype [ ] ] obj . service ) ; return }<CODESPLIT>Use this API to fetch all the appfwfieldtype resources that are configured on netscaler .
public Future < > final Promise < Channel channelReadyPromise ) this . currentDelaySeconds . get ) channelReadyPromise new GenericFutureListener < Channel > > { ( final < Channel > ) { long future isSuccess ? 0 Math . max 2 ) MIN_CONNECT_DELAY_SECONDS ) ApnsChannelFactory this . . ( delay } } ) bootstrapTemplate config . ( schedule new ( public { Bootstrap = . bootstrapTemplate ( ) channelFactory ( AugmentingReflectiveChannelFactory < ( . ApnsChannelFactory this . . ( group , , ) final ChannelFuture bootstrap . ; . addListener ( GenericFutureListener ChannelFuture > ( { void ChannelFuture future ) . isSuccess ( ) future . cause ( ) ; } } ) ; . channel . closeFuture ( ) . addListener new < void operationComplete ( final ) channelReadyPromise tryFailure ( new closed HTTP/2 preface completed." ) ) ; } } ) } , , ;<CODESPLIT>Creates and connects a new channel . The initial connection attempt may be delayed to accommodate exponential back - off requirements .
public List String > loadOptions ( String ) List args new ArrayList ) ; File ( optionFileName ; new ( ) new FileInputStream ( optionFile ) . copy ; ) { System err . "Error reading " + getMessage ) ; exit ( ) ; } { . err "Error reading file: " e . getMessage ( ) exit 1 ; } String string stringWriter ( ) ; StringTokenizer ( ; while stringTokenizer . hasMoreTokens ( ) { . add ( stringTokenizer nextToken ; return args }<CODESPLIT>Load options from a file
public runJob ( { this . currentJob = this . . take ) ExecutionContext ( try { executionContextManager initialize ( ) ; } ExecutionContextException e { + context" e ) } this . run ( ) ; } ( ) { { this . . removeContext ; }<CODESPLIT>Execute one job .
( name model ) { getLocals put ( , ) ; ; }<CODESPLIT>Binds an object to the response .
byte [ getByteArray { = null if ( != null ) { result ( offset ; } ( result }<CODESPLIT>This method retrieves a byte array containing the data at the given offset in the block . If no data is found at the given offset this method returns null .
public [ ] ( MetaClass metaClass = InvokerHelper . getMetaClass objectUnderInspection ) List = ) [ ] new [ metaMethods size ( ) int i 0 iter . ) i ++ { MetaMethod metaMethod = ( MetaMethod ) iter . next ] = methodInfo ; result ; }<CODESPLIT>Get info about instance and class Methods that are dynamically added through Groovy .
static long parse ( String pollers ) String ] periods = . ( ",\\s*" ) ; long ] result . length errors logger getLogger . class ; i ; . ; ++ { String period ] ; try { result [ i Long . parseLong period if ( [ i ] { . "Invalid must , = true } NumberFormatException e ) . ( parse '{}' {}" , , e getMessage ) ; errors true } if ( periods length 0 ) logger "Using a for poller intervals: , join ( DEFAULT_PERIODS return DEFAULT_PERIODS { result ; }<CODESPLIT>Parse the content of the system property that describes the polling intervals and in case of errors use the default of one poller running every minute .
public setFooter , value ) { Objects . value int hasFooter = for ( _footerKeys size ( ) 1 ; i 0 -- { . ) if equalsIgnoreCase key ) if ( _footerKeys . remove ( ) ; _footerValues . ( i else hasFooter = ; . i , value ) ; } if ( ! _footerKeys add key add ( value } }<CODESPLIT>Sets a footer replacing an already - existing footer
public ( String name , value if m_elemContext ) { final patchedName = String getLocalName patchedName ) ; final uri = getNamespaceURI ( patchedName , false ; uri , value ) ; }<CODESPLIT>Adds the given attribute to the set of collected attributes but only if there is a currently open element .
public createMimeMessage ( session { if ( isEmpty ( ) && ( ) IllegalArgumentException email content" } MimeMessage msg new MimeMessage ( ; msg setSubject ( ) ) . ( createMultiPart ) ) ; msg . setRecipients ( Message . , ( recipients ) ; ; }<CODESPLIT>Creates a MimeMessage containing given Multipart . Subject sender and content and session will be set .
public static ForwardCurveInterpolation ( , LIBORModelMonteCarloSimulationModel , startTime ) throws { int timeIndex = model getTimeIndex ( startTime ) liborsAtTimeIndex = > ( ) firstLiborIndex getLiborPeriodDiscretization ( . getTimeIndexNearestGreaterOrEqual ( startTime ) firstLiborTime = . ( . ( firstLiborIndex ; if firstLiborTime > . model getLIBOR ( startTime , ) } double times = firstLiborTime startTime model ) - : model getNumberOfLibors ( ) ] ; 0 = ; int = firstLiborTime == startTime 1 ; int i ; < . getNumberOfLibors ( ) ++ add ( . getLIBOR timeIndex i ) i + indexOffset ] = getLiborPeriodDiscretization ( getTime i - startTime } RandomVariable [ = liborsAtTimeIndex . toArray RandomVariable liborsAtTimeIndex . ) ] return . ( , libors , ( ;<CODESPLIT>Create a forward curve from forwards given by a LIBORMonteCarloModel .
public < ( DeleteWordOptions deleteWordOptions ) { Validator . cannot [ ] pathSegments = { "words" } String ] = { deleteWordOptions . customizationId , deleteWordOptions . ) } ; RequestBuilder . delete constructHttpUrl getEndPoint ( ) pathSegments , ) ; Map , String > getSdkHeaders , "deleteWord" ) ; String : entrySet header . ) , . ( ) ) ; } return ( builder ( . getVoid ( ) ; }<CODESPLIT>Delete a custom word .
private tryMove ( x y ) { float newx = + x float = if ( newx ) { if blocked ( newx ) ) if else = ; return ; } { playerX = newx ; return ; else { newx ; playerY newy ; ; }<CODESPLIT>Try to move in the direction specified . If it s blocked try sliding . If that doesn t work just don t bother
recover ) try . messages ) this . dataLogger . ( ) ( this ) ; } ( Exception ) ( e ) } }<CODESPLIT>recovers the dataRecorder all messages are removed and all the messsages of the logger are recoverd
void clearSources mAudioSources ) { for : mAudioSources ) { . ( null } . ( } }<CODESPLIT>Remove all of the audio sources from the audio manager . This will stop all sound from playing .
@ ( static < V extends NumberVector > NumberVector guessFactory in ) { . V > = ; ( in instanceof ) = NumberVector < V > ( VectorTypeInformation < V ) ( } if factory null ) { Field f getRestrictionClass getField ) ; Factory > f get ( catch Exception { . ( "Cannot determine factory for type " + in . ; } } return factory ; }<CODESPLIT>Try to guess the appropriate factory .
public void balance ( ) ! rootDir exists ) ) . mkdirs ; if ( rootSaveDir . exists ( ) . ( if ( paths null ) paths . newHashMap ( ; if == ) newArrayList ) ; for ( int 0 < numLabels ; ++ ) . ( i ArrayList > ( ) ) ( new File rootDir String . valueOf i ) } while ( hasNext ( ) dataSetIterator next ( ) ; < 0 ) miniBatchSize . numExamples ( ) ( = ; i < numExamples ) ++ ) { DataSet currExample . get ( i ) ; ! . ( . outcome ) ) ) labelRootDirs . ) ) = new . outcome ( ) , ( ( currExample outcome ( ) size ) currExample . ) ; paths . get . outcome ( ) . add example ) ; } } int = ; while ( ! . ) { < DataSet ArrayList ; ( . size ( ) miniBatchSize && paths . ) i < ; ( paths ( ) != null ) ) DataSet new DataSet ) ( paths . get ( ) ( ) ; . ) paths . remove ( ) ; } } ( ) rootSaveDir . mkdirs ) miniBatch ( { = DataSet . ; if ( != null dataNormalization . ( merge ( new File ( String . format ) ) } }<CODESPLIT>Generate a balanced dataset minibatch fileset .
static boolean { double gpsTime = ; gpsTime += countleaps ( , true ) return isleap }<CODESPLIT>Test to see if a unixtime second is a leap second
void setSunXMLHeaders , final String sXMLHeaders String sPropertyName SUN_XML_HEADERS ; _setProperty , sPropertyName ; }<CODESPLIT>Set the Sun specific XML header string .
private void sendKeepAliveBridgeMessage int String bridgeId String , final CallStatsHttp2Client ) { long apiTS = System . currentTimeMillis ( ) BridgeKeepAliveMessage ( ) ; String gson message ) httpClient . sendBridgeAlive keepAliveEventUrl , , requestMessageString new ( { public void onResponse Response response int code ; keepAliveResponse ; { String responseString ( ) ( ) keepAliveResponse gson fromJson ( , class ) ; ( e { new ) } ( JsonSyntaxException { logger ( Syntax Exception + e . ) e ) ; e printStackTrace ; e ) ; } setDisrupted ; responseStatus == CallStatsResponseStatus . ) { keepAliveStatusListener else if ( == INVALID_AUTHENTICATION_TOKEN ) ) CallStatsErrors . , ) ; else { setDisrupted ) ; } } public Exception ) { info ( e toString ( ; httpClient . setDisrupted ) ; } }<CODESPLIT>Send keep alive bridge message .
public getResource final resourceName , final nodeId , final String > { final StreamingOutput sOutput ) { public void OutputStream ) throws final revision = queryParams . get REVISION ) ; String = . WRAP ) ; String . . ; boolean = wrap == null ? false : ( final boolean == ) . equalsIgnoreCase ( ) final Long = == null null Long . ( revision ; ( resourceName , nodeId , rev , , wrapResult } return }<CODESPLIT>This method is responsible to deliver the whole XML resource addressed by a unique node id .
public [ ] createManagedEntities ( ] mors mors == null ) return ManagedEntity ] ; [ ] mes new ManagedEntity [ mors . ( i < ; ) { [ i = createExactManagedEntity ( sc ) ; } return mes }<CODESPLIT>Given a ServerConnection and an array of MORs return an array of MEs
public Function < , ( I_CmsFormatterBean formatter , Supplier CmsXmlContent > ) return result ; if != ) { = formatter . ) . ( { content = get ) ; ( content != null ) { result = content ) key ) return result ; }<CODESPLIT>Helper method to create a string template source for a given formatter and content .
private ByteBuffer createReadWriteMessage ( final logicalBlockAddress final { ByteBuffer = ByteBuffer ( ; cdb ( ) cdb . ( LOGICAL_BLOCK_ADDRESS_OFFSET ) . putInt ( ) TRANSFER_LENGTH_OFFSET putShort ( ) ; rewind ( ) ; return cdb }<CODESPLIT>Creates the Command Descriptor Block for a given Operation Message .
long ByteBuffer ] int offset ) IOException { long rc fillAppRead ( 0 ) { return ; } . move ( offset , length ; }<CODESPLIT>Reads ByteBuffer from peer . Starts handshaking if needed .
static ( [ , int , value { if ( inFirstSegment segments , segments 0 putInt ( offset , ) ; } { , value ) } }<CODESPLIT>set int from segments .
< > getOptionalUser String ) { ( ofNullable ( getUser ( username ) ) GitLabApiException glae ) ( GitLabApi . ) ) }<CODESPLIT>Lookup a user by username and return an Optional instance .
protected registerRateLimiterComponent ( { String . COMPONENT_PREFIX + IRateLimiterComponent class ( ) ; ESRateLimiterComponent . getName ) ; setConfigProperty + ".client.type" , "jest" componentPropName ".client.protocol" setConfigProperty ".client.host" "${apiman.es.host}" ) ( + ".client.port" ; setConfigProperty ( + ".client.username" , "${apiman.es.username}" setConfigProperty + , "${apiman.es.password}" ) }<CODESPLIT>The rate limiter component .
public getCoordinatesFromGridPoint ) { int dimCounter = 0 ; ( ) ; for int z 0 ; < [ ] [ 0 . z ) ( int y y < grid . y { for int = 0 ; grid length ++ ) ( { point . x minx * ; latticeConstant ; z = minz + * z ; return ; } } } return point ; }<CODESPLIT>Method calculates coordinates from a given grid array position .
setColor ( { if ( null { _color = ; } else . set } }<CODESPLIT>Defines the color that will be used to colorize the section in a clock .
void EventId eventId ) { V eventWrapper sharedBuffer . getEvent ( ) ; { eventWrapper release ( ) ) sharedBuffer . removeEvent ( ) ; else , ) } } }<CODESPLIT>Decreases the reference counter for the given event so that it can be removed once the reference counter reaches 0 .
public toSql ( ) String sql ; if ( { metaModel formSelect ( null , orderBys limit , offset ; } else sql != ? getDialect formSelect metaModel ) null , orderBys , , ) ; } if showParameters ) { = new ) . " ) join ( sb , params ", " = toString ) } return sql ;<CODESPLIT>Use to see what SQL will be sent to the database .
private ( StylesheetHandler handler ) = ; handler . ( ) uriresolver . getURIResolver ; ( != null { String href = getHref ( ; String base = uriresolver base ) ; } return s }<CODESPLIT>Get the Source object for the included or imported stylesheet module obtained from the user s URIResolver if there is no user provided URIResolver null is returned .
String ) if . featOkTst ( Journal_Type jcasType ) . casFeat_title null ) ) return jcasType . ll_cas ll_getStringValue ( addr , ) . casFeatCode_title ; }<CODESPLIT>getter for title - gets Full journal title C
static Val ( if ( o && o instanceof Val ) return Cast . ) return ( o }<CODESPLIT>Convenience method for creating a Convertible Object
protected ( SparseDoubleVector meaning , , ( String : ) if ! term . IteratorFactory EMPTY_TOKEN ) { int dimension = term ; - ; set ( dimension , weighting . weight ( distance , ++ distance ; } }<CODESPLIT>Adds a feature for each word in the context that has a valid dimension . Feature are scored based on the context word s distance from the focus word .
ArrayList > ( try { ( . ) { Log . ( config } viewFetcher . ( null , ; } catch ( e ) ; return } }<CODESPLIT>Returns an ArrayList of all the View objects located in the focused Activity or Dialog .
private E extends > ( WeightedGraph < E > g int vertex { ( SparseDoubleVector weightVec . get ) if ( == null ) ( this { vertex ( == weightVec computeWeightVector ( , vertex ) vertexToWeightVector . put ( vertex , ; return else return ( ) }<CODESPLIT>Returns the normalized weight vector for the specified row to be used in edge comparisons . The weight vector is normalized by the number of edges from the row with positive weights and includes a weight for the row to itself which reflects the similarity of the keystone nod .
static ( [ ] , TypeDescription , VectorizedRowBatch int selectedFields { Math . ( int . ( ) rows length > = ) int = 0 < . length ++ ) int orcIdx = selectedFields fieldIdx readField ( , fieldIdx , fieldTypes . get orcIdx , . orcIdx rowsToRead ; return rowsToRead ; }<CODESPLIT>Fills an ORC batch into an array of Row .
< ICalProperty component ) { return ICalProperty > component . getProperties . values ; }<CODESPLIT>Gets the properties to marshal . Child classes can override this for better control over which properties are marshalled .
public double computeTauAndDivide final int numRows , final [ , final double max tau ; for i = j < numRows ; i d u max d ; = . sqrt ) ; u [ j ] ) - tau ; return tau }<CODESPLIT>Normalizes elements in u by dividing by max and computes the norm2 of the normalized array u . Adjust the sign of the returned value depending on the size of the first element in u . Normalization is done to avoid overflow .
public getEpic String , Map < , Epic > String getJiraBaseUrl ( ) + ( featureSettings getJiraBaseUrl ( ) endsWith "/" ? "" : "/" ) . format EPIC_REST_SUFFIX epicKey ) ; > responseEntity = makeRestCall ) String responseBody = . getBody ) JSONObject issue JSONObject ) parser ) null ) { issue epicMap ParseException ) { error ( "Parser exception , pe ( e { LOGGER . ( "Error JIRA API" } null ; }<CODESPLIT>Get Epic using Jira API
Serializable getLayoutConstraints final PanelModel ) ; ( model layoutConstraints != null ) { . get child ) } return }<CODESPLIT>Retrieves the layout constraints for the given component if they have been set .
public Map , Set < String > getReverseMap ) { Map Entry < Set String > . entrySet String < HashMap < String , > > . ) ; . Entry < , Set String > > entries ) k = me getKey ; Set String > transList getValue ) for ( ) < > entry = rMap ( ; if ( == ) < String toAdd new String ( 6 ) ; toAdd . ( ( , toAdd ) ; } { entry add ( k } return rMap<CODESPLIT>Returns a reversed map of the current map .
public ( String refreshToken ) ) refreshToken != ) Preconditions checkArgument jsonFactory != null != && != null && tokenServerEncodedUrl != the and + ) this . refreshToken = refreshToken ; } finally { lock ; } return this }<CODESPLIT>Sets the refresh token .
void EGLSurface ) ( mEGLDisplay EGL14 EGL_NO_DISPLAY { Log . d TAG , } ( ! . eglMakeCurrent ( eglSurface , eglSurface , ) "eglMakeCurrent failed" ) } }<CODESPLIT>Makes our EGL context current using the supplied surface for both draw and read .
static < final T defaultValue , , final Object ... ) { return defaultValue , ; }<CODESPLIT>Use navigateOrDefault which is a much better name .
void CommerceWarehouseItem ) . removeResult ENTITY_CACHE_ENABLED CommerceWarehouseItemImpl . class , . getPrimaryKey clearCache ( FINDER_CLASS_NAME_LIST_WITH_PAGINATION ) finderCache . ) ; clearUniqueFindersCache commerceWarehouseItem , true ; }<CODESPLIT>Clears the cache for the commerce warehouse item .
private void process ( String output ) MPXJException IOException { reader = MPPReader ( ) ; = reader . read input ; varDataFileName projectDirName int = NumberHelper . m_project . getProjectProperties ) . ) ; { 8 : { projectDirName = ; "FixDeferFix 0" ; break ; } : projectDirName = ; "Var2Data" ; break ; } : { = 112" varDataFileName = "Var2Data" ; case 14 : { projectDirName " 114" ; = "Var2Data" } : { throw new ( file type " + ; } } FileInputStream new input POIFSFileSystem fs POIFSFileSystem is is close ( ) DirectoryEntry root = fs . getRoot ( m_projectDir = ( ) . getEntry projectDirName String , HashMap String ( ; task : mapText ( task . ) ; ( ( DirectoryEntry ) ( , replacements ; replacements . clear ( for ( Resource resource m_project . ( ) ) { . ( ) , replacements ; ( resource . getInitials , ) processReplacements ( DirectoryEntry ) m_projectDir "TBkndRsc" ) varDataFileName replacements , replacements . ( ProjectProperties = . ) ( ) ; m_projectDir true ( ) ( . getProjectTitle replacements ) ( getSubject , ; properties . ( ) ; mapText ( ) ; ( getComments ) , replacements ; , "\005SummaryInformation" ; replacements . clear ( mapText ( properties . , ) ( . ) , replacements ) ( . replacements ) processReplacements "\005DocumentSummaryInformation" replacements FileOutputStream os = new FileOutputStream ( . writeFilesystem ( ) . flush ( ) ) fs close ;<CODESPLIT>Process an MPP file to make it anonymous .
public setRollbackOnly ( final isTraceOn = TraceComponent . isAnyTracingEnabled ; isTraceOn ) ) . entry , , this ) } LocalTransactionCoordinator lCoord getLocalCoord ; ( { ( ; try txService . ) ; catch Exception e ) { . processException ( e CLASS_NAME + , ) IllegalStateException "No transaction" ) ; } } if && tc ) ) Tr ( "setRollbackOnly" ; }<CODESPLIT>Marks the current local or global transaction to be rolled back
static boolean ( content { content contains ) ) return true ; } document not error is content ) ; return }<CODESPLIT>Analyses the content of a 404 response to see if it is legible for retry .
private ListenableFuture < > ( Collection < . > outputBuffers , [ ] serialized ) { . checkArgument ( m_tableTasks serialized . Preconditions . checkArgument . == serialized length ) ; final List < > = ArrayList ListenableFuture < > > outputBuffers . ; DBBPool BBContainer > = outputBuffers . ( int serializedIndex ; for : ) DBBPool = containerIter next ( ; ByteBuffer buf ) ; buf ( [ ++ ] task . ( ; . position ( ; < . BBContainer > valueForTarget . ; if ( . != ) : task . ) valueForTarget filter . filter ) } ListenableFuture > writeFuture = . ( ) ; writeFuture null ) writeFutures ( writeFuture } ( ) ;<CODESPLIT>Finalize the output buffers and write them to the corresponding data targets
isTerminal ( < IAtom , Integer { return graph atomToIndex . get ) ] ; }<CODESPLIT>Is the atom terminal having only one connection .
private AsyncResult Void > createUndeployHandler ( Message < message return Handler Void > ) { handle AsyncResult < > ) failed ) reply ( . putString , ) . "message" , . cause ( ) getMessage ) ) } else { message . reply new ( . "status" ) ; } } ; }<CODESPLIT>Creates a platform undeploy handler .
public PhotoAllContext getAllContexts ( String FlickrException { < > setList new PhotoSetList PhotoSet > ( ) PoolList < Pool > = PoolList Pool ) ; PhotoAllContext = new PhotoAllContext ; Map < , Object = HashMap > ) ; parameters . , ; parameters . ( "photo_id" ) Response response . transport . getPath ( apiKey , sharedSecret ; ( response . ( { new FlickrException ( getErrorCode ( , ) ; } Collection < response . getPayloadCollection ; for ( Element photosElement if setElement . getTagName . ) { PhotoSet pset = ( ) ; pset . setTitle . getAttribute ( ) ; pset setSecret ( "secret" ) setId getAttribute ) setFarm ( ; pset . setPrimary setElement "primary" pset . ( setElement getAttribute "server" ) setViewCount ( ( setElement getAttribute ( ) ) ; pset setCommentCount ( . parseInt ( setElement . getAttribute "comment_count" ) ) ; pset setCountPhoto . ( ( "count_photo" . setCountVideo ( ( setElement . getAttribute "count_video" ) ; ) ; ( setList ) ; else ) . equals ( ) Pool ; setTitle ( getAttribute "title" pool . ( setElement . ( ) pool setUrl setElement "url" . setIconServer setElement . getAttribute ( "iconserver" ) ; setElement . getAttribute ( ) ) ; . setMemberCount parseInt ( getAttribute ( "members" Integer ( setElement . getAttribute ( poolList add ; allContext . ( } } }<CODESPLIT>Returns all visble sets and pools the photo belongs to .
public Map , Object > getFieldData ( < , Object > ) { Map < String , Object propReturn = != null = , ) ( int = i { DBParams FIELD + toString ( i ) = ( String ) properties . get ) ; if strFieldName ) break record = ( ; strFieldName '.' - 1 this ( ( . ( ) ; strFieldName substring ( . ( '.' + 1 } field = null ; record null = record getField ; if ( != null ) propReturn . put ( strFieldNumber getData ( } return propReturn ;<CODESPLIT>GetFieldData Method .
void connect InetAddress int ) { . ) . ( ) ; connect0 ; connectedAddress address ; port ; connected = }<CODESPLIT>Connects a datagram socket to a remote destination . This associates the remote address with the local socket so that datagrams may only be sent to this destination and received from this destination .
private getEscaped ( { pos if ( pos == length { throw IllegalStateException "Unexpected + ; } chars pos ] { case '"' '\\' : ',' case : case '#' : case ' : case case '%' : '_' return ] ; return ( ; } }<CODESPLIT>returns escaped char
static ( String expression if . ( . VALIDATION_MATCHER_PREFIX ) && . endsWith { . ( Citrus . VALIDATION_MATCHER_PREFIX length ( ) , expression . length ) ( ) } expression ;<CODESPLIT>Cut off validation matchers prefix and suffix .
public < TypeElement ( typeElement ) { SortedSet < result ( SortedSet < intfcs typeElement false ) ; < TypeElement > iterator ) . ) Iterator implementingClassesIter implementingClasses ( next ) iterator ( ) ; ( implementingClassesIter . hasNext ) ) c . ( ; if ( result . contains ( ) ) add ( ) } } return ;<CODESPLIT>Return the set of classes which implement the interface passed .
void add ValidationResult &= if ( validate ) ; errors . addAll ( ; warnings addAll ( . warnings }<CODESPLIT>Adds a validation result to this .
public String ( obj ) { buf = new ; MetaFieldInfo toMetaFieldInfoArray ( obj , null ; for ( int = ; < fields i ++ { field = fields ; buf . ( . ; append ( "=" ) if ( actualValue != . ( ( String . { append . value ; append ( '"' ) . append ( . ) ; if ( + < fields . ) . append ) ; } . ) ; }<CODESPLIT>Creates a string for an object based on the MetaField annotations .
String getArrayClassName Class > ) . ) ) return getArrayClassName ( clazz . "[]" ; return clazz . getName ( }<CODESPLIT>Formats the class name with trailing square brackets .
synchronized addBlock ( block ) ( ) } BlockScanInfo info = . ( ; if != null ) . warn ( "Adding " block info info new ( block ; info lastScanTime = getNewBlockScanTime ( ) ; adjustThrottler ( ) }<CODESPLIT>Adds block to list of blocks
String int , ) { ( x getArrayWidth ( ) ) ( y ( 0 || ( y < ) ) { throw new ( x ] [ ; }<CODESPLIT>Gets a tile of the XPM Image .
public final String name String final sizeExpression final Item item new Item , byteOrder ; item . bitLenExpression assertExpressionChars ( bitLenExpression ) ; item sizeExpression = ( ( item ) ; }<CODESPLIT>Add named bit array where each bit length is calculated through expression .
public static ( String strPattern , String , offset , boolean , matchAll ) { input = ) ; Perl5Matcher compileOptions . CASE_INSENSITIVE_MASK ; compileOptions SINGLELINE_MASK ; offset ) = pattern = getPattern strPattern , ) ; if offset <= strInput ( ) ) . offset - ) ; if strInput length ) ) ( ) while ( matcher input ) ) { = matcher . ) beginOffset ( 0 ) ; if ( { return new Double ( match ( ; } if ( matches . ( 0 ) { } 0<CODESPLIT>return index of the first occurence of the pattern in input text
private checkRegisteredServicesByLdapFilter ( filter ) ? > getBundleContext ( ) . ( String , filter if ( isEmptyOrNull ) ) { return ( . { ) getService ( [ 0 ) ; throw new RuntimeException ( filter: " + filter ) }<CODESPLIT>Checks the OSGi ServiceRegistry if a service matching the given filter is present .
public ( DEvent event ) null ( event ; ( != null ) . ( ; } else { "Dropping event for non- managed , ( ) , "class" , getClass ) . getName "event" event ) ; }<CODESPLIT>Posts the specified event either to our dobject manager or to the compound event for which we are currently transacting .
Identity createOverlayManagerGroup { ExtendedIdentifiers . . ICS_METADATA_NS_URI , IfmapStrings . "overlay-manager-group" , ; }<CODESPLIT>Create a overlay - manager - group identifier that is an extended identity identifier .
public DoubleMatrix cholesky DoubleMatrix A = A ( ) int = ( 'U' . rows . , 0 A . rows ) < ) ( info ; } ( > 0 { throw new ( , "Minor " + negative. Matrix positive definite." } clearLower result ) return result }<CODESPLIT>Compute Cholesky decomposition of A
public boolean String className , final String methodName ) new StackTraceElement [ = throwable ( ; if ( == stackElements ) LOGGER ( . stack" false } final = . equals ) ; i = 1 ; < stackElements . i ++ if [ i ] getClassName ) equals ( className ) ) { matchAllMethod true : stackElements getMethodName ( methodName } } ; }<CODESPLIT>Checks the current method is whether invoked by a caller specified by the given class name and method name .
setFlag name String value ) throws IOException name , value ; }<CODESPLIT>set JVM command line flag
Q Position , , Expression ? expr { Expression < ? flag = getType ) + "{0}" , expr ; return queryMixin addFlag , flag ) ; }<CODESPLIT>Add the given prefix and expression as a general query flag
static ( Channel c ) SocketChannel c hostAddress = channel localAddress ( InetSocketAddress ( ; scheme = channel . ( ) . get ( SslHandler . class ) null : , remoteAddress ) }<CODESPLIT>Retrieve the connection information from the current connection directly
public PDPDomain getPDPDomain String throws IOException { SortedSet String > domainRanges ; ( serializedCache != null ) if containsKey pdpDomainName ) = serializedCache . pdpDomainName } boolean = checkDomainRanges ( ) ; { if shouldRequestDomainRanges { u = new URL server + pdpDomainName info {}" u ) InputStream response = u ) xml JFatCatClient . ( ) ; = getDomainRangesFromXML xml if domainRanges null ; ( e { logger ( "Problem request for " pdpDomainName , e throw IllegalArgumentException ( "Invalid PDP " , pdbId = null = < ResidueRange ( ; for : domainRanges SubstructureIdentifier = ( ) ; ( == = ( } if . equals ( strucId . ) ) { throw new RuntimeException ( "Don't take the union of PDB IDs." ; } addAll ( strucId getResidueRanges ) ) return ( , ranges )<CODESPLIT>Get a StructureIdentifier representing the specified PDP domain .
getContext ) { ( != { searchView ( ) ; } else if ( return supportView . ) ; } ( ERROR_NO_SEARCHVIEW }<CODESPLIT>Returns the context the view is running in through which it can access the current theme resources etc .
private isMacroCycle ( ring , { if ( ring getAtomCount ( < 8 ) ( : ring ( ) found = false ( IAtomContainer : == ) continue ; ( . contains bond ) { found = true ( ! found true ; } ; }<CODESPLIT>Check if a ring in a ring set is a macro cycle . We define this as a ring with > = 10 atom and has at least one bond that isn t contained in any other rings .
public > T datastoreToJava ( { ( ) { null result T ) newInstance ) populate ( , result ) result ; } catch ( new ; } catch ( IllegalAccessException e RuntimeException ( e ) ; }<CODESPLIT>Convert a value from Google representation to a Java value
void updateCacheState Map , > { ( ; if cacheEnabled ) { authCacheServiceRef ; else { deactivate ( cc ) }<CODESPLIT>Based on the configuration properties the auth cache should either be active or not .
public static QuerySnapshot ( query , readTime final DocumentSet documentSet final List < DocumentChange > documentChanges ) { return new ) { QueryDocumentSnapshot > documents List getDocuments ( { if ( == { synchronized documentSet { ( == null { documents . } return . unmodifiableList documents ) ; public DocumentChange > ) { unmodifiableList documentChanges ) } ( ) documentSet size ) ; Object o ) ( == ) { true ; } if o null || ( ) != getClass ) ; that ; return Objects ( . && . equals this . size that && Objects . ( getDocumentChanges ( ) ( ) && equals ( getDocuments ( , that . ) } public ( ) Objects hash ( , ( ) , ) ) ; } }<CODESPLIT>Creates a new QuerySnapshot representing a snapshot of a Query with changed documents .
private boolean readSend InH3 OutboxAmp outbox HeadersAmp ) throws IOException MethodRefHamp methodHamp = null ; { methodHamp = readMethod catch ( { log . Level e . ( ) , e ) ( hIn ; true } method = . getMethod ) ; . ) Thread thread Thread . currentThread ) . setContextClassLoader ) ; args readArgs , if ( isLoggable _logLevel ) { , this + " method getName ( + debugArgs ( args {to:" + ", " + ) } SendMessage_N sendMessage = ( method . ( ) method method ) ; = 1000L ; try . offer ) catch Throwable ) { log . e . ; ( log ( Level ) { log FINEST , e ( ) } ;<CODESPLIT>The send message is a on - way call to a service .
private getRemoteFileName ( file ) getProperty ( ( "/" ) ) return . service ) if ( file ( PARAM_REMOTE_PATH ) . ) String file PARAM_REMOTE_PATH . split "/" ) return tmp . length - 1 . getProperty ( PARAM_REMOTE_PATH ) }<CODESPLIT>Checks if the remote file path contains also the remote file name . If it s not specified the name of the local file will be used .
public ( Task task ) final addGroup "buffers" . gauge "inputQueueLength" , ( ) ; gauge "outputQueueLength" new OutputBuffersGauge task ) ) buffers . gauge ( "inPoolUsage" new task ) , OutputBufferPoolUsageGauge task ) }<CODESPLIT>Initialize Buffer Metrics for a task .
doubleClick String { ( rect ) . doubleClick ( fileName ex ) { new QTasteException ( ex . getMessage , ex ) } }<CODESPLIT>Simulates a double click on the specified image of the area .
setDestinationSSECustomerKey SSECustomerKey ( this != null ) { throw new must not be at the same time." ) ; . destinationSSECustomerKey = ; }<CODESPLIT>Sets the optional customer - provided server - side encryption key to use to encrypt the destination object being copied .
onFailure ( Toast makeText ( . getMessage ( ) , . show ; }<CODESPLIT>show any error messages posted to the bus .
private void paintDropLines ( SeaGlassContext g ) { JTable . DropLocation ( ) if == ) } Color color ( Color ) style ( , "Table.dropLineColor" ) ; shortColor = ( ) style get , ) ( color null shortColor ; Rectangle rect getHDropLineRect ( ) if != ) { . x width ( != null { ( , ; setColor color ; . ( x . y rect . , rect height if ( ! loc . isInsertColumn ( && null ) { . ( ) g . rect w , . height ; } rect getVDropLineRect ( ) != null { y rect y ; h ; extendRect ( rect ; g setColor ; g ( rect . y , rect . . height ) ; } ( ! isInsertRow ) shortColor != null { setColor ( shortColor ) ; g . ( x rect h ) ; }<CODESPLIT>Paint the drop lines if any .
DatalogProgram SWRLRule rule ) . this ; ( notSupported ) { . warn + ; . clear ( ) DatalogProgram dp = datalogFactory . ( facts ) dp ; }<CODESPLIT>Translate the swrl_rule Return a datalog program containing the supported datalog facts
inflateAuthnRequest final byte ] ) inflated CompressionUtils ( decodedBytes ) ; if ( ! ) ) { ; } return ( decodedBytes }<CODESPLIT>Inflate authn request string .
static ( String final File , Properties , final IFilesystemFramework filesystemFramework { if ) { generateProjectPropertiesFile name , propertyFile , properties , true ; propertyFile , filesystemFramework ; }<CODESPLIT>Create and generate file with the given properties if not null
static synchronized ( ) { final LogContext = . LOG_CONTEXT ; Configurator = embeddedLogContext . getLogger ( ) . ) ; LogContextConfiguration ( configurator ) getLogContextConfiguration clearLogContext ( ; if configurator instanceof { clearLogContext ( LogContextConfiguration ) ; } else { final List > loggerNames = . embeddedLogContext . ( ) ) String : ) { getLoggerIfExists ( ) ; ( null final Handler [ . if ( handlers != ) { for ( handler handlers { handler . close ; } . . ) ; logger . setUseParentHandlers ( setLevel ( Level ) } } }<CODESPLIT>Attempts to clear the global log context used for embedded servers .
execute ( timeUnit { return ( delegate . execute ( timeout , ; }<CODESPLIT>Executes the API request in a synchronous fashion using the given timeout .
public InputStream getInputStream HttpServletRequest MutableObject < [ > sourceMapResult ) IOException { byte [ ] bytes = this . bytes = this String filename = filename = null if ( bytes != null result = ByteArrayInputStream bytes ; ( sourceMapResult null && > 0 setValue ) } } if ( filename null ICacheManager cmgr ( IAggregator getAttribute IAggregator ) ( ) file new ( cmgr filename ) ; sourceMapSize 0 { result new FileInputStream ( file ; else data ; ObjectInputStream new ( FileInputStream ( try CacheData ) is . ) } ( ) { throw IOException ( ) , { IOUtils . is ; } bytes = data . ; sourceMap data . null sourceMapResult . sourceMap ; = new bytes else ( ) } result }<CODESPLIT>Return an input stream to the layer . Has side effect of setting the appropriate Content - Type Content - Length and Content - Encoding headers in the response .
public cacheIncludeAndIgnore ( table ) ( ) ) { ( ArrayList ( ) for ( : ( ) { getIgnoreByMatches ( ) . ( } getIncludeByMatches ) == { ( new WebElement > ) ( getIncludeOnlyRowsMatching ( ) { getIncludeByMatches ) . addAll . findElements by ) ; } } }<CODESPLIT>Does the table comparison
public > List < InlineDiffChunk ( < , List E > { null ) { this inlineDiffDisplayer . ( this . diffManager . ( previous , next , } e ( ) return null ; }<CODESPLIT>Builds an in - line diff between two versions of a list of elements .
public CompletableFuture MessageSet getMessagesAroundUntil ( TextChannel , Predicate < around > future = new CompletableFuture ( ) channel getApi ) . getThreadPool ( ) ( ) . submit ( ) -> List < Message new < > ( ; Optional Message untilMessage = channel , around messages ) ( condition ) untilMessage ) . ( Collections . ) } catch ( Throwable t ) future . ( t } ) ; return ; }<CODESPLIT>Gets messages in the given channel around a given message in any channel until one that meets the given condition is found . If no message matches the condition an empty set is returned . The given message will be part of the result in addition to the messages around if it was sent in the given channel and is matched against the condition and will abort retrieval . Half of the messages will be older than the given message and half of the messages will be newer . If there aren t enough older or newer messages the halves will not be same - sized . It s also not guaranteed to be perfectly balanced .
public findSipApplicationAnnotation ( InputStream stream [ rawClassBytes new byte stream ) stream . rawClassBytes ; one = ( rawClassBytes , ; boolean two = contains ; two ) return true ; } ) { } return false }<CODESPLIT>Determine if this stream contains SipApplication annotations
protected < > buildJobDataMap ( final JmxCommand jmxCommand , ) < String > jobDataMap HashMap String , Object ( ) ; { = ; : ( ) { process jobDataMap , valueOf ( ++ ] ) ) } for ( : this . ) ) { . ( . valueOf ( params [ ind ] ) ; } e ) ( ; } ; }<CODESPLIT>Initialize the JobDataMap with the Program arguments
private V ( buf ) getNextToken ( ) if . tokenType != TokenType { IllegalStateException ( " + t } buf . append ( ) ( . tokenType . ) { } else t . tokenType == TRAILING_BACKSLASH Vopt ( buf ) ; }<CODESPLIT>Vopt = EOL V
( String final String sValue ) sValue != null ) sName , ; }<CODESPLIT>Add the passed header as is .
< N max List < ) { return cal ( DoubleStream :: ; }<CODESPLIT>Max number .
public ( ) throws InvalidArgumentException - ) ; } { final = ) ; proposalResponsePayloadDeserializer getExtension ) . ( ) ; return statusReturnCode } catch ( InvalidArgumentException e ; Exception throw InvalidArgumentException e ) ; }<CODESPLIT>getChaincodeActionResponseStatus returns the what chaincode executions set as the return status .
( < Env < AttrContext > > queue ) { queue , ; }<CODESPLIT>Generates the source or class file for a list of classes . The decision to generate a source file or a class file is based upon the compiler s options . Generation stops if an error occurs while writing files .
public create ( final String , String version final < , > parameters ) { new ( primary , sub , parameters ; MimeTypeParseException throw ( "Failed to create versioned mime type: " + primary , ex ) ; }<CODESPLIT>Creates an instance with all data and exceptions wrapped to runtime exceptions .
static long long defaultValue ) { toNullableLong ( value ) return result != ( long ; }<CODESPLIT>Converts value into integer or returns default when conversion is not possible .
public setIsolation ( iso JspTagException { if ( TRANSACTION_READ_COMMITTED . ( iso ) isolation TRANSACTION_READ_COMMITTED ; if ( equals iso ) { isolation = TRANSACTION_READ_UNCOMMITTED ; else iso isolation Connection } if ( . equals ( ) ) { isolation = Connection ; throw Resources . ( ; }<CODESPLIT>Setter method for the transaction isolation level .
void Node ) { initTraversal ; = root ; pushScope root ) ) ; popScope ( ; } Error | Exception ( unexpectedException ) } }<CODESPLIT>Traverses a parse tree recursively .
CollectionRequest < > String ) path String ( "/workspaces/%s/tags" workspace ) ; return ( , Tag , path , "GET" }<CODESPLIT>Returns the compact tag records for all tags in the workspace .
CriteriaOnlyFindQuery ) return ! peek isCliQuery ) , JsonParameter ( ( ) setOperation ( Operation . FIND , peek ) ( ) ) ; }<CODESPLIT>A find query only given as criterion . Leave it to MongoDB s own parser to handle it .
private ( Node < E E = ; final < E = prev ; item null l . = null ; last prev ; ( prev == null . next null ; ++ ; return element }<CODESPLIT>Unlinks non - null last node l .
static ( Hashtable < Object , userDn char [ ] pwd { env , ; . put ( Context , userDn ) ; env put String ( ) ; }<CODESPLIT>Sets the environment properties needed for a simple username + password authenticated jndi connection .
( name tag ) { return ( SERVICE "createTeam" name , ; }<CODESPLIT>Create a new ranked team with the specified name and tag
private void checkFilePattern s throws ProblemException { Pattern p ; File { p . compile ) } else if File . separatorChar '/' p Pattern ) { new platform the unsupported File . + as file separator character. add support for it!" ; } p matcher ; ( m . matches ( ) ) new ProblemException \"" + + not file ) ;<CODESPLIT>Verify that a source file name is valid .
void close ) ( Entry < ShardingTransactionManager > entry : transactionManagerMap entrySet ( ) . ) ( ) }<CODESPLIT>Close sharding transaction managers .
protected String getBar percentage { StringBuilder new ) ( sb . "% [" for int i = ; i < ) if || - ) { append "=" ) else if i percentage - 1 sb . append ">" ) else sb . append ( " ) ; sb . "] " ; sb toString ) ;<CODESPLIT>Generates the progress bar for the given percentage
private ( T element , ) Set > dependencies = . get dependencies ) for ( T dependency dependencies ) { resolve ( dependency , result } . result ( element ) }<CODESPLIT>Resolves an element .
camundaOut String ) modelInstance ( CamundaOut . class ) ; param ; param setCamundaTarget target ) ; addExtensionElement ) ; return ; }<CODESPLIT>Sets a camunda out parameter to pass a variable from a sub process instance to the super process instance
createArgumentsReference ( { . name ; if ( isAddingTypes ( ) { result . argumentsTypeSupplier ) } return }<CODESPLIT>Creates a reference to arguments with the type specified in externs or unknown if the externs for it weren t included .
Date String ) date = ; df new SimpleDateFormat ( "yyyy-MM-dd" ; try ( ) ; catch ( ParseException { System . out println ) ; } ; }<CODESPLIT>Takes a String and converts it to a Date
int cusolverRfSetNumericProperties double zero , double return checkResult cusolverRfSetNumericPropertiesNative ( handle , boost ; }<CODESPLIT>CUSOLVERRF set and get numeric properties
Object quoteIfString Object { return obj instanceof ( String ) : ; }<CODESPLIT>Turn the given Object into a String with single quotes if it is a String ; keeping the Object as - is else .
public Object > deleteUidAsync ( String name uid_type = UniqueId . ( ) ( uid_type case METRIC : metrics . deleteAsync ( name : tag_names ) : . deleteAsync name ) default : throw new " + uid_type ) ; }<CODESPLIT>Attempts to delete the given UID name mapping from the storage table as well as the local cache .
boolean int ) ( config commandLogging { . d ( config commandLoggingTag , ; return scrollList ( waiter . ( index , . DOWN , false ; }<CODESPLIT>Scrolls down a ListView matching the specified index .
protected ( MethodSymbol meth , treePath result ( . get meth ) ( null ) ( != ) result setTreePath ( treePath ; } else { result new this , put meth result ; }<CODESPLIT>Create the AnnotationTypeElementDoc for a MethodSymbol . Should be called only on symbols representing annotation type elements .
Object call ... arguments ) throws , IOException { return ( method , 0 , ; }<CODESPLIT>Call a method on the remote Pyro object this proxy is for .
static String ( total ) { total == 0 ? : 1F value return format ( average }<CODESPLIT>Returns value converted to percentage format .
static extends > T > ( < > expr , float , float expr getType ( , SpatialOps . expr , ConstantImpl . ( ( deltay ) ; }<CODESPLIT>Translates the geometry to a new location using the numeric parameters as offsets .
private byte ( String url ) throws TVRageException { new httpGet . "accept" , ; DigestedResponse response = . requestContent ( , CHARSET ; response . getStatusCode 500 { ( . HTTP_503_ERROR ) ; else ( . getStatusCode ) >= 300 throw new ApiExceptionType . , url ; } return ) getBytes ) ; } catch ( ex ) ( ApiExceptionType url ex ) } }<CODESPLIT>Get content from URL in byte array
static boolean ( ) for value ( ) { if ( ! Character ) { false ; } } return }<CODESPLIT>Returns a boolean indicating whether the given string value is numeric .
RequestMapping = , "/foo" ) String String > getFoo ( { final fooObj = new HashMap > ( fooObj . put ) ; return ; }<CODESPLIT>Controller to just support pinging .
protected fireArrayStartEvent ( JsonConfig jsonConfig . for ( listeners jsonConfig getJsonEventListeners ) . iterator ; . ( ) ; ) { JsonEventListener listeners ; . ) ; } catch ( RuntimeException e ) { log ) ; } } }<CODESPLIT>Fires a start of array event .
static extends > ( SneakyRunnable runnable { return ( ) { @ RuntimeException > castedRunnable = ( SneakyRunnable > ) runnable ) ; ; }<CODESPLIT>Sneaky throws a Runnable lambda .
public Domain update final , final String id , final < String Object params ParseException , Exception ( != null id != null final String = response . ( domainsUri params ) JSONObject jsonObject = toJSONObject ( client get , null ; return new ( client ) }<CODESPLIT>Convenience method to return a Domain .
public Stream getResourceTypes ( final Event event ) { . . observation . Event ) { final . . . api . observation . = ( org . jcr . . Event ) Stream Builder < NodeType types = . ( ) ( final NodeType getMixinNodeTypes ) . add ( types . ) ( map :: getName ; catch ( final RepositoryException e ) throw new e } return empty ( ; }<CODESPLIT>Get the RDF Types of the resource corresponding to this JCR Event
void processDefaultHeader ParserContext context { ( : . ) ) if ( hasHeaderSeparator ( ; } line , getDocumentModel ) ) }<CODESPLIT>Process the header of the file .
Connection getConnection String String , ) SQLException alive = ( ) ; if createConnection ( , username ) ; } return }<CODESPLIT>Retrieves the connection object . If the connection doesnt exist or is dead it will attempt to create a new connection .
static renderPad final , final pad final newLine ) { renderNewLine builder , ; < pad ; i ) { builder . ; } return ; }<CODESPLIT>Render some leading spaces onto a line of html .
public < OvhLine ( city , , , ) IOException = "/xdsl/eligibility/lines/active" sb = qPath ; HashMap < , Object > < , ; , , city addBody o , ) addBody , "street" , ) ; addBody ( , "streetNumber" resp = exec ( qPath , "POST" . toString ( o ) return ( , t5 ;<CODESPLIT>Get the active lines at given address
private evaluateExpressionStack ( final Deque String final < ) { ( ! isEmpty { push getBooleanResultAsString operators . ( ) , values . pop ( ) , ) ( pop ( ) ) }<CODESPLIT>This method takes stacks of operators and values and evaluates possible expressions This is done by popping one operator and two values applying the operator to the values and pushing the result back onto the value stack
public write ] buffer , int offset , int throws long requestExpireTime = _requestExpireTime ; requestExpireTime > && < . currentTime ( ) ) ( ) ; ClientDisconnectException ( L "{0}: request-timeout write ( , CurrentTime . ( ) requestExpireTime ) ; ( _writeLock ) CurrentTime ( long expires = do ( buffer } result . TIMEOUT_EXN CurrentTime getCurrentTimeActual ( ) < expires ) } if ) ) ; } return ; }<CODESPLIT>Writes to the socket .
public ( float r , g ) float = { , g , ; normalize ) gl glEnable ( . GL_LIGHTING ) gl . glEnable ( GL2 GL_LIGHT0 gl . . , , ) }<CODESPLIT>Sets the RGB value of the ambientLight
( { null i ; i < fields . length multiChoiceCount . multiply fields [ i ] . setMultiChoiceCount ) ; return ; }<CODESPLIT>Set the multiChoiceCount for this tuple
void delete APIException { HttpResponse response delete ( getUrl ( ) "?force=" + forceDelete . throwIfNotOk }<CODESPLIT>Creates this directory vi the Algorithmia Data API
protected addNameToApplicationMap ( name ) getApplicationName ( ) if == null ) return String = applicationMap ( appName ) if ( list == null String newList String ; = applicationMap ( appName , ; if == null ) list add ( name ) }<CODESPLIT>Adds the metric name to an application map . This map is not a complete list of metrics owned by an application produced metrics are managed in the MetricsExtension
public Envelope ( connection , TableLocation , String geometryField if ( geometryField . isEmpty ( < String > geometryFields connection location ) . ( ) ) { throw "The table location " field, then the extent + ) = 0 ; ResultSet rs = . createStatement ( ( ST_Extent(" . ext FROM location if rs next ( ) ) return ( ( Geometry rs . getObject 1 . ( ) ; } throw new SQLException ( "Unable the it may ) }<CODESPLIT>Merge the bounding box of all geometries inside the provided table .
private void doListGet final JsonObject > ) final String name message . body ( ) . getString ( "name" ) null ) reply ( new ) "status" , ) . putString ( "message" name specified." ) return } Integer index message . ( ) ) ( == null { message . ( ( ) ( "status" . ( "No ) ; } . ( new ) { public ( { data . ( formatKey ( name ) ( ) ; new < < > AsyncResult < Object > ( . ) ) { message ( new ) "status" "error" ) putString "message" , result . cause ( . getMessage ) ) } message . new JsonObject . "ok" ) ( "result" , ( ; } ;<CODESPLIT>Handles a list get .
public PlotCanvas ( id , double ] data ) Histogram histogram . setID ( id [ ] lowerBound = Math min data ) ; double ] = { Math data ) , } double [ = histogram . getHistogram ) ; int i freq length ++ ) { if i upperBound ] { = freq i [ } PlotCanvas canvas new ( lowerBound , upperBound ; canvas ( 0 . ( canvas . histogram ) ; canvas ; }<CODESPLIT>Create a plot canvas with the histogram plot .
public static Pair List > , List < Tuple > > Tuple > , ) if 0 || proportion 1 ) { throw ( 0.0 - ) ; } ( proportion 0.5 proportion 1 ; } < > ) < > largeList new < > ) int smallListSize Math . trainingData size ) int ct 0 Set Integer = < ( ; ( < trainingData ( ) indices . ( ) { index int ( . random ) ( trainingData size ) 1 while ( ( index = ( ) Math . random ( * ( . - 1 ; indices ( index ) ; . ( indices ( . ( trainingData get ) collect ( Collectors ) range ( , trainingData size ( ) ) filter x -> ! . x ) ( largeList add ( trainingData . get ( i ) ) ; ImmutablePair smallList , )<CODESPLIT>Shuffle the data and split by proportion
public static void getScreenShotABGR ( BufferedImage out ) { WritableRaster wr ) ; db DataBufferByte wr ) ; byte ] cpuArray = db ( ; . clear ) ; bgraBuf get ( ) . ( int width wr getWidth . ) for ( y 0 < / 2 { for x ; ++ ) int = y + * ; outPtr ( height - * width x ) 4 ; b1 cpuArray + 0 ] ; byte g1 inPtr + 1 ] byte = [ + 2 a1 3 ] byte = cpuArray outPtr + 0 byte [ outPtr + ] ; byte = cpuArray outPtr = ] ; [ + = ; cpuArray [ ] b1 outPtr ] = ; cpuArray [ outPtr 3 ] = ; cpuArray [ ] = a2 ; cpuArray inPtr ] = b2 ; cpuArray [ inPtr + g2 ; cpuArray inPtr = r2<CODESPLIT>Good format for java swing .
public Pair < int [ ] [ ] int ] documentToDataAndLabels ( > ) int docSize = document ) int [ ] [ ] [ data = int [ docSize ] ] [ ] int ] new [ ; if reverse ( document ) ( j = j ; j ++ ) < String CRFLabel = , featureFactory ) List List < String > asFeatures ) ; for int 0 , fSize = features ( ) ; fSize ++ { Collection > cliqueFeatures k ) j [ k ] = cliqueFeatures . size ; int m String feature : { index featureIndex indexOf feature ) ; >= [ ] [ m ; m ; } ( < length [ ] f = ] ; System arraycopy [ j ] [ ] 0 , , , m ) data [ k ] = f IN wi = document ( ) ; labels [ = . wi . get class ) ; if ( . useReverse ) { reverse ( ) ; } return new Pair [ ] int [ ] , }<CODESPLIT>Convert a document List into arrays storing the data features and labels .
public synchronized < ? > > locateAll ( final ( throw new "serviceName cannot ) } List < < ? > classes ArrayList Class > ( ( != List Callable < ? > > factories . get serviceName ) ; l { for Callable Class < ? l try { . add ( c call ( ) catch ( ) } return classes ; }<CODESPLIT>Finds all providers for the given service .
String ByteBuf buffer ) throws { buffer bytesBefore STRING_TERMINATION ) if ( 0 new IOException termination found" ; String = buffer . ( buffer . readerIndex ( , StandardCharsets . length 1 ; result }<CODESPLIT>default visibility for unit test
public addCase ( ) if ( null new cannot ; JSType ( ; ( cases == ) cases = ] else oldCases cases new JSType . + 1 ; System . , 0 , cases 0 , . length } . parent = this ; . siblingPosition cases length ; cases newCase siblingPosition = newCase ;<CODESPLIT>Add a case to the variant . Note that every variant must have at least one case .
public summarizeState ( { StringBuilder ) ; . "clipVol=" ) . append _clipVol ; append ( ) ; int 0 ; for ( ) if 0 . ( ", " ; . ( ) ; } return ) . toString ( ) }<CODESPLIT>Returns a string summarizing our volume settings and disabled sound types .
private < String > ( Pattern keyPattern ) { String > > ( for Object it = props keySet ( ) ; . ) = String next ) ; = matcher key ) ; if matcher . matches ( ) { = group 2 ; String propertyValue props . getProperty ( ) ; ( id propertyValue ; } return ;<CODESPLIT>Returns the map where the key is the 2 group of the pattern and the value is the property value
long rawUncompress long inputSize , long IOException { impl . rawUncompress , inputSize ; }<CODESPLIT>Zero - copy decompress using memory addresses .
write byte ] int off ) this . checkIncreaseArray ( ) ; off , this . buffer this . , . pos += ; }<CODESPLIT>Writes a byte array content into the stream
final ( ProjectGlobalHealthCheckName healthCheck healthCheckResource < > ) { PatchHealthCheckHttpRequest request PatchHealthCheckHttpRequest . healthCheck ? : healthCheck . toString ) ) . setHealthCheckResource ( healthCheckResource ) addAllFieldMask ) return ( ) ;<CODESPLIT>Updates a HealthCheck resource in the specified project using the data included in the request . This method supports PATCH semantics and uses the JSON merge patch format and processing rules .
initializeNoxItemMargin TypedArray noxItemMarginDefaultValue = . R . dimen default_nox_item_margin ) getDimension ( R . . nox_item_margin , noxItemMarginDefaultValue ; setNoxItemMargin ( noxItemMargin ; }<CODESPLIT>Configures the nox item default margin used in NoxConfig Shape and NoxItemCatalog to draw nox item instances during the onDraw execution .
OperationResult failed long eventIndex , Throwable return new ( index , error , ; }<CODESPLIT>Returns a failed operation result .
public InsnList ifIntegersEqual InsnList lhs InsnList action Validate . ( ) notNull ( ; Validate ( ) ; ret = new InsnList notEqualLabelNode new ret lhs ; ret ( ) ; . add ( JumpInsnNode Opcodes . IF_ICMPNE ) ret . action ) . add notEqualLabelNode ) return ret }<CODESPLIT>Compares two integers and performs some action if the integers are equal .
public FormatOptions of flags int width precision if checkFlagConsistency flags UNSET ) throw new "invalid 0x" + Integer toHexString ( flags if ( width && != UNSET throw IllegalArgumentException ( + ) if ( ( < 0 || precision MAX_ALLOWED_PRECISION ) ) { throw new IllegalArgumentException ( "invalid precision: + precision ) return new , precision ) ;<CODESPLIT>Creates a options instance with the given values .
void tripleClick Coordinates p , "triple click" ) ; . mouseAction ( p . y , , . LEFT }<CODESPLIT>Triple click is an Opera specific way of selecting a sentence .
void TypedArray ) placeholder = . ( . styleable . nox_item_placeholder ; if placeholder getContext ( . getResources ( getDrawable ( R . . setPlaceholder ( placeholder ; }<CODESPLIT>Configures the placeholder used if there is no another placeholder configured in the NoxItem instances during the onDraw execution .
public ( DependencyExplorerOutput output , invalidKeys . prunedGraph . GraphPruner output . ) for ( ? key invalidKeys . ( ) ) prunedGraph . remove ( key ; removeBinding ( ( . ( ) }<CODESPLIT>Prune all of the invalid optional keys from the graph . After this method all of the keys remaining in the graph are resolvable .
PersistentResourceXMLDescription getSimpleMapperParser ) ( . Version VERSION_1_0 { return ; } else if Version . ) ) simpleMapperParser_1_1 ; } return }<CODESPLIT>1 . 0 version of parser is different at simple mapperParser
public getAbsoluteTemplateURI String , boolean includeExtension { FastStringWriter buf ( ; . substring ( 1 ( ) ; . ( SLASH > ) buf . append ( SLASH int i = lastIndexOf SLASH ( tmp . 0 ) append ) buf append . substring i + 1 length ) ) ; ( SLASH_UNDR . append ( , templateName ( ; } if ( includeExtension ) { . append ( ) ; } String uri = buf toString ( ) buf ) return uri }<CODESPLIT>Used to resolve template names that are not relative to a controller .
protected scanResourcePaths ) IOException , SAXException { Set > context ; if != null for String path : ) { if path ( ) if startsWith "/WEB-INF/lib/" } if ( endsWith ( { scanResourcePaths ( path ; } else if path . ) { if path endsWith ) ) { parseTld ( path } } else . ( ) path ) ; } }<CODESPLIT>Scan web application resources for TLDs recursively .
boolean duringDrag SVGPoint SVGPoint , , inside if ( != null ) { startPoint , , evt ) ; } return }<CODESPLIT>Method called during drags .
private PGPKeyRingGenerator ( String userId password , keySize { . trace int)" . ( "User {}, {}, Size: , userId , password null ? set" : "********" , keySize ; PGPKeyRingGenerator generator null try ( RSA key pair ( ) ; generator1 new ( BigInteger ( , ( 12 ) LOGGER . "Generating BcPGPKeyPair signingKeyPair = BcPGPKeyPair PGPPublicKey . RSA_SIGN generator1 , Date ( ) ; LOGGER debug ( "Generating Encyption ; BcPGPKeyPair encryptionKeyPair BcPGPKeyPair . , generator1 ( ) ) ; ( Signature Key Properties" ) ; PGPSignatureSubpacketGenerator = new PGPSignatureSubpacketGenerator signatureSubpacketGenerator . setKeyFlags ( SIGN_DATA | KeyFlags ) signatureSubpacketGenerator setPreferredSymmetricAlgorithms getPreferredEncryptionAlgorithms ) ; setPreferredHashAlgorithms ) ; . setPreferredCompressionAlgorithms false getPreferredCompressionAlgorithms ( ) ) . debug Encyption Properties" . setKeyFlags KeyFlags KeyFlags . ENCRYPT_STORAGE ; LOGGER ( "Creating PGP Key Ring ) = new PGPPublicKey RSA_SIGN , , new ( . get ( . ) signatureSubpacketGenerator generate ( ) , , new ( PGPPublicKey , . SHA256 ) , new ( ( password ) ) ) ; . addSubKey ( ) null ) } catch PGPException e ) { LOGGER . e . getMessage ) ; generator } return }<CODESPLIT>creates and initializes a PGP Key Ring Generator
public getDateFromString ( final String final ) try df = buildDateFormat pattern ) dateString } ( ParseException e ) throw new DateException ( String . format "Could %s pattern ) ) ; }<CODESPLIT>Get data from data string using the given pattern and the default date format symbols for the default locale .
public remove ( key ) ) { if ! containsKey ( key ) . key ) return null ; Object retval ; Map newMap ) newMap ( ) retval = remove ( key } _cacheL1 ; _cacheL2 . clear ; return retval ; }<CODESPLIT>This operation is very expensive . A full copy of the Map is created
private String ( Cmdb cmdb String itemType null String = cmdb ) = . getConfigurationItemType ) String = hpsmSettings . getAppSubType ( ) String hpsmSettingsType hpsmSettings . getAppType ( boolean typeCheck = ; subTypeCheck ( "" . equals ; } if ( equals hpsmSettingsSubType ) subTypeCheck ; if subTypeCheck { subType && . getAppSubType ( ) { itemType = ; subType null && subType equals ( . getCompSubType ( ) ) itemType = COMPONENT_TYPE else subType null && equals ( ) ) ENVIRONMENT_TYPE } } else if ( typeCheck ! subTypeCheck ) type != null && hpsmSettings . getAppType ) { = APP_TYPE else ( type . ( ) ) ) { = else if != null . { itemType } { if null equals ( getAppSubType ) && null && type ( hpsmSettings getAppType ( ) ) { itemType } if subType != null equals ( hpsmSettings . ( ) && type != null && . equals ( ( ) ) COMPONENT_TYPE ; if ( subType && . equals ( getEnvSubType ( ) type != null && type . getEnvType ( { itemType = } return }<CODESPLIT>Returns the type of the configuration item .
public void final List < String > , Map < String String _attributes , final String _text throws SAXException _tags . == String . 0 ) if equals ( ) . = _text else if ( value ) ) { this . fileApplication ; } else ( equals ( ) ) { . ( ( ) ( "definition" equals ( _tags 0 ) { final = . this . definitions . ) - 1 ; curDef _tags subList _tags size ) _attributes ; throw new SAXException ( "Unknown XML " + " for: . ) ; }<CODESPLIT>Read event for given tags path with attributes and text .
public getSQLUpdate boolean ) { String = this . makeTableNames ( keyArea = this . getBaseRecord getKeyArea ( 0 ) boolean = ? true ( . TEMP_KEY_AREA , true ) = this . ( . sFilter = keyArea . ( . , bUseCurrentKeyValues null true true ) ; . > ) . getBaseRecord ( ) . SQL_UPDATE_TYPE , bUseCurrentValues if ( strSetValues length ) == 0 ) null ; strRecordset = "UPDATE + strRecordset + " + sFilter return strRecordset }<CODESPLIT>Get the SQL Update string . UPDATE table SET field1 = value1 field2 = value2 WHERE key = value
public synchronized Object ... objects ) { for ( { < ? { verifyClass Class ? > ) ) ; } { = EasyMockMethodInvocationControl . ( if invocationControl { . verify ; } { isNiceReplayAndVerifyMode ( ) ! isEasyMocked ( ) { try org easymock . EasyMock ) catch ( e ) { throw RuntimeException ( mock not a , ; } } } }<CODESPLIT>Switches the mocks or classes to verify mode . Note that you must use this method when using PowerMock!
public mapTileRequestFailed ( pState { if ( mTileNotFoundImage != { pState mTileNotFoundImage , NOT_FOUND ) ( Handler handler : ) { if handler ) handler ) } { Handler : mTileRequestCompleteHandlers if ( != ) { handler . ( MAPTILE_FAIL_ID ) ; } } . getInstance ) ) Log . d ( IMapView LOGTAG , MapTileIndex ( getMapTile ) ) ; }<CODESPLIT>Called by implementation class methods indicating that they have failed to retrieve the requested map tile . a MAPTILE_FAIL_ID message is sent .
static validateFactoryAndClass ( fd , classId , ) { ( != ( ) throw new "Invalid Expected: " fd . getFactoryId ( " factoryId " ; if ( fd getClassId ( ) { throw ( classId! Expected: " fd . ) + + " in " + ) ; }<CODESPLIT>Validates if the given factoryId and classId match the ones from the fieldDefinition
public ( InputComponent < ? , addColon String label = . getLabel == { = input . getName ) ; } if ( addColon ! label endsWith += COLON ; ; }<CODESPLIT>Returns the label for this component
final ( View final int View = convertView ; if ! ( view = new PlaceholderView getContext ( ; } view ) ; return ; }<CODESPLIT>Inflates an invisible placeholder view with a specific height .
void ) Exception . info c "stopService" "Stopping LdapServer" ) ; . server . c "stopService" , "Stopping DirectoryService" ; service . shutdown ( ; "stopService" , "Ldap ; }<CODESPLIT>Stop the LdapServer and the Directory service . Use for JUnit teardown . If the service is not stopped then future instances with the same name cannot clean up the file directory .
setCacheMinutes ( ) if ( - iMinutes = ( iMinutes ) { timerCache null ) { cancel ( ; null this ; { ( timerCache ) timerCache . ( ) ; this startCache ) ; new DBTimerTask ; = new java . util . Timer ( ; . timerTask , * ) ; } }<CODESPLIT>This will set this database to start caching records until they haven t been used for iMinutes minutes .
protected void propagateOnEnter GVRPickedObject { GVRSceneObject = . getHitObject ( ; GVREventManager eventManager = getGVRContext ) . getEventManager ( . contains SEND_TOUCH_EVENTS ) ) ( ( EventOptions SEND_TO_LISTENERS ) ) { eventManager ( this ITouchEvents class "onEnter" hitObject , ) ; if ( EventOptions ) { eventManager sendEvent ( hitObject ITouchEvents , "onEnter" , hit if mEventOptions ( ) && != ) { eventManager ITouchEvents . class , , ) ; } if ( mEventOptions EventOptions . ) { mEventOptions contains EventOptions . SEND_TO_LISTENERS ) eventManager , IPickEvents class , , , ) ( contains ( EventOptions . ) { sendEvent , . , "onEnter" , hitObject ) ; . ( EventOptions ) && != ) ) ( mScene , IPickEvents class hit }<CODESPLIT>Propagate onEnter events to listeners
java . . GetSendQuotaResult . amazonaws handlers . < GetSendQuotaRequest , GetSendQuotaResult > getSendQuotaAsync ( GetSendQuotaRequest ( , asyncHandler }<CODESPLIT>Simplified method form for invoking the GetSendQuota operation with an AsyncHandler .
short ) OtpErlangRangeException long l ) final short i = short ) l ) { throw OtpErlangRangeException ( large for short: ; } return ; }<CODESPLIT>Get this number as a short .
private MjdbcSQLException String reason , String SQLState int , SQLException cause { MjdbcSQLException result = null ; String = getSqlState sqlStatePrefix = ( sqlState ) ) { = ( 0 2 ( . SQL_STATE_PREFIX_BAD_SQL_GRAMMAR ( sqlStatePrefix ) == result = new BadSqlGrammarException ( reason , vendorCode ) ; else SpringExceptionHandlerConstants . contains ( true { new , vendorCode ) if ( SQL_STATE_PREFIX_DATA_ACCESS_RESOURCE_FAILURE sqlStatePrefix ) new DataAccessResourceFailureException reason , SQLState ) ; } else SpringExceptionHandlerConstants . SQL_STATE_PREFIX_TRANSIENT_DATA_ACCESS_RESOURCE_EXCEPTION . contains ( true ) { result reason SQLState ) ; . contains ( ) == true ) { = new , ) } return result ;<CODESPLIT>Checks SQL state and tries to convert it into Spring SQL Exception . This implementation is vendor free .
public matches ( name ) == null ) return equals ( "" ) ( null ) all . equals ) ; } if ) return middle start != ! . startsWith ) ) false ; } return null . endsWith ( end ) }<CODESPLIT>Checks if Simon name matches this pattern .
nslimitselector ( selectorname nslimitselector new nslimitselector ( ) ; obj . nslimitselector response ( ) obj . get_resource ) ; return ; }<CODESPLIT>Use this API to fetch nslimitselector resource of given name .
public int ( [ ] eqn double [ ] double = ; double b = ; double = ] int rc 0 ( == 0f ) { if == 0f ) - ; ] = - b { b - * * if ( < 0f ) ; d Math . [ rc ( - b a * ; != 0f ) { res [ rc ] = ( b - d ) / ( a 2f ) ; } res rc ) }<CODESPLIT>Solves quadratic equation
Set > getAllTerms ( final Term ret new HashSet < Term ( ) : { ( final Statement stmt sg . getAllStatements ( ) ) { . ) ; } ret ;<CODESPLIT>Returns the set of all terms contained within the document .
public void cancelCopy ( CopyOperationImpl op SQLException { ( hasLock op ) new ( . tr ( "Tried inactive operation" ) , PSQLState . OBJECT_NOT_IN_STATE ; } error = null ; = 0 ; { ( CopyIn { this ) , "FE => CopyFail" byte ] msg . "Copy cancel requested" ) ( 'f' pgStream ( ) ; pgStream send msg ) ; . ; . flush ( ; try { processCopyResults ( op ) ; } SQLException { ++ ; error != = se ; ( ( next = ( ) ) { e = setNextException ( error } = ; } ( hasLock ( ; ( { sendQueryCancel ( } catch IOException throw ( . operation" . CONNECTION_FAILURE , ioe { synchronized ( ) ( hasLock ( op ) unlock ( ) } } } ( op { if ( errors { throw new PSQLException . ( "Missing expected error copy request" PSQLState . COMMUNICATION_ERROR else if errors 1 ) new PSQLException ( GT ( "Got error responses to single copy cancel valueOf ( , PSQLState . ) }<CODESPLIT>Finishes a copy operation and unlocks connection discarding any exchanged data .
. google . . axis o . AttributeType [ ] ) { ; }<CODESPLIT>Gets the requestedAttributeTypes value for this TargetingIdeaSelector .
public Annotation v ) ( featOkTst ( ) jcasType ) casFeat_range == throwFeatMissing , ) ; jcasType . . ll_setRefValue ( addr , ( OntRelationMention_Type ) ) . ll_getFSRef ( ; }<CODESPLIT>setter for range - sets
List . . security . . . > getRelatedRolePlayer ( ) if ( = ArrayList < . ibm . security . wim . . return this . ; }<CODESPLIT>Gets the value of the relatedRolePlayer property .
JCExpression getUnderlyingBinding return ( unifier == null : unifier . ( new UFreeIdent ( identifier ; }<CODESPLIT>Gets the binding of the underlying identifier in the unifier .
void clearCache ) ( CommercePriceEntryImpl . ; finderCache . clearCache ( ) ; finderCache FINDER_CLASS_NAME_LIST_WITH_PAGINATION finderCache ( FINDER_CLASS_NAME_LIST_WITHOUT_PAGINATION }<CODESPLIT>Clears the cache for all commerce price entries .
int int ) ( initial { MINIMUM_CAPACITY ; } if initial > } int capacity = ; while < initial ) ; } return ; }<CODESPLIT>Compute capacity given initial capacity .
V get K , TimeUnit unit , TimeoutException { await k , , return get ( k }<CODESPLIT>Retrieve the value associated with the given key blocking as long as necessary up to the specified maximum .
public static ( final Path distributedClassPath , Path , final Job ) throws IOException { String classpathProperty = . getProperty ( classpathProperty { getProperty ; [ ] = ( pathSeparator Configuration = job ( ) ; final distributedClassPath . getFileSystem ( conf ) ; fs instanceof LocalFileSystem { } for jarFilePath : final jarFile File ; jarFile . endsWith ) { ( ) { isSnapshot ( { addSnapshotJarToClassPath jarFile intermediateClassPath , , job } { addJarToClassPath ( jarFile , , job ) } , shouldRetryPredicate ( , NUM_RETRIES ) ; } catch ( Exception throw new ) } } }<CODESPLIT>Uploads jar files to hdfs and configures the classpath . Snapshot jar files are uploaded to intermediateClasspath and not shared across multiple jobs . Non - Snapshot jar files are uploaded to a distributedClasspath and shared across multiple jobs .
public eval String ) throws WidgetException WebElement element = WebDriver . getWrappedDriver ( ) ; { ( ( ) ) executeScript ( javascript , element } catch ( Exception ) { long . currentTimeMillis ( ; success = false while ( success System . ) < time ( . executeScript ( true Exception { . sleep 500 ) ; InterruptedException e1 { e e2 ; } } ( ) { e ) } }<CODESPLIT>Executes JavaScript code on the current element in the current frame or window .
long addWrapField long ) { return , FieldUtils . getWrappedValue get ( ) 0 - 1 ) }<CODESPLIT>Add the specified amount to the specified time instant wrapping around within the remainder range if necessary . The amount added may be negative .
protected SendRequest makeUnsignedChannelContract Coin valueToMe Transaction tx = new Transaction wallet . ( ) getTotalValue . subtract ) equals ( . ZERO ) tx . ( . ( wallet . , getClientKey ) ) ) tx . addInput contract getOutput ) ; . ( ) ; }<CODESPLIT>Create a payment transaction with valueToMe going back to us
String getUserNameFromToken { if ( null { return null } return authToken ( TOKEN_SEPARATOR ; }<CODESPLIT>Extracts the user name from token .
protected Class > resolveProxyClass ( String [ interfaceNames throws ClassNotFoundException { proxyClassLoader classLoader ; Class ? [ ] [ interfaceNames . = = 0 ; i length ; ) < > ( interfaceNames [ ] ) if ( ! . isPublic ( getModifiers ( ) ) classLoader = ( intf ) nonPublicInterface null { if ) throw new ( nonPublicInterface + " + " both declared different class loaders" { nonPublicInterface = ; = classLoader } [ ] intf try getProxyClass , interfaces ) } catch IllegalArgumentException ex { throw new , ;<CODESPLIT>Delegates class loading to the specified class loader .
static ] rowSums ( ] data { [ ] x = double [ ( = ; i < x length ; i ++ ) { x i i ) } x ;<CODESPLIT>Returns the row sums for a matrix .
protected void int newCapacity ) { int = . length ; oldTable ] = table ; int [ ] [ ] new ] newValues [ ] = newCapacity ] newState = byte [ ; this . = chooseLowWaterMark newCapacity , this minLoadFactor ) ; highWaterMark = chooseHighWaterMark newCapacity . maxLoadFactor ; this . ; . = ; this freeEntries = newCapacity - distinct ( int ; 0 ; { if oldState i ] == long = oldTable ] int = element index element ; newValues index ] oldValues [ ] ; newState ; } }<CODESPLIT>Rehashes the contents of the receiver into a new table with a smaller or larger capacity . This method is called automatically when the number of keys in the receiver exceeds the high water mark or falls below the low water mark .
public ( HpackHeaderField header ) . ( ( headerSize capacity ( return ; ( - < headerSize { remove ( } hpackHeaderFields [ head ++ += ) ; if ( head == { head = 0 ; }<CODESPLIT>Add the header field to the dynamic table . Entries are evicted from the dynamic table until the size of the table and the new header field is less than or equal to the table s capacity . If the size of the new entry is larger than the table s capacity the dynamic table will be cleared .
private fired ) { for ( final LauncherListener listener . for ( final launchableConfig ) { Media = . create ( launchableConfig . ) ) ; featurable = factory create media ) ; Launchable featurable ( Launchable class ; if . getDelay ( { add DelayedLaunch ( launchableConfig , } { initial , , launchable } } ( LionEngineException exception ) { featurable . getFeature Identifiable ) . exception ; } }<CODESPLIT>Called when fire is performed .
static void ( omgr ) { invmgr ; _omgr = omgr invmgr . registerProvider ( TimeBaseMarshaller , GLOBAL_GROUP }<CODESPLIT>Registers the time provider with the appropriate managers . Called by the presents server at startup .
createLogFile ( start long end new UfsJournalFile ( location , end , ; }<CODESPLIT>Creates a journal log file .
Object ) java . ObjectStreamException try return CertificateRep ( type , ( ) e { throw java . io ( "java.security.cert.Certificate: " + + ( ) ) } }<CODESPLIT>Replace the Certificate to be serialized .
static Throwable ] arguments ) { length == 0 ? null extractThrowable ( arguments length - }<CODESPLIT>Returns a throwable if the last argument is one .
public List < < IBond makeBondMapsOfAtomMaps ( IAtomContainer , , List < Map IAtom mappings ) < Map < , IBond > > bondMaps Map IBond ( ( < IAtom > mapping : { bondMaps ( makeBondMapOfAtomMap ( ac1 ; } return bondMaps }<CODESPLIT>Returns bond maps between source and target molecules based on the atoms
LongConstant long ) entry = ( ) if ( entry != ) return ( , size ( ) , ) ; addConstant entry ) ; return ; }<CODESPLIT>Adds a long constant .
getOrOpen name File file ) { return , , ; }<CODESPLIT>Get the cached GeoPackage or open and cache the GeoPackage file
static ( String clz_name int clz_name lastIndexOf 'V' ) ; if idx == ; return . valueOf ( clz_name ( idx + 1 ) ; { return ; } }<CODESPLIT>Extract the version number from the schema class name . Returns - 1 if there s no version number at the end of the classname .
private ( Canvas canvas , paint , shapeAppearanceModel ) { ( shapeAppearanceModel ( { float shapeAppearanceModel getTopRightCorner ) . ( ) ; canvas . drawRoundRect ( bounds , , paint ; drawPath paint ) }<CODESPLIT>Draw the path or try to draw a round rect if possible .
public AnalyzerJob getAnalyzerJob final descriptorName , final analyzerName final String analyzerInputName { List < AnalyzerJob > = new ArrayList < candidates = ( candidates , { = getDescriptor ( . getDisplayName ; . ( ) } ) if ( != null CollectionUtils2 ( , o final String = getName ( return analyzerName actualAnalyzerName ; ; analyzerInputName != ) { = . refineCandidates { final InputColumn > = ( if ( null { return ; } return equals inputColumn getName ( ) ) ; candidates . isEmpty ( ) { error ( AnalyzerJob to from" ) return null ; else if candidates { logger ( "Multiple AnalyzerJob choose from, picking first" } return iterator next ;<CODESPLIT>Gets the best candidate analyzer job based on search criteria offered in parameters .
removeExecutedTradeCallback ( final BiConsumer < BitfinexExecutedTradeSymbol callback ) throws { return tradesCallbacks ( tradeSymbol ; }<CODESPLIT>Remove a executed trade callback
doPrimaryHealthCheck ) { < > healthDependencies values . stream ( ) . filter ( collect ( Collectors ( ) ) ( primaryHealthDependencies }<CODESPLIT>Performs the Primary Health Check .
static appfwxmlerrorpage ( ) Exception obj new ) ; [ ] response = obj . ( service return response [ 0 }<CODESPLIT>Use this API to fetch all the appfwxmlerrorpage resources that are configured on netscaler .
private ( final AbstractHttpClient client . ( ) { void process HttpResponse final HttpContext throws , { Header = response . getFirstHeader ( ) ; if ( header . , ( ) } } ) }<CODESPLIT>This method is used to capture Location headers after HttpClient redirect handling .
private quickSelect ( < P splitAxis , ) { numPoints points ) ; tmp . numPoints { tmp new double [ numPoints new [ for = ; i ; ++ ) [ i = ( ( i , splitAxis ) } QuickSelect . tmp , , numPoints indexes ) ; }<CODESPLIT>Uses quick - select to find the median value
public writeHtml ( , pHtml ) { = , ) ; parser ) { String token parser . nextToken ( . ) print "&lt;" ) else ( token equals ( ">" pOut . print ( ) ; else if . ( "&" ) ) { . print "&amp;" ; { pOut print token ; } }<CODESPLIT>writeHtml ensures that the text being outputted appears as it was entered . This prevents users from hacking the system by entering html or jsp code into an entry form where that value will be displayed later in the site .
getNodeName ( String result = node ) ; return == null ? getNodeName ( ; }<CODESPLIT>Returns the node name . First tries local name . If this is null returns instead the full node name .
setExpiryDate @ 1 , ) , @ IntRange from = int year ) { . setText ( DateUtils createDateStringFromIntegerInput , year ) ; }<CODESPLIT>Set the expiration date . Method invokes completion listener and changes focus to the CVC field if a valid date is entered .
protected ( DdlWrite write ) "-- dependencies\n" applyDropDependencies ( . getBuffer + "-- apply write apply ) . ( ) + applyForeignKeys ( ) getBuffer applyHistoryView ( ) write . ) . getBuffer ( ) ) }<CODESPLIT>Write the Apply DDL buffers to the writer .
static classEquals Class Class clz2 ( == null || clz2 null ) ; } return clz1 clz2 || ( ) . getName ( ) ; }<CODESPLIT>Compares if two classes are equal or their class names are equal .
void addSharedFunction ISource fileName = source ( ( FileSource ) ) . ( ; source , fileName }<CODESPLIT>Add shared function by ISource
( . commerce . price . . CommercePriceListService commercePriceListService ) . commercePriceListService ; }<CODESPLIT>Sets the commerce price list remote service .
HtmlTree MAIN htmltree = new HtmlTree MAIN ) ; . setRole ( MAIN ) ; }<CODESPLIT>Generates a MAIN tag with role attribute .
cachepolicylabel_stats ( labelname cachepolicylabel_stats new cachepolicylabel_stats ( ) ; obj . cachepolicylabel_stats response ( ) obj . stat_resource ) ; return ; }<CODESPLIT>Use this API to fetch statistics of cachepolicylabel_stats resource of given name .
protected saveBroker ( mapfile , { if isModified ( ) ) return } BufferedWriter bout BufferedWriter ( new mapfile ) ) ; bout ; ) ( ioe { throw RuntimeException ( to store component ID "]" , ioe ) ; }<CODESPLIT>Stores a persistent representation of the supplied hashmap ID broker in the specified file .
void final < values ) DataAccessException jdbcTemplate execute ( new ConnectionCallback Object > ( connection SQLException , DataAccessException { . update ( , ; } } ; }<CODESPLIT>update the objects .
public fromExternal ( final IntSupplier , ) return ) { int getAsInt { . getAsInt ; public get ( { return getAsInt ( ) ; } public MutableInt ( value { ) ; } }<CODESPLIT>Construct a MutableInt that gets and sets an external value using the provided Supplier and Consumer
void Config ) . debug ) this . configWriteLock . ( ) = config ; processAppPackages ( config } finally { ( ) } }<CODESPLIT>Replace the configuration of this instance directly .
void String ) ( PropertyKey Host name ) , IpUtils . ( ) Type name ( , type ) ( PropertyKey . Status name . name ( ; }<CODESPLIT>Add properties to properties map on transaction start
List < . ) { if == null ) { sequence new ArrayList < > ; this . }<CODESPLIT>Gets the value of the sequence property .
MapBuilder String , , Supplier Number supplier { if ( include { Number ) if != null ) { . put ( ( } } return ; }<CODESPLIT>Adds the number value to the provided map under the provided field name if it should be included . The supplier is only invoked if the field is to be included .
public disconnectCardOneConsumer ) if ( TraceComponent isAnyTracingEnabled ( ) ) ( tc , "disconnectCardOneConsumer" ] clonedConsumerPoints = null consumerPoints { clonedConsumerPoints consumerPoints ( ; } SILimitExceededException e = ( nls . "CONSUMERCARDINALITY_LIMIT_REACHED_CWSIP0472" new ( ) , ) ) ) FFDCFilter processException e "com.ibm.ws.sib.processor.impl.RemoteConsumerDispatcher.disconnectCardOneConsumer" , "1:945:1.97.2.21" this ) ; ( , ) ; = ; i . length ; i ) ck = ( ) i ; ck . ( e ; TraceComponent . isAnyTracingEnabled ( && tc ( ) SibTr "disconnectCardOneConsumer" ) }<CODESPLIT>The disconnectCardOneConsumer method is invoked by the Anycast Input Handler to notify it that the current cardinality - one consumer must be disconnected . This can happen when this RME becomes unreachable and the DME allows a consumer in a separate RME to connect . As soon as this RME becomes reachable again the DME sends ControlCardinalityInfo to trigger this consumer s disconnection .
isAdministrator AuthContext ctx . != ctx . getUsername ) . . getPassword ( ) null && ctx . ( equals ( adminPass ; }<CODESPLIT>Check if the given credentials allow administrative access
protected void init ) ( settings autostart ) ) { settings . getRunner ( ) ; logger . config " runner . . getSimpleName ( ; settings . ( OperaDefaults . ) ; createScopeServices ( ; ( != null ) { . startOpera ; ( debugger services . ( ) ; this ) = services getWindowManager ) exec = . ) ; core . ( ; ; OperaMouse this ; keyboard OperaKeyboard ( ; . getConsoleLogger ) . onConsoleMessage ConsoleMessageConverter logs ) ) ; . ) ; ! . ) . contains ( "Mini" ) ) { new OperaScopePreferences . getPrefs ( ) ; ( set ( Unrequested Popups" , ) . ) ( MOBILE ) { preferences ) . set ( Prefs" Form Element" true ) } proxy ) ; proxy parse ( )<CODESPLIT>Initialize required Scope services .
public String string ) { byte [ ] hash MessageDigest . digest ( . getBytes "UTF-8" ) ; catch NoSuchAlgorithmException e ) throw ( MD5 supported?" , e catch ( UnsupportedEncodingException throw ( should be , ) ; } = new . length ) byte b ) int ( & ; < 0x10 hex ( '0' ) ; hex . append Integer toHexString ( ) . toString ( ; }<CODESPLIT>Calculate the MD5 of a given String
static ( File dir for i 0 dir != null && < 20 rawDir ( ) ; if ( null ) { return rawDir } ) ; null ; }<CODESPLIT>Look for the resource - directory in the current directory or the directories above . Then look for the raw - directory underneath the resource - directory .
Object resolveVariable String { ELContext ctx getELContext ( ) ; ctx . ( ( null , pName }<CODESPLIT>LIDB4147 - 9 Begin - modified for JSP 2 . 1
protected createPrimaryKeyValue InFlightMetadataCollector , PersistentProperty property Collection collection , > keyValue ; DependantValue key ; collection . getReferencedPropertyName ( ; ( propertyRef == null = collection getOwner ) . getIdentifier } else { KeyValue . ) . ( ) . ) ; isDebugEnabled ) . debug ( "[GrailsDomainBinder] + . ) + ) DependantValue ( metadataBuildingContext , getCollectionTable ) , ; key . null ) ; key . ( true key . false ) ; key ; }<CODESPLIT>Creates the DependentValue object that forms a primary key reference for the collection .
AVariableExp getVarExp vardef , PType type var = getVarExp ( , ) ; setType type ; ; }<CODESPLIT>Generate Var Exp with everything!
static boolean ( if ( Strings ( arg ) || arg trim ( ) ) return } return }<CODESPLIT>Determines whether the parameter string is null empty or whitespace .
queryBlockByNumber ( InvalidArgumentException , ProposalException { getShuffledPeers ( EnumSet of ( PeerRole ) ) ; }<CODESPLIT>query this channel for a Block by the blockNumber . The request is retried on all peers till successful
( "unchecked" getGetter ( Class type ) { getGettersAsMap ( type get ( ; }<CODESPLIT>Search getter for given class and property name .
static String ( byte ] , ) try new String decodeLZ ( data ) catch ( ) { RuntimeException e ) }<CODESPLIT>Decode lz to string string .
AirlineFlightUpdateTemplateBuilder addAirlineFlightUpdateTemplate String locale , String updateType ) { new AirlineFlightUpdateTemplateBuilder ( locale , ; }<CODESPLIT>Adds an Airline Flight Update Template to the response .
private void ( final String final List String arguments final Module , , final String role { buf = new StringBuilder ( ) if ( != aditionalpath ) { add ( argument ; . aditionalpath ; ( modules ) { if ( contains argument ) arguments ( ) int i = i . { Module module modules i ] ; artifact SuppressWarnings "unchecked" ) Set Artifact > = project . getArtifacts ( for ( Artifact allArtifacts if art . ) . ( ) . ( ) . equals ( getArtifactId ( ) . defaultString ( module ) . equals . ( . ) ) && . module . ) equals ( StringUtils defaultString art . getType ( ) ) ) = ; } == throw new ( . toString + " in as " + ", is not found project ; } ( ( 0 ) . append ( . ) ; buf append ( getFile ( ) ( ) if ( . ( > { String = toString ( ) . add ( pathString ) . debug + argument + pathString ) }<CODESPLIT>Finds all artifacts in the weavemodule property and adds them to the ajc options .
static String ( request { . "aerogear-sender" ) if ( hasValue ( client ; } request . getHeader ( "user-agent" }<CODESPLIT>Reads the aerogear - sender header to check if an AeroGear Sender client was used . If the header value is NULL the value of the standard user - agent header is returned
public < ServiceMessage requestMany request , Class < ? > , Address ) return ( ( { requireNonNull , address parameter required and must null" ) requireNonNull and null" ; create address ) requestStream ( request . map ( message -> ServiceMessageCodec ( ) ( this throwIfError ) }<CODESPLIT>Given an address issues request to remote service which returns stream of service messages back .
public incrementalRestore ) throws FileNotFoundException , IOException , ClassNotFoundException = = new ObjectInputStream PrivilegedFileHelper ( incrementalBackupFile ) while true ) { changesLog ( ) . setSystemId ( . ) ; ChangesLogIterator . ) ( cli hasNextLog ) ) ( cli . . == LOCK ) ) } ( ) ; EOFException ) ( . ( ) ) { LOG . trace ( "An exception ( ) ) ; } } }<CODESPLIT>Perform incremental restore operation .
public Integer > start ( Integer object < Integer ( . object , < > ) { count ; public ( final ByteBuffer buffer ) remaining public Integer finish ( ) { } ) ; return object }<CODESPLIT>Initializes a byte counter on this channel .
static ( locator logger . ( ) boolean flag = false try { locator ) != null } catch ( ) { } ; return ; }<CODESPLIT>Checks if the provided element is present on the page based on the locator provided
public static ( String args [ ] throws { final StringBuffer = new StringBuffer ( "The lazy fox" ; Thread ) { ( buffer . 0 , ) append in ; . err ( "Middle" ) ; . sleep ( 4000 ) ; } Exception e ) } append ( fall" ) err println ) } t2 = { run try sleep 1000 ; ( Exception } buffer append " jump the fence" System err . println ( ; } . start ) start ( ) t1 . join ( ) ; t2 . ; System println buffer ) ;<CODESPLIT>We have more input since wait started
protected interpolate double , double boundB { double alphaNew isNaN alphaNew = SearchInterpolate . quadratic , gprev stprev fp stp ) ; } else = SearchInterpolate . cubic2 fprev , gprev fp , gp ; ( Double . ( alphaNew ) = SearchInterpolate ( fprev , fp ) double l , ; { l boundB ; u ( < l ) alphaNew = l else if alphaNew > = u ; return ; }<CODESPLIT>Use either quadratic of cubic interpolation to guess the minimum .
private List < > ( DataType dataType { . finer ( semantic constraints on datatype " dataType . name ) > errors < SemanticError > ; String > = new HashSet < String ) ( constructor dataType constructors ) logger . ( "Checking " . + " " + . ; if . constructors ) 1 . ( constructor name ) { . info as its data + . + "." . add dataType ) ) ; ( . ( constructor . name { "Two constructors same name . + data type " dataType name "." ) . ( ( . name constructor ) } else . add constructor . ) } errors ( check , } ;<CODESPLIT>Checks a data type for duplicate constructor names or constructors having the same name as the data type
SuppressWarnings "unchecked" , "rawtypes" protected ( additionalList GrailsPlugin plugin ) { ( ! getName ) { addedNames . add plugin . getName ( ) ; . ( , ) } }<CODESPLIT>Adds a plugin to the additional if this hasn t happened already
private ( request ) IOException { HttpResponse httpClient ( ) debugLogging ) ( request ) } String = . response getEntity ( . ) ) { jsonMapper . ( new StringReader responsePayload ) ) ; } JsonProcessingException e { throw new GroovesharkException . "Failed parse - was not + ) ; } }<CODESPLIT>Boilerplate to send the request and parse the response payload as JSON .
public String T > ) throws HashMap < , > HashMap < T > ; ( jsonParser nextToken ) { key ( . ( ) ( . ) == JsonToken VALUE_NULL ) { map key null ) ; } else { . ( key , jsonParser ) } return map ; }<CODESPLIT>Parse a map of objects from a JsonParser .
subtract ( date . setTime ( ( ) d . parse ) ; ; }<CODESPLIT>subtract date on supported date
double long i ) digit / double base ; double radical digit ; ( 0 { inverse += digit ( double ) ( % base ; base } inverse ; }<CODESPLIT>Compute the radical inverse of i .
public getTempDir ( ) { ) if null ) String . ( "java.io.tmpdir" ) ( . ( tmpDir ) ) { if ( "/temp" ) . } { tmpDir "/tmp" ; } } = ; } } return }<CODESPLIT>Gets the default temp directory for the system .
static , > ( List Value list Accumulator init , ReduceClosure Accumulator , accumulator init ; ( Value value ) { accumulator = . ; } return ; }<CODESPLIT>Applies a binary function between each element of the given list .
protected executeProcess , String command , FaxActionType faxActionType ) null ( ) String updatedCommand ; ( . ) { StringBuilder = ( . ) + this length ) ; append . windowsCommandPrefix ; . append " ) ; buffer ( updatedCommand = . toString ( ; } ProcessOutput updatedCommand ) ; this . validateProcessOutput processOutput faxActionType ) updateFaxJob ( processOutput ) ; return processOutput ; }<CODESPLIT>Executes the process and returns the output .
ModelNode getConnector String { Address . ( ) add ( SUBSYSTEM , SUBSYSTEM_WEB ) ; readResource ( , true }<CODESPLIT>Returns the connector node with all its attributes . Will be null if it doesn t exist .
int match ( CharsetDetector det ] commonChars ) { @ SuppressWarnings = 0 int 0 ; int ; int badCharCount 0 ; int totalCharCount 0 ; confidence = 0 ; iter = new ) detectBlock for iter . ( ) nextChar iter { ++ ( error { ++ else long cv & 0xFFFFFFFFL ) ++ } else doubleByteCharCount ( != null Arrays binarySearch ( commonChars ( cv 0 ) commonCharCount ++ } } } >= 2 && badCharCount * 5 >= break ; } if doubleByteCharCount 10 && badCharCount == ( && totalCharCount confidence = } = ; break detectBlock ; ( doubleByteCharCount 20 badCharCount confidence detectBlock } == null { doubleByteCharCount - 20 * badCharCount ) = } else double maxVal = log ( ( float / ) ; double scaleFactor 90.0 / ; ( int ) ( log ( commonCharCount 1 ) * scaleFactor + 10 ) ; confidence ( , } } return<CODESPLIT>Test the match of this charset with the input text data which is obtained via the CharsetDetector object .
static ( DMatrix src srcY0 srcY1 int , int srcX1 , dst ) ) ( - srcY0 , srcX1 srcX0 ) ; extract src , , dst 0 0 ; }<CODESPLIT>Extract where the destination is reshaped to match the extracted region
public resizeEip ( ) checkNotNull ( request . getNewBandwidthInMbps , not ( request ( ) should be empty" ) if ( Strings isNullOrEmpty . ( request generateDefaultClientToken ) InternalRequest = this ( request HttpMethodName PUT , request . ( ) ) . addParameter null ) CLIENT_TOKEN_IDENTIFY , . getClientToken ( ) ) fillPayload ( ) ( , . class ) ;<CODESPLIT>Resizing eip The Prepaid eip can not be downgrade . This is an asynchronous interface .
void ) { if currentContactSeedBrokerIndex . ) currentContactSeedBrokerIndex = 0 ; URL newContactUrl [ ) this . consumer = SimpleConsumer ( newContactUrl . ( ) newContactUrl , , ) ; }<CODESPLIT>Re - establish broker connection using the next available seed broker address .
private unescape String ) { StringBuilder = new StringBuilder for int i i < value . ++ i { value charAt ( ) ( == ESCAPE_PREFIX ) { String value . substring + , int code = parseInt 16 ( reservedChars length reservedChars code == ) { result reservedChars code ) ; ; { throw ServiceLocationException escaped character + " position " + 1 ) + " of + , SLPError ) ; } } { result ( c ) } . ( ) }<CODESPLIT>Unescapes the scope string following RFC 2608 6 . 4 . 1
protected HashMap readFile HashMap ) throws IOException HashMap = new HashMap ) ; ArrayList < HashMap expArr = new ArrayList ; HashMap HashMap ( ArrayList > obvData HashMap obv expData ( exname files keySet ( ) { = ( . get ( ) . get ( ; for HashMap obvData ) = new ; = ( expData files . ( ) , expData , files ( "crid" copyItem ( expData , . get ( exname ) ; . ( , obv ) obv put . get ( ) . add expData ; } } idNames new . ) ; removeIndex ( , idNames . put , return ret ;<CODESPLIT>DSSAT TFile Data input method for Controller using
public FixedStringSearchInterpolator createInterpolator MojoParameters params { String delimiters = ( ) delimiters == { return create ) ; DockerAssemblyConfigurationSource configSource = null null . . ( ) . ( params getProject ) . withExpressionMarkers [ , [ 1 ) , configSource . ( 0 ] delimiters [ ] ) ; }<CODESPLIT>Create an interpolator for the given maven parameters and filter configuration .
public boolean isPartitionCleanupInProgress zk throws KeeperException , InterruptedException { String = . leaders_initiators ) ; ZKUtil ChildrenCallback > childrenCallbacks Lists . newArrayList ) ( child ZKUtil = ZKUtil ) zk . ZKUtil . ( . leaders_initiators , child , false , callback null ) add callback for ZKUtil ChildrenCallback callback : childrenCallbacks ) { callback . . isEmpty ) return } return false<CODESPLIT>Checks if the cluster suffered an aborted join or node shutdown and is still in the process of cleaning up .
private byte unifyLData ( final CEMI ldata final emptySrc , final < Integer > types ) { final [ ] instanceof CEMILDataEx CEMILDataEx CEMILDataEx ; < AddInfo additionalInfo additionalInfo ( ; ) for ( < AddInfo > i iterator ( ) ; i . hasNext ; ) { AddInfo i . ) ; types contains . ) logger . additional , i ) } } = ldata ) ; [ ] = ; data + [ 1 ] + = ; emptySrc ) data 1 ] + ] = 0 ; data [ 1 + ] + ; return data ;<CODESPLIT>additional info . types provides the list of add . info types we want to keep everything else is removed
public T extends Number > final ... { int [ b = [ ] ( i = 0 ; < b . length ; i ++ ) { [ = ) ; b }<CODESPLIT>Convert any number class to array of integer .
synchronized setActiveChunkHandle ( handle ) ( handle || ! . ( SegmentChunk handle readonly." ) last lastChunk ( ; Preconditions . checkState , set when SegmentChunks." ; Preconditions ( == null handle . getSegmentName . ( last . ( ) "Active SegmentChunk for SegmentChunk." ) this . = handle }<CODESPLIT>Sets the Active SegmentChunk handle .
String ) if . featOkTst ( Timex3Interval_Type jcasType ) . casFeat_emptyValue null ) ) return jcasType . ll_cas ll_getStringValue ( addr , ) . casFeatCode_emptyValue ; }<CODESPLIT>getter for emptyValue - gets
public AccountInfo ( bitstampBalance , String ) { List new ) ; for ( org . . xchange . . . . BitstampBalance . Balance b . getBalances ) { Balance xchangeBalance ( Currency . getInstance . ( ) . ( ) , . getBalance , b . b ZERO , ZERO subtract ( ) ) , ZERO balances xchangeBalance ; return new AccountInfo ( , bitstampBalance getFee ( Wallet ( balances ) ; }<CODESPLIT>Adapts a BitstampBalance to an AccountInfo
afterConnectionClosed ( status ) { logger "WebSocket closed: {}, Status: {}" , status . ; }<CODESPLIT>Invoked after the web socket connection is closed . You can override this method in the child classes .
public trimLastPathSection ( String path sections path "/" ) StringBuilder newPath StringBuilder ) ; int = ; i sections . length - ; i ) { newPath [ . append "/" return . toString ( ) }<CODESPLIT>Removes the last part of a file path .
static Style Style style = new ; style . color PaletteUtils . getSolidColor . MATERIAL_RED ; }<CODESPLIT>Default material red transparent style for SuperToasts .
public ( ) { Bean null EjbDescriptor ejbDescriptor = ( ) ( . isMessageDriven ) bean getBean ( ; } WeldManager getBeanManager ( ) WeldCreationalContext beanManager ) ; managedObjectContext = ( creationalContext ) ; return managedObjectContext }<CODESPLIT>This version creates a ManagedObjectContext which contains a CreationalContext for an EJB .
final void { DeleteOperationRequest request = ( ) . setName name ) . ) ; ; }<CODESPLIT>Deletes a long - running operation . This method indicates that the client is no longer interested in the operation result . It does not cancel the operation . If the server doesn t support this method it returns google . rpc . Code . UNIMPLEMENTED .
boolean int ) . check currentState BitsState UNKNOWN ) ; return <= x length wordshift ( bits [ x wordshift ] & 1 ) ) != ; }<CODESPLIT>Is x an element of this set?
addSearchFinishHandler SearchFinishEvent SearchFinishHandler handler ) { return , . ; }<CODESPLIT>This handler will be triggered when search is finish
public setForeignBusSendAllowed ( ) if ( TraceComponent . isAnyTracingEnabled && isEntryEnabled . entry , "setForeignBusSendAllowed" . ( sendAllowed ) ; } _sendAllowedOnTargetForeignBus Boolean ( ) != synchronized aliasesThatTargetThisDest ) i aliasesThatTargetThisDest . ) ; ( . hasNext ( ) { AbstractAliasDestinationHandler abstractAliasDestinationHandler = AbstractAliasDestinationHandler ) ( ; ( ) } } } if ( TraceComponent ( ) isEntryEnabled ( ) . tc , ;<CODESPLIT>Set the Foreign Bus Level sendAllowed flag
processingInstruction ( data ) throws SAXException documentHandler != ) documentHandler . target , ; }<CODESPLIT>Adapt a SAX2 processing instruction event .
public Integer getFileSizeOnFTPServer hostName Integer port , String userName password filePath null ; = executeCommandOnFTPServer , , userName , , "SIZE" , ) ( == . " ) RuntimeException String . "Unable to size the %s file. Got reply from FTP filePath , ; } . valueOf replyString . split ( " ) [ replaceAll , ) ; } return ;<CODESPLIT>Get size of the FTP file .
public enable nitro_service client ] ) { base_responses = ; != null . length ) snmpalarm enableresources ] = new ] for 0 trapname length ; ) [ ] = new ( ) ; i . trapname trapname [ i ] } = perform_operation_bulk_request ( enableresources , ; return result ; }<CODESPLIT>Use this API to enable snmpalarm resources of given names .
void ordered action ) { TopoSorter sorter = new TopoSorter > ( this sorter . ; }<CODESPLIT>Traverse this graph and performs the given action in topological order
public parse ( String asg asg . ; int d2 = . ( d1 + ; int dN asg . lastIndexOf ( '-' dN 0 asg ) = asg length ( ; } return new , d2 , dN ) }<CODESPLIT>Create a new instance of a server group object by parsing the group name .
int ( numNodes ) = ) ( srcCount OP_PER_MAP ) ( numMaps , numNodes MAX_MAPS_PER_NODE ) ; return . numMaps , 1 ; }<CODESPLIT>Calculate how many maps to run .
protected channelRead0 ( , msg ) Exception { msg ( ) : originalPromise ( . ( ) . ( this ) ( ; : ( AuthenticationException ( on Bucket command" break case : . setFailure new AuthenticationException ( "Bucket not on ) ; ; default : originalPromise . ( new ( "Unhandled " + . ( ) ) }<CODESPLIT>Handles incoming Select bucket responses .
DiceNotationExpression ( { if instanceof ExpressionWrapper ) { result = ( . getWrappedExpression ) } else { result ; } return ; }<CODESPLIT>Removes the expression wrappers used to temporally prune the nodes .
public float ] ( float [ value , float upper String valueName ( value , valueName be null" ; i 0 ; < length ++ i ) { float value [ i if Float ) { throw ( + must NaN" ; else ( < ) { throw String format "%s[%d] is of (too low)" valueName , lower upper else ( v { throw new IllegalArgumentException ( String format "%s[%d] is range of [%f, %f] high)" , i , lower upper } return value }<CODESPLIT>Ensures that all elements in the argument floating point array are within the inclusive range
void InputStream , OutputStream outputStream ) throws outputStream , true ; }<CODESPLIT>Writes the content provided by the given source input stream into the given destination output stream .
private static Collection Tuple ( List VarDef varDefs , int , int varEnd , int tupleSize ) { Collection < ArrayList < ) ; for i i < ; i ++ { = varDefs get i ; < VarValueDef values = . getValidValues ( . ( ) { throw new ( tuples -- values defined nextVar ; < = tupleSize ? : ( varDefs varEnd + 1 - ) if ( == null ) { ( . ) ) { add new ( new ( values ) ) ; subTuples ( ) ) { while ( ) ) nextBinding new VarBindingDef ( nextVar next ( ) ) ; for subTuple ) nextTuple Tuple . addAll if ( . isCompatible ) { ( nextTuple } } return }<CODESPLIT>Returns all valid tuples of values for the given input variables .
public ( K key ) hash ( int slot = indexOf hash ; Entry < V > entry table [ slot ] ; entry entry if hashCode && entry key . ( key ) ) ; } } return null }<CODESPLIT>Looks up the value mapped under the given key . Returns null if no value is mapped under this key .
boolean String , ) { ( , Required . SECRET toString ( ( number , Required TOTP . ) ; return secret , number ; }<CODESPLIT>Checks if a given number for 2FA is valid for the given secret
protected ( int currS , , prevL ) { ( currS , DL , prevL States DL , . t_DL_in , emission ) updateOutgoingEdges ( currS , currL , , , . , emission ) }<CODESPLIT>Enumerates the possible transitions into state DL .
public setPrefix ( key PdfName fieldname = PdfName ( ) PdfObject ( fieldname if ( null throw new IllegalArgumentException ( "You must set value before a new . ) ; PdfName , o ; . put ( . new PdfString PdfObject . ) ; ( fieldname dict ) }<CODESPLIT>Adds a prefix for the Collection item . You can only use this method after you have set the value of the item .
protected AbstractExpression replaceExpressionsWithPve AbstractExpression { assert expr null ) ; expr instanceof TupleValueExpression ) { int paramIdx = ParameterizationInfo ) ParameterValueExpression pve ( paramIdx , ; ( paramIdx expr ) ; pve ; if ( instanceof ) int paramIdx = ParameterizationInfo getNextParamIndex ( ParameterValueExpression ( expr ; List TupleValueExpression > tves ( expr assert ( != ) for ( tve ) int tve getOrigStmtId ) m_parentStmt origId { new PlanningErrorException do not of statement columns" ; } } put paramIdx , expr ) return } { ( expr getLeft ( ) ) ) ( expr != ) { . setRight replaceExpressionsWithPve expr ) if ( ) != ) < AbstractExpression = ArrayList < > ( for ( AbstractExpression getArgs ( ) { newArgs ( replaceExpressionsWithPve ( argument ) ; } expr setArgs ) ; } return expr<CODESPLIT>Helper method to replace all TVEs and aggregated expressions with the corresponding PVEs . The original expressions are placed into the map to be propagated to the EE . The key to the map is the parameter index .
private addCallback ( String applicationId boolean = < DelayedCallback list = get ) ; null list { list new ArrayList < DelayedCallback > ( ; BACKLOG . put true ( callback ) ; return isFirst }<CODESPLIT>Add a delayed callback for the given application id . Returns whether this is the first request for the application id .
static ] gunzipBytes ( ] throws { bos = new ByteArrayOutputStream ( int 1.5 ; dos = new InflaterOutputStream bos ) ; dos . write ( ) ; bos toByteArray ) ;<CODESPLIT>to avoid linking all that jazz into the client code
getOutputExpression int ) schemaCol = ) TupleValueExpression tve = new ( getTableAlias , schemaCol . getColumnAlias ( , schemaCol getColumnAlias ) ; return ; }<CODESPLIT>Produce a tuple value expression for a column produced by this subquery
