public getSelectedExampleData ( ) { < String > = ( ; ( allSelectedItems null || isEmpty ) { null ; for ( String selectedItem allSelectedItems ) { List < Integer > rowIndex = . selectedItem ) ( ) } return null }<CODESPLIT>Get the example which is selected in the tree .
public float alpha ) ( ! ) return } if ( mDimView null ) ; } if ( mDimView . isShown ( ) { mDimView . setVisibility ( VISIBLE ) ; . ( ; mDimView . setAlpha ; }<CODESPLIT>Set the dim - behind layer a specific opacity .
public Path extract { if ( isFound ( ) ) throw "Extract only called extractSW . start ) ; currEdge = ; ( currEdge . adjNode ) boolean EdgeIterator Edge ( currEdge . int nextEdge ; while ) nextEdgeValid = . Edge . ( . parent . edge ; nextEdge = currEdge . edge NO_EDGE ; processEdge ( currEdge edge , . , currEdge . } currEdge . adjNode ) reverseOrder ( ) ; extractSW ; return setFound ( true ) ; }<CODESPLIT>Extracts the Path from the shortest - path - tree determined by sptEntry .
public writeInt ( byte [ target , , int { [ offset ] = byte ( 24 ) [ offset + 1 ] = ( byte ) ) target ] ) value >>> 8 ) ; target [ offset + 3 ] ) ; return Integer . BYTES }<CODESPLIT>Writes the given 32 - bit Integer to the given byte array at the given offset .
void visitGetElem Node . expectIndexMatch ( getJSType ( n . getFirstChild ) ) , getJSType ( ) ) ) ; ( n ; }<CODESPLIT>Visits a GETELEM node .
private Class < > getTypedClass java . lang . reflect type ) if type { return Class ) ; else if ( type instanceof ParameterizedType ) java . . ( ) getRawType ( return ( rawParamterizedType ; } else ( instanceof TypeVariable ) { . lang . reflect Type upperBound ( TypeVariable ) ) . getBounds ) [ ] ; return getTypedClass ( ) ; } IllegalArgumentException while class :" + ) ; }<CODESPLIT>Gets the typed class .
URI toUri path fileStore . state ( ( ) ; return pathService . toUri ( uri path . ; }<CODESPLIT>Gets the URI of the given path in this file system .
getActivityInterface ( { activityInterface == null ) new ActivityInterface ( apiKey , sharedSecret , ) ; ; }<CODESPLIT>Get the ActivityInterface .
private void initBeforeList ) { final List < > = new ArrayList > ( ) ; final Method invokeHolder = getInvokeHolder ( ? > . getDeclaringClass ( if processorClass && . isAnnotationPresent ( Before . ) { Class ? ProcessAdvice [ ] = processorClass . getAnnotation ( ) . value ( ) ; for ( i = 0 i . length ++ ) < extends > bc i ] final ProcessAdvice = . getInstance . bc ) ; add beforeRequestProcessAdvice ; } if ( invokeHolder . ( . class ) { final ? ProcessAdvice [ ] bcs = getAnnotation ) . value ( ) int = i < bcs . length i ++ ) { < extends > = bcs [ i final beforeRequestProcessAdvice = ( ) . getReference bc ) ; beforeRequestProcessAdvices ( beforeRequestProcessAdvice ) } this beforeRequestProcessAdvices = ;<CODESPLIT>Initializes before process advices .
void ) { jsFactory JsonFactory ( ; . ( JsonParser . Feature ALLOW_COMMENTS , ( JsonParser . Feature ALLOW_SINGLE_QUOTES , true ) jsFactory . configure ( JsonParser ALLOW_NON_NUMERIC_NUMBERS , true ; }<CODESPLIT>Creates the JsonFactory .
void Looper looper ) handler = Handler looper { public void handleMessage Message msg ) , THREAD_LEAK_CLEANING_MS ) } } ; handler . sendMessageDelayed ( handler ) , THREAD_LEAK_CLEANING_MS ; }<CODESPLIT>Prior to Android 5 HandlerThread always keeps a stack local reference to the last message that was sent to it . This method makes sure that stack local reference never stays there for too long by sending new messages to it every second .
void String label ) ( buttons null buttonsAtBottom ) ; Element e new Input , label ) ; ( extendRow ) addField null , e ) ; add ( e ; }<CODESPLIT>Add a reset button .
int getMaximumVolume Context { return ( ( . getSystemService ( Context . AUDIO_SERVICE ) ) getStreamMaxVolume ( AudioManager ; }<CODESPLIT>Returns maximum volume the media volume can have
@ SuppressWarnings ( ) removeSREs ( ISREInstall ... ) { final ISREInstall defaultSRE = ( ) ; final String defaultId = ? : defaultSRE ) ; int - ( defaultId null ) { for ( int i = 0 defaultIndex - && i < this . sreTable . ) ) { if defaultId equals ( ( ( ) getItem ( getData ( ) . getId ( ) ) = ; } } String = Strings ; boolean = ; ( sre sres ) { if this sreArray . ( sre ) . ( ) . equals normedDefaultId { } refreshSREListUI ( if ( ( this . sreTable . getItemCount ( ) { setSelection null ) } if ( defaultIndex < ) { defaultIndex } else if >= this sreTable getItemCount ( ) = this . sreTable getItemCount - 1 ; } setSelection ( StructuredSelection . . ( defaultIndex ) . ) } } this . sresList . refresh true ) ; ( defaultIsRemoved ) fireDefaultSREChanged } updateUI ( ) }<CODESPLIT>Removes the given SREs from the table .
public WikiUser ( String wikiId , String ) WikiUser ; try { Properties ( wikiId ) ; ( ) result setUsername props getProperty ( ; result setEmail ( props . getProperty ) ) ; Crypt = Crypt ( "cypher" ) , props . getProperty ) ) ; . setPassword ( . ( . ( "secret" ) ) ; } e { msg = , siteurl ; LOGGER log ( Level . SEVERE } ( e ) { LOGGER log . SEVERE , ) ) catch ( GeneralSecurityException e ) { LOGGER log ( Level . SEVERE , e getMessage ( ; return result }<CODESPLIT>get the Wiki user for the given wikiid
public ( ) { int = 0 { T delegate next ( ) ; ( alreadyGenerated ( next { alreadyGenerated . add ( next ) ; return ++ } numberOfRetries new ( on ( " " ) . join ( "Exhausted" , trying generate unique value" ) ) }<CODESPLIT>Returns unique &lt ; T&gt ; generated by delegate Generator&lt ; T&gt ;
boolean Node node ) ( node getNodeType ) Node . ELEMENT_NODE || . getNodeName ) ) && ( . getNodeType ( ) Node . TEXT_NODE || node . getNodeValue ( ) trim ( == ) ; }<CODESPLIT>Checks if a given node is allowed or not as a child of a &lt ; ul&gt ; or &lt ; ol&gt ; element .
public static ResidueNumber [ ] matchSequenceToStructure seq , struct { < Integer , > atomIndexPosition new < Integer , Group ( ; structSeq getProteinSequenceForStructure ( struct , atomIndexPosition ) ; < AminoAcidCompound > matrix = SimpleSubstitutionMatrix < AminoAcidCompound ( . ( ) 1 , ( short = new SimpleSubstitutionMatrix < AminoAcidCompound AminoAcidCompoundSet getAminoAcidCompoundSet ( new SimpleSubstitutionMatrix . class . ) ) , ) ; ProteinSequence , pair Alignments . getPairwiseAlignment ( seq structSeq , PairwiseSequenceAlignerType GLOBAL ) matrix ) ; ProteinSequence AminoAcidCompound > alignedSeq = getQuery ( ) ; ProteinSequence > = pair . ( ) getLength ( ) == . getLength ( ) ) ; ResidueNumber [ ca = new [ . getLength ( ) int pos = getStart ) getPosition ) pos alignedSeq getEnd ) . getPosition ) { if ( alignedSeq isGap pos ) ) { structIndex = alignedStruct ( ) assert 0 ) = atomIndexPosition . get ( ; logger . warn "Chain {} {} in the {} has corresponding acid in the g getChainId ) , . ( ) toString ) , g . getChain ) getStructure ) ( ) ; continue ; } if ( ! . ) ) { int = . pos ) - 1 ; alignedStruct . getSequenceIndexAt ( ) - g atomIndexPosition . get structIndex ; ( 0 seqIndex && seqIndex < ca . [ seqIndex ] . getResidueNumber ( } return }<CODESPLIT>Given a sequence and the corresponding Structure get the ResidueNumber for each residue in the sequence .
@ SuppressWarnings ( { "unchecked" } static IMeta ( < ? , ? > IMetaData < ? ? > metaData2 ) Map String Object map1 = ( ( Map < String , > ) metaData1 ) Set < Entry String Object map1 entrySet ( ) ; , map2 = ( ( Map < Object ) metaData2 Set < String , Object > = map2 . entrySet ( ) Map < String Object > = new HashMap String Object > ( ; for String Object > entry1 : ) String key1 = entry1 ( ) ; if . key1 ) { Object = map1 get ( ) ; Object value2 . get ( key1 ) ; if ( instanceof Double ) if Double . valueOf ( ) ) . ) Double toString ) ) ) key1 , value2 ) ; } if ( value1 instanceof ) { if Integer . ( . ( intValue ( . valueOf ( value2 . ) ) . intValue ) ) rep put ( key1 , ) } } else if ) { if Long valueOf ( toString ) ) . ) valueOf ( toString ) . ( ) put key1 , value2 ) } instanceof Boolean ) if ! Boolean . ( toString ) && Boolean valueOf toString ) ) ) rep . put ( value2 ; } } } set1 . removeAll ( rep entrySet ( ) ) ; set1 . entrySet ( ; set1 . ; return }<CODESPLIT>Merges the two Meta objects
List > subList ( , int while allResults . size ( < arg1 moveNextResults ( ) ; } return Collections . unmodifiableList ( allResults . , arg1 ) ; }<CODESPLIT>Returns a sub - list in the range specified loading more results as necessary .
private ( String channel , message , ] ) message setMetadata ( , message setMetadata ( "cwf.pub.channel" ) message . setMetadata ( "cwf.pub.event" , UUID . randomUUID ) . toString ( ) . currentTimeMillis ( ) ; message . setMetadata "cwf.pub.recipients" recipients ) ; return message }<CODESPLIT>Adds publication - specific metadata to the message .
private > GraphRequest < T graph ( String , type Param params ) this . ) < T = GraphRequest < T > object , params , this . mapper , this . < type this add ( req ; return req }<CODESPLIT>The actual implementation of this after we ve converted to proper Jackson JavaType
public void writeLength long length { if length 251 ) { buf [ position ++ ] = ( byte ) length ; < 65536 [ position ++ ( ; buf position ++ ] = ( byte length ; [ ++ = ( byte ) length >>> 8 ; ( length < 16777216 ) { buf [ ++ ] = byte ; buf ++ ] ) length ; buf [ position ( byte ( length >>> 8 ; buf ( byte >>> ) } else buf [ position ++ = byte ) ; buf [ ] ( ) length buf ++ ) ( length >>> ; ++ ( byte ) ( length >>> 16 [ position = ( byte ) ( length ) buf [ position byte ) ( ) [ position ++ = ( ( length 40 ) [ ] = ) ( length >>> 48 ; buf [ position ++ ( byte ( length 54 ) ; }<CODESPLIT>Write length .
public < TSource TResult > TResult > map ( Collection TSource > , < mapper if ( items ) { return new ArrayList < > ) ; } List TResult items size ( ) ( TSource : items ) TResult mappedItem = mapper map item ; result . add ) ; } return result ; }<CODESPLIT>Projects each element of a collection into a new collection .
static void final , final ContentHandler handler { serializeElement ( "real" , String . valueOf ( doubleValue ) , ; }<CODESPLIT>Serialize a Number as a real element .
public JMenuBar setupStandardMenu ( ActionListener bAddHelpMenu ) { Application application = BaseApplet ( . getApplication ( ) oldResources = application . getResourceBundle ) ; application getResources ( null , true ) ; . setupActions ( targetAction ; JMenuBar menuBar JMenuBar ) static long = 1L ; public Dimension ( ( . ) , . ( height ) ; } setOpaque ( false ) JMenu menu char ] rgchItemShortcuts new char 20 = . addMenu . ) ; this . addMenuItem , PRINT , ) ; . addSeparator ( ) . addMenuItem ( menu , ThinMenuConstants . LOGON rgchItemShortcuts ) ; this . addMenuItem menu ThinMenuConstants LOGOUT , rgchItemShortcuts ) addMenuItem ( CHANGE_PASSWORD , rgchItemShortcuts menu . addSeparator ( ) this addMenuItem menu ThinMenuConstants . CLOSE ) ; = char [ 20 ] . ( , . EDIT ; this . , ThinMenuConstants . CUT , rgchItemShortcuts ( , rgchItemShortcuts ) ; menu , ThinMenuConstants . PASTE , rgchItemShortcuts menu . addSeparator ( ) addMenuItem ( menu , , rgchItemShortcuts ) ( oldResources != ) application . setResourceBundle ( oldResources ) ; if ) . ) ; return menuBar ;<CODESPLIT>Setup the standard menu items .
static String ( { final prefs = Preferences . ( . class ) if ( prefs != . ( "LANE_COUNT_ATTR_NAME" ) ; } return ; }<CODESPLIT>Replies the preferred name for the number of lanes of the roads .
public [ ] get ( , nsrollbackcmd_args ) Exception nsrollbackcmd obj = new ( ) option ( ) ; option set_args ( nitro_util . ( args ) ) ; nsrollbackcmd [ ] response ( ] ( option ) return response }<CODESPLIT>Use this API to fetch all the nsrollbackcmd resources that are configured on netscaler . This uses nsrollbackcmd_args which is a way to provide additional arguments while fetching the resources .
private ( int i ) if ( ! || < ) return i } int 0 rule = PatternRule ) . rule ; for int k = 0 ; k < i ; ++ j += ( ) } return j }<CODESPLIT>Gets the index of the element indexed by i adding any offsets because of the phrases in the rule .
String getProxyHostsWhiteList ( ) ( _proxyHostsWhiteList null _proxyHostsWhiteList size ( ) == ) return String [ ] hosts new String [ _proxyHostsWhiteList size ( ) ] ; hosts = ( String ] . ( ) return ; }<CODESPLIT>Get proxy host white list .
public ( MetatypeAd metatypeAd ) if ( this metatypeAds null this metatypeAds = LinkedList < ( ( MetatypeAd ad : ) if ( ad getID ( ) . equals ( metatypeAd . getID ) false add ) ; return true }<CODESPLIT>Adds a metatype AD .
public skip ( n ) IOException { if ( mInputStream . ( ) n { ( ; } close ) ; += n ; mObject = . ( null null , null ; mInputStream new BufferedInputStream ( mObject . getDataInputStream ( ) ) ; catch ( e ) { new IOException ( ) ; return n ; }<CODESPLIT>This method leverages the ability to open a stream from GCS from a given offset . When the underlying stream has fewer bytes buffered than the skip request the stream is closed and a new stream is opened starting at the requested offset .
static boolean ( JCTree Name name calledMethodName tree if ( name null ) table . names ; return name == names . _super ; { return false } }<CODESPLIT>Is this a call to super?
public static String getShortRequestDump ( String boolean includeHeaders HttpServletRequest ) StringBuilder dump StringBuilder ( ; append ( "Timestamp . ( ISO8601 . getTimestamp ( ) . append ( "\n" ) ; dump append ( "fromMethod : ) append ) append ) ; . . append ( request . ( ) . append ) . append ( "Scheme append ( request getScheme ) ) . '\n' ; dump . append ( : " ) append ( getRequestURI ( ) . append ( '\n' dump . append ( "Query-String " ) . append . ) . append ( ) ; append : " ) . ( request . getAuthType ( ) ( '\n' ) dump append ( "Remote-Addr ( request . ) . ( ) dump . append "Scheme " . request ) . append '\n' ; dump . append : " . append request getContentType ( '\n' dump . append ( " append request . append ( ) ; ( includeHeaders ) dump . append :\n" ) Enumeration String > headers = getHeaderNames ( ) ; while ( headers . ( ) header = . nextElement ( ) . append ( "\t" ) append ( ) . append ( " ) . ( request . getHeader ( header ( '\n' ) } return ( ( ) }<CODESPLIT>Build a String containing a short multi - line dump of an HTTP request .
static ( String stringToCheck trim , argumentName throws { validateNotNull ( stringToCheck argumentName ) ( ) == 0 ( trim && stringToCheck trim ( ) . length ( ) == 0 ) new ( + ) } }<CODESPLIT>Validates that the string is not null and not an empty string .
static JPanel ) _panel = new JPanel _panel . setLayout ( new BoxLayout ( _panel , ) ) _panel ; }<CODESPLIT>Create a panel that lays out components vertically .
boolean shouldAnalyze ) instanceof FileTypeAnalyzer ) FileTypeAnalyzer fileTypeAnalyzer = ( FileTypeAnalyzer analyzer ; return fileTypeAnalyzer . getActualFile ( ) ) } return ; }<CODESPLIT>Determines if the analyzer can analyze the given dependency .
void registerServiceClass serviceClass registeredServiceClasses . put ( ( ) , serviceClass ) ; Settings . Services ( . ( ; }<CODESPLIT>Registers a service enabling the service layer to automatically start autorun servies .
String getSectionText pageTitle sectionNumber ) throws Exception = this . getPageContent ( pageTitle , "&rvsection=" + , false ; }<CODESPLIT>get the text for the given section
public ( int [ , int ] ) if ( x . != y ( String . format "Arrays have different length: y[%d]" , x . length , y . length ) return Math cor ( x ; }<CODESPLIT>Pearson correlation distance between the two arrays of type int .
static TileGrid Point int zoom ) { ProjectionFactory . getProjection ( ProjectionConstants . EPSG_WORLD_GEODETIC_SYSTEM ) ; ( , , ; }<CODESPLIT>Get the tile grid for the location specified as WGS84
List > getVectorLayers ( ArrayList < > = ArrayList < VectorLayer > ) ; layer : layers ) if ( layer instanceof ) { list . add ( ( VectorLayer } } return ; }<CODESPLIT>Return a list containing all vector layers within this model .
private void calcRmsd [ ] x , Point3d [ ] y ) innerProduct y x ) ; else { = CalcPoint clonePoint3dArray x ) ; xtrans = . xref ; debug ( "x xtrans ) ; xtrans ( ; CalcPoint translate ( new ( ) , xref ) yref = CalcPoint ( y ytrans . centroid ( ) ; . "y " ) negate ( ; translate ( new Vector3d ( ytrans ) yref ; innerProduct yref , } calcRmsd ( wsum ; }<CODESPLIT>Calculates the RMSD value for superposition of y onto x . This requires the coordinates to be precentered .
public Title v ) ( Section_Type featOkTst ( Section_Type ) jcasType ) casFeat_sectionHeading == throwFeatMissing ( "sectionHeading" , ) ; jcasType . . ll_setRefValue ( addr , ( ( Section_Type ) ) casFeatCode_sectionHeading . . ll_getFSRef ( ; }<CODESPLIT>setter for sectionHeading - sets the title of the section
public Response process ( InputStream is IOException , , { SxmpParser parser = new ( version ) ; operation = null ; { = . is ) ; catch ( SxmpParsingException ) { if ( . getOperation ( != && ) getType ( ) != null logger ( "Unable to fully parse XML request, ErrorResponse; error: e ( ) + ", parsed: e . getOperation ( ) ) return new ErrorResponse e . ( ) . getType ( , e . ( ) ) e . getErrorMessage ( ) } else { throw ( e . getMessage , ; } try { ( ! operation instanceof ) ) { throw new ( SxmpErrorCode . UNSUPPORTED_OPERATION , "A session process requests" ) } req = ( Request ( req . ) null new ( . request must include if ( ! processor . ( . ( ) ) { throw SxmpErrorException ( . , failure" if ( ) { return processor . req . getAccount ( , ( ) operation ) ; } ( instanceof DeliverRequest ) { processor deliver ( req . ( ) ( ) operation ) } if ) { . deliveryReport req . getAccount ( DeliveryReportRequest ) } else throw , "Unsupported operation ; } } catch ) { . . ( ) return new ErrorResponse operation . getType ( ) , e . ( ) . e . getErrorMessage ( catch ( Throwable ) logger . ( "Major uncaught request, generating an ErrorResponse" ; return new ErrorResponse ( operation , . ( ) , request" ) }<CODESPLIT>Processes an InputStream that contains a request . Does its best to only produce a Response that can be written to an OutputStream . Any exception this method throws should be treated as fatal and no attempt should be made to print out valid XML as a response .
private void submitPayload ( String url . ConnectionSettings , jsonPayloadObject masterSecret , MessageResponseCallback callback < String > if ( redirectUrls . contains ( url ) { throw new PushSenderException ( "The site an infinite redirect url: + ; else . add url = null ; try { final credentials = + ; encoded = Base64 . encodeBytes getBytes ( UTF_8 ) httpURLConnection = ( HttpRequestUtil post ( url , encoded jsonPayloadObject , proxy ) final int statusCode = httpURLConnection ( ) logger . ( Level . INFO String . "HTTP code from UnifiedPush %s" , ) ) if ( isRedirect ( statusCode ) String redirectURL = httpURLConnection "Location" ) . ( Level . . ( "Performing , ) ; ( pushConfiguration . , , masterSecret ) ; } statusCode >= 400 ) . log Level SEVERE , Unified Server returned + ) ; throw new PushSenderHttpException ( } else { if callback != ) callback . ; } catch ( PushSenderHttpException pshe { throw pshe ; } catch ( Exception e { logger log ( Level . INFO , while trying to send the request" e ) ; throw ( e getMessage ( ) , e ) finally if ( httpURLConnection ) { httpURLConnection ) ; } }<CODESPLIT>The actual method that does the real send and connection handling
public [ ] ( ) if ( null || ) == 0 ) EMPTY_NAMES ; String arr = [ children . size ( ) ] ; for 0 i ; { [ i ] = ( RamResourceCore ) children . get ( i getName ) ; } return arr }<CODESPLIT>Gibt den Feldnamen children zurueck .
public static Object Object array , int index ) throws UtilTargetError "getIndex: , , index=" , index ; try if ( instanceof ) return ( ( List ? array . index ) ; val Array . get ( index ; return . wrap ( , . arrayElementType ( array . getClass ( ) ; } IndexOutOfBoundsException { int len = instanceof ? List array ) Array ( array ) ; throw new UtilTargetError ( " index + out-of-bounds for len e1 ) ; } }<CODESPLIT>Get object from array or list at index .
public base_response add nitro_service client aaakcdaccount resource throws Exception { addresource = aaakcdaccount ( ) ; kcdaccount = kcdaccount ; keytab = resource . keytab ; addresource . realmstr ; . delegateduser kcdpassword resource . addresource . usercert = . usercert addresource . cacert = resource return . add_resource ( client ) }<CODESPLIT>Use this API to add aaakcdaccount .
public synchronized void ( ) { if ( . ( ) && . isEntryEnabled ( ) ) SibTr . ( this this ) = false ; ! ) { if ( TraceComponent . ) && . ) . debug this , tc , "Waiting lock" ) ; wait ( 1000 ) ; catch ( InterruptedException ) = true } while 0 { { if isAnyTracingEnabled && tc isDebugEnabled ) ) debug tc , lock to 0 iLockCount ) ; wait 1000 ) ; } ( InterruptedException e ) { true } } if ( ) { . ) . ( ) if ( TraceComponent isAnyTracingEnabled ( ) && tc . isEntryEnabled ( ) . exit ( tc "lockExclusive" ) ;<CODESPLIT>This method locks the mutex so no other lockers can get the lock .
setCPOptionValueLocalService ( . commerce . product . cpOptionValueLocalService ) { . cpOptionValueLocalService = ; }<CODESPLIT>Sets the cp option value local service .
static String ( type ) PackageDeclaration pkg = getPackage ) ; return != null ? '/' + . replace '.' , '/' ) : }<CODESPLIT>Infers the Struts module path from the given controller class .
final int getLeapMonth cycle , int yearOfCycle ) { int [ getLeapMonths ) = ( cycle 1 ) 60 + - ; int index = 2 ( - [ ) / 3 lm = 0 ; ( < leapMonths length ) ) int = leapMonths [ index ; if ( elapsedYears ) += max 2 * ( ( - / ) ) else if ( > { break ; } else lm = leapMonths [ index 1 } } return lm ; }<CODESPLIT>number of leap month or zero if no leap year
public getSnippet ( snippetId , downloadContent ) { if snippetId ) { throw new ( "snippetId can't ) ; response = get ( Response . Status . OK , ) response Snippet class ) ; if ( { . setContent ( getSnippetContent ( snippet ) ) ; } return snippet }<CODESPLIT>Get a specific Snippet .
public final int ( int codePoint ) { value int ix ; ( codePoint >= 0 ) { if ( codePoint < 0x0dbff && ) ) { index UTRIE2_SHIFT_2 ] ix = ( ix << + ( & ) value data32 [ ] ; return value ; codePoint <= 0xffff ) { ix = index UTRIE2_LSCP_INDEX_2_OFFSET + ( codePoint ) >> ] ; ix UTRIE2_INDEX_SHIFT ( ) ; = data32 ix ; return codePoint < highStart ix ( - UTRIE2_OMITTED_BMP_INDEX_1_LENGTH + ( codePoint >> ) ; ix = [ ix ] ; += codePoint UTRIE2_SHIFT_2 ) & ; = ix ; ix = ix UTRIE2_INDEX_SHIFT ( codePoint & ) value = data32 [ return value if ( <= 0x10ffff { value = highValueIndex ] ; value return errorValue ;<CODESPLIT>Get the value for a code point as stored in the Trie2 .
static Object ( name , attrName ) throws MBeanServer = getMBeanServer ( ; ObjectName objName = new return server getAttribute ( objName , attrName }<CODESPLIT>Get MBean attribute object
public void setSelectedIndex final int ) { if ( items ( ) selectedIndex selectedIndex ) { IndexOutOfBoundsException ( to " + selectedIndex ) ; } final oldSelection . ; selectedIndex selectedIndex - 1 updateText "" ) } else { ( . get ( selectedIndex . toString ( ) ; } new Runnable ) public void run ( ) for ( Listener listener : listeners listener . onSelectionChanged , oldSelection ; } invalidate ) ; }<CODESPLIT>Programmatically selects one item in the combo box which causes the displayed text to change to match the label of the selected index .
getPhotoStats ( photoId date ) throws FlickrException ( METHOD_GET_PHOTO_STATS , "photo_id" photoId , date ; }<CODESPLIT>Get the number of views comments and favorites on a photo for a given date .
public ServiceCall < > getDocumentStatus ( GetDocumentStatusOptions getDocumentStatusOptions { . , "getDocumentStatusOptions cannot be String [ ] pathSegments "collections" , } String ] = { ( ) getDocumentStatusOptions . collectionId ( ) . documentId ( ) ; builder ( RequestBuilder . constructHttpUrl ( getEndPoint ( pathSegments , pathParameters ) ; builder query "version" versionDate ; Map < , String > . ( , "v1" ; for Entry < , String > : . ) ) { . header ( header ( header . getValue ) ) builder ( , "application/json" ) ; createServiceCall ( builder . build ( ) , . getObject . ) )<CODESPLIT>Get document details .
Pager > getClosesIssues ( , Integer , itemsPerPage throws GitLabApiException { return Pager < . class , itemsPerPage null , "projects" , getProjectIdOrPath ( projectIdOrPath ) mergeRequestIid , "closes_issues" ; }<CODESPLIT>Get a Pager containing all the issues that would be closed by merging the provided merge request .
public static final ( Class < ? > clazz , String ... ) if { String "" ; e null e . length == 1 { = StringWriter ; PrintWriter pw ( ) ; 0 . printStackTrace pw ) ; . ( ) ; exceptionStr "exception = " . toString ; } . err . println ( "[" + ( Date ) + "]" + "-" + + . getSimpleName ( "] " + + exceptionStr ) ; } }<CODESPLIT>To output the error log message to the error out
static ( HtmlStyle styleClass scope , body { htmltree = new HtmlTree HtmlTag . ) ; if ( != null ) htmltree addStyle ( styleClass ) ; htmltree . addAttr ( . nullCheck scope ) return ; }<CODESPLIT>Generates a TH tag with style class and scope attributes and some content .
void final int themeResourceId TypedArray typedArray ) getTheme ( ) . ( themeResourceId R . attr . materialDialogDividerMargin } ) ; setDividerMargin ( typedArray . , 0 ) ; }<CODESPLIT>Obtains the left and right margin of dividers from a specific theme .
setDefaultButton ( button this . getScreenFieldView ( ( button == null ? null : . getScreenFieldView ; }<CODESPLIT>Set the default button for this basepanel .
Key int k ) ( k k size ( root ) throw new Key , Value > x = select ( root , k ) . getKey ( ; }<CODESPLIT>Return the kth smallest key in the symbol table .
void add RequestHandler ) { . writeLock ( ) lock ) ; try newSessionRequests . add ( { . writeLock . unlock ( ) } }<CODESPLIT>Adds a request handler to this queue .
static < > T withPrintWriter ( stream , ClosureParams value SimpleType . class , options = "java.io.PrintWriter" ) ) throws IOException withWriter ( newPrintWriter , closure }<CODESPLIT>Create a new PrintWriter for this OutputStream . The writer is passed to the closure and will be closed before this method returns .
addRegexRoute ( urlPattern < ? extends Actor throws RouteAlreadyMappedException { addRoute ( new Route ( , true ) ; }<CODESPLIT>Add a URL pattern to the routing table .
public synchronized void ( KeenProject project , KeenCallback ) if ( ! ) { handleLibraryInactive ( callback ) ; return ; } && defaultProject { handleFailure ( new project specified, no default project found" ) return ; if ! ( ) { . log ( "Not sending is no network connection. " + "Events will retried next time is ; handleFailure callback , new not ) ; return useProject = project == ? : project try projectId = useProject ( ; < String List < Object > eventHandles = eventStore . ( projectId ) < , < Map < String > buildEventMap ( , eventHandles ; response publishAll , events ; if ( response != { try ( response ; catch ( Exception e { KeenLogging . response batch publish: " e . ( ) ) ; } ( ; } catch e ) callback , e ) }<CODESPLIT>Synchronously sends all queued events for the given project . This method will immediately publish the events to the Keen server in the current thread .
public ( ) { return ( ) == ? 1 ( getThreadPool ( . getQueue instanceof ( ( ArrayBlockingQueue ) ( ) . getQueue ) ) . size ( ) + ( ( ) . remainingCapacity : - 1 ) }<CODESPLIT>this should only be used as an estimate
final public AuxiliaryTree ( boolean requiresFoot ) throws { jjtn000 = new ( ) ; boolean = ; jjtree ; Tree ; t = ) , true ) ; jjtc000 ; { true ) new ( t requiresFoot ) ; } catch ( jjte000 ) { ( jjtc000 ) { . clearNodeScope ( ) jjtc000 = false } else { ( ; if ( { if ( ) throw ( RuntimeException ; if ( jjte000 ) { { ( true throw ( ParseException ) ; } { ( true throw ( Error ) jjte000 } finally { jjtc000 . closeNodeScope ( jjtn000 , true ; } throw new Error statement function" ) ;<CODESPLIT>the argument says whether there must be a foot node on the aux tree .
INodeDirectory ( [ src , INodeDirectory , INode newNode int childIndex = null ; writeLock ( try { try { newParent rootDir addToParent src , , false propagateModTime , childIndex ) ; ) ; } catch ( e { return } if ( newParent null ) ; if ( newNode ( ) INodeFile = ( INodeFile BlockInfo = . ( ) < blocks . length ; ++ { newF . setBlock i , getFSNamesystem ( . blocksMap . addINodeForLoading ( blocks i ] , newF ) ; } } { writeUnlock ) ; return newParent ; }<CODESPLIT>Add node to parent node when loading the image .
public void setModel final MindMap , final notifyModelChangeListeners { this . lock ( ) ; try { if ( this . elementUnderEdit { . safeSwingBlockingCall ( ) { run endEdit ( ) ; } } ) ; final List int ] selectedPaths = new ArrayList int [ ] ( ( final Topic t : this . selectedTopics { selectedPaths . getPositionPath ( ; } . . clear ( ) ; final = this . ; this model assertNotNull ( , model ( PanelAwarePlugin : MindMapPluginRegistry getInstance ( ) . ( . class ) { p ( , oldModel , this model } revalidate ( ) ; = ( [ ] posPath : selectedPaths ) { final = this . findForPositionPath ( ) ; ( topic null ) ; } else topic ) this selectedTopics . add ( ) ; } if ( selectionChanged ) { ; } ( ) finally { this . unlock ; if ( ) true ) } }<CODESPLIT>Set model for the panel allows to notify listeners optionally .
OperationFuture > delete ( ) { loadBalancerMetadata findByRef loadBalancer ) ; loadBalancerClient delete ( loadBalancerMetadata . getId ( ) ; return new OperationFuture < > ( NoWaitingJobFuture ( ) ; }<CODESPLIT>Delete load balancer
public ( GetSnapshotRequest request ) checkNotNull ( request "request not null." ; checkStringNotEmpty request . ) should no be empty." ; InternalRequest internalRequest = . createRequest ( request , HttpMethodName . GET , , ( ( GetSnapshotResponse . class ) }<CODESPLIT>Getting the detail information of specified snapshot .
SuppressWarnings ( ) void excludeLoggers ( { try BugsnagAppender addExcludedLoggerPattern "org.apache.catalina.core.ContainerBase." + "\\[Tomcat.*\\][.]\\[.*\\][.]\\[/.*\\][.]\\[.*\\]" ; BugsnagAppender . addExcludedLoggerPattern . addExcludedLoggerPattern ( ) ; ( ignored ) } }<CODESPLIT>If using Logback stop any configured appender from creating Bugsnag reports for Spring log messages as they effectively duplicate error reports for unhandled exceptions .
public subtract ( relationships ) if ( null == base throw new ( ) ( int 0 ; base length ; i ++ ) { if null [ ] } = [ i new ( ) set . addAll base [ i ] ) ( != relationships . data [ i ] ) set . removeAll . data ] ; } } }<CODESPLIT>This should only ever be called when the relationships wrap an initial state and no other methods have been called .
private static < > E ( Class E type , String name , Reflections reflections ) { E result = null ; extends E = reflections . type < Class ? extends E > > endpointClasses new HashSet > ) for ( Class < extends E > : if ( ! Modifier . isAbstract ( clazz getModifiers ( ) ) . add ) ; } < Class < ? extends E = endpointClasses iterator ( ) ; ( iterator { Class E next iterator . ( ) ; if StringUtils startsWithIgnoreCase ( . getName ( "com.github.davidcarboni.restolino.routes." ) iterator . ( } . size ( ) ) endpointClasses ( ) > 1 ) { log . "Warning: found for {} endpoint: , name } try { ( ) next ) . ( ) catch ( Exception { . info ( instantiate class {}" , endpointClasses . iterator ( . next ) ) . printStackTrace ) ; } } return result }<CODESPLIT>Locates a single endpoint class .
public final void ( AOStream stream , Item ) if ( TraceComponent isAnyTracingEnabled ( ) && tc . isEntryEnabled ( ) ) , "writtenStartedFlush" key = SIMPUtils ( ( ) stream . getGatheringTargetDestUuid ( ) StreamInfo sinfo streamTable get key ; if ( sinfo != null ) streamId . equals ( stream . streamId ) { synchronized ( ) . item AOStartedFlushItem ) } { e = nls . ( "INTERNAL_MESSAGING_ERROR_CWSIP0001" new [ ] , null ) FFDCFilter processException e , , "1:2865:1.89.4.1" , this ; SibTr . exception tc , e SibTr error tc , , new [ "1:2872:1.89.4.1" } ; if TraceComponent isAnyTracingEnabled ) . ( ) ) SibTr . exit tc , "writtenStartedFlush" , ) throw e if ( TraceComponent . isAnyTracingEnabled ) && tc ( ) ) , "writtenStartedFlush" ;<CODESPLIT>Callback when the Item that records that flush has been started has been committed to persistent storage
public static List > getDetailSubreports ( ReportLayout reportLayout ) { List subreports new < ) ; = reportLayout ( ; ( int i = 0 rows . ( i < rows ++ ) { List < list band . ( i ) for int j = 0 size = list ( ) < j ++ ) { BandElement be . get ) ( be instanceof ReportBandElement ) { . ( ReportBandElement ) . getReport ) } } } return ; }<CODESPLIT>Get detail band subreports for a report layout
getApiApps ( throws return new ApiAppList ( ( auth ) . get ( BASE_URI + ) . asJson ; }<CODESPLIT>Retrieves a paged list of API apps for the authenticated account .
public detachAgent ( pVm ) try { if ( pVm ) clazz pVm ) ; = clazz ( ) ; method . setAccessible ( true ; invoke pVm catch ) throw new "Error detaching" , , options ) } ( NoSuchMethodException e ) throw new ProcessingException ( "Error detaching" , , options ) ; } catch ( IllegalAccessException ) throw ( "Error detaching" e options ) } }<CODESPLIT>Detach from the virtual machine
ObjectGraph Class < ? classes ) for Class ? > c : ) { { throw new NullPointerException "Null class not allowed" ; } excludedClasses . add ; } return ; }<CODESPLIT>Exclude any object that extends from these classes .
void setSampling double , double , int total ) this sampleMin = min this . sampleMax = = total this . new double [ numSamples }<CODESPLIT>Specifies how focal lengths are sampled on a log scale . Remember 1 . 0 = nominal length
private ( int v , prod , , excl2 { ( int = 0 < numNbsT1 ( ; ++ ) { if nb == excl1 || == excl2 ) { continue msgs opposingT1 ( v , ) ] prod elemMultiply ( nbMsg ) ; }<CODESPLIT>Computes the product of all messages being sent to a node optionally excluding messages sent from another node or two .
protected QPath itemPath ) ( int = . ( ) - 1 i >= ItemState istate = itemAddStates get ( i ) if ( istate . getData ( ) . getQPath ) equals ) return istate ; ; }<CODESPLIT>Find last ItemState .
void addDispatcher String , ) { synchronized ) { if ( dispatchers containsKey ( dispatcherId ) ) dispatchers . ( dispatcherId dispatcher ) }<CODESPLIT>Registering custom dispatcher
private void sgdTrain ( ClassificationDataSet D W , b int sign_mul boolean parallel { IntList order = IntList ( D . ( ) ListUtils ( order , , D . ( ) , 1 ; final double = / ( * epochs ) ; int owned int [ K ] ; int 0 int [ = [ D . size ( ; Arrays . fill ( assignments - 1 ) Vec dots new DenseVector ( W . ( ) ) long t for int epoch = 0 epoch epochs ; epoch ++ Collections . shuffle ( ; int : order ) t ++ double eta 1 / ( lambda_adj * ) ; Vec x_i = D . i ) . ( ; int y_i = ( i ) - ) b copyTo dots . multiply ) ; if ( y_i - ) for ( k = 0 k < ; ++ if get ( - 1 ) { W ( k ) . ( eta x_i ) ; b . increment k - ) ; } { int k_true_max = ; for ( int = 1 < dots . k ++ ) dots ( k ) dots get ( k_true_max = k ( ) < ) { z i , , owned assigned_positive_instances W ( ) . mutableAdd ( x_i ) ; b . increment ( z eta ; [ 0 assigned_positive_instances ; else owned [ assignments [ ] ] ; owned [ ] assignments [ i = ; } } W . mutableMultiply / ) ; mutableMultiply ( 1 1.0 ) ; }<CODESPLIT>Training procedure that can be applied to each version of the CPM sub - problem .
static appfwfieldtype ] ( nitro_service ) throws Exception { obj new appfwfieldtype ( ; appfwfieldtype [ ] ] obj . service ) ; return ; }<CODESPLIT>Use this API to fetch all the appfwfieldtype resources that are configured on netscaler .
public Future < > final Promise < Channel channelReadyPromise ) { long delay this . currentDelaySeconds . get ( ) channelReadyPromise addListener new GenericFutureListener < Channel > > { ( final < Channel > ) { long future isSuccess ) ? 0 : Math . max 2 ) MIN_CONNECT_DELAY_SECONDS ) ; ApnsChannelFactory this . . ( delay ; } } ) ; . bootstrapTemplate config ) . ( schedule new ( ) public ) { Bootstrap = . bootstrapTemplate ( ) channelFactory ( AugmentingReflectiveChannelFactory < ( ClientChannelClassUtil . ApnsChannelFactory this . bootstrapTemplate . ( group ( ) , , ) final ChannelFuture bootstrap . ; connectFuture . addListener ( GenericFutureListener < ChannelFuture > ( ) { void ChannelFuture future ) if ( . isSuccess ( ) ) future . cause ( ) ; } } ) ; . channel ) . closeFuture ( ) . addListener new < public void operationComplete ( final ChannelFuture ) channelReadyPromise tryFailure ( new closed HTTP/2 preface completed." ) ) ; } } ) } , , SECONDS ) ; channelReadyPromise<CODESPLIT>Creates and connects a new channel . The initial connection attempt may be delayed to accommodate exponential back - off requirements .
public List String > loadOptions ( String ) List args = new ArrayList ( ) ; File ( optionFileName ; stringWriter new ( ) InputStream inputStream new FileInputStream ( optionFile ) . copy ( inputStream stringWriter ; e ) { System . err . "Error reading options " + e getMessage ) ; . exit ( ) ; } e { . err "Error reading file: " e . getMessage ( ) exit 1 ; } String string stringWriter ( ) ; StringTokenizer ( ; while ( stringTokenizer . hasMoreTokens ( ) { args . add ( stringTokenizer nextToken ( ; return args }<CODESPLIT>Load options from a file
public runJob ( { try this . currentJob = this . . take ) ExecutionContext ( try { executionContextManager initialize ( ) ; } ExecutionContextException e { new this currentJob + context" e ) } this . currentJob . run ( ) ; } ( InterruptedException ) { } { this . . removeContext ) ; } }<CODESPLIT>Execute one job .
bind ( name model ) { getLocals put ( name , ) ; return ; }<CODESPLIT>Binds an object to the response .
byte [ getByteArray Integer { byte [ = null ; if ( != null ) { result ( offset ; } ( result }<CODESPLIT>This method retrieves a byte array containing the data at the given offset in the block . If no data is found at the given offset this method returns null .
public [ ] ( ) MetaClass metaClass = InvokerHelper . getMetaClass objectUnderInspection ) List = ) [ ] new [ metaMethods size ( ) ] int i 0 for ) iter . ) i ++ { MetaMethod metaMethod = ( MetaMethod ) iter . next ) result i ] = methodInfo ) ; return result ; }<CODESPLIT>Get info about instance and class Methods that are dynamically added through Groovy .
static long [ parse ( String pollers ) String ] periods = . ( ",\\s*" ) ; long ] result . length ; errors = false logger getLogger . class ) ; for i = ; . ; ++ ) { String period ] ; try { result [ i ] Long . parseLong period if ( [ i ] { . ( "Invalid must , period ; = true } NumberFormatException e ) . ( parse '{}' a long: {}" , , e getMessage ) ) ; errors true ; } if ( || periods length 0 ) logger . "Using a for poller intervals: , join ( DEFAULT_PERIODS ) return DEFAULT_PERIODS ; { result ; }<CODESPLIT>Parse the content of the system property that describes the polling intervals and in case of errors use the default of one poller running every minute .
public void setFooter key , value ) { Objects . value ) int = hasFooter = for ( _footerKeys size ( ) - 1 ; i 0 -- { . ) if ( equalsIgnoreCase key ) { if ( ) _footerKeys . remove ( ) ; _footerValues . ( i } else hasFooter = ; _footerValues . set i , value ) ; } if ( ! hasFooter _footerKeys add key ; add ( value } }<CODESPLIT>Sets a footer replacing an already - existing footer
public ( String name , value ) if m_elemContext m_startTagOpen ) { final patchedName = String localName = getLocalName patchedName ) ; final uri = getNamespaceURI ( patchedName , false ) ; ( uri , value ) ; }<CODESPLIT>Adds the given attribute to the set of collected attributes but only if there is a currently open element .
public createMimeMessage ( session ) { if ( isEmpty ( ) && ( ) IllegalArgumentException email content" } MimeMessage msg = new MimeMessage ( session ; msg setSubject subject ( ) ) . ( createMultiPart ) ) ; msg . setRecipients ( Message . , InternetAddress . parse ( recipients ) ) ; return msg ; }<CODESPLIT>Creates a MimeMessage containing given Multipart . Subject sender and content and session will be set .
public static ForwardCurveInterpolation ( String name , LIBORModelMonteCarloSimulationModel , startTime ) throws { int timeIndex = model . getTimeIndex ( startTime ) liborsAtTimeIndex = > ( ) firstLiborIndex getLiborPeriodDiscretization ( . getTimeIndexNearestGreaterOrEqual ( startTime ) firstLiborTime = . ( . ( firstLiborIndex ; if ( firstLiborTime > liborsAtTimeIndex . add ( model . getLIBOR ( , startTime , ) } double times = firstLiborTime startTime ( model ) - ) : model getNumberOfLibors ( firstLiborIndex ) ] ; 0 = ; int = firstLiborTime == startTime 0 1 ; ( int i ; < . getNumberOfLibors ( ) ++ add ( . getLIBOR timeIndex i ) [ i firstLiborIndex + indexOffset ] = getLiborPeriodDiscretization ( getTime i - startTime } RandomVariable [ libors = liborsAtTimeIndex . toArray RandomVariable liborsAtTimeIndex . size ) ] ) return ForwardCurveInterpolation . ( , libors , model . ( firstLiborIndex ) ;<CODESPLIT>Create a forward curve from forwards given by a LIBORMonteCarloModel .
public ServiceCall < deleteWord ( DeleteWordOptions deleteWordOptions ) { Validator . cannot null" ; [ ] pathSegments = { "words" } String ] pathParameters = { deleteWordOptions . customizationId , deleteWordOptions . ) } ; RequestBuilder . delete ( constructHttpUrl getEndPoint ( ) , pathSegments , ) ; Map < String , String > sdkHeaders getSdkHeaders , "deleteWord" ) ; String : entrySet header . getKey ) , header . ( ) ) ; } return ( builder build ( . getVoid ( ) ) ; }<CODESPLIT>Delete a custom word .
private tryMove ( x , y ) { float newx = + x float = if ( newx ) { if blocked ( newx ) ) if blocked false } else = ; return ; } } else { playerX = newx ; return ; } else { playerX newx ; playerY newy ; true ; } }<CODESPLIT>Try to move in the direction specified . If it s blocked try sliding . If that doesn t work just don t bother
recover ) { try . messages clear ) this . dataLogger . ( ) ( this ) ; } catch ( Exception e ) { ( e ) } }<CODESPLIT>recovers the dataRecorder all messages are removed and all the messsages of the logger are recoverd
void clearSources { mAudioSources ) { for : mAudioSources ) { source . setListener ( null } . ( } }<CODESPLIT>Remove all of the audio sources from the audio manager . This will stop all sound from playing .
@ SuppressWarnings ( public static < V extends NumberVector > NumberVector guessFactory SimpleTypeInformation V in ) { . V > = ; if ( in instanceof ) = NumberVector < V > ( VectorTypeInformation < V > ) getFactory ( ; } if factory null ) { try { Field f = getRestrictionClass ( getField ) ; factory Factory > f get ( } catch Exception { LoggingUtil . ( "Cannot determine factory for type " + in . ; } } return factory ; }<CODESPLIT>Try to guess the appropriate factory .
public void balance ( ) { ! rootDir exists ) ) . mkdirs ) ; if ( rootSaveDir . exists ( ) . ( if ( paths null ) paths Maps . newHashMap ( ; if ( == ) newArrayList ) ; for ( int 0 < numLabels ; i ++ ) . ( i ArrayList > ( ) ) ; add ( new File ( rootDir String . valueOf i ) ) ; } while ( . hasNext ( ) { dataSetIterator next ( ) ; ( < 0 ) miniBatchSize . numExamples ( ) ( = ; i < . numExamples ) ; ++ ) { DataSet currExample next . get ( i ) ; ! labelRootDirs . ( . outcome ( ) ) ) labelRootDirs ( . ) mkdirs ) = new currExample . outcome ( ) , . ( paths get ( currExample outcome ( ) size ) currExample . ) ; paths . get . outcome ( ) . add example ) ; } } int = ; while ( ! . ( ) ) { < DataSet miniBatch ArrayList < ; ( . size ( ) miniBatchSize && paths . isEmpty ( ) ) for ( i ; < ; ( paths . ( ) != null . get ) ) ) DataSet new DataSet ) load ( paths . get ( ) . ( ) ) ; . ) ; paths . remove ( ) ; } } ( rootSaveDir ) ) rootSaveDir . mkdirs ) if miniBatch ( { DataSet = DataSet . ; if ( != null dataNormalization . ( merge ) ( new File ( String . format ) ) } }<CODESPLIT>Generate a balanced dataset minibatch fileset .
static boolean double { double gpsTime = ; gpsTime += countleaps ( gpsTime , true ) return isleap ) ; }<CODESPLIT>Test to see if a unixtime second is a leap second
void setSunXMLHeaders final , final String sXMLHeaders String sPropertyName = SUN_XML_HEADERS ; _setProperty ( , sPropertyName ; }<CODESPLIT>Set the Sun specific XML header string .
private void sendKeepAliveBridgeMessage int appId String bridgeId String , final CallStatsHttp2Client httpClient ) { long apiTS = System . currentTimeMillis ( ) BridgeKeepAliveMessage ( ) ; String gson message ) httpClient . sendBridgeAlive ( keepAliveEventUrl , , requestMessageString new ( { public void onResponse Response response ) int . code ( ) ; BridgeKeepAliveResponse keepAliveResponse ; { String responseString ( ) ( ) keepAliveResponse gson . fromJson ( responseString , class ) ; catch ( IOException e { e throw new ) } ( JsonSyntaxException ) { logger . ( Syntax Exception + e . ) e ) ; e printStackTrace ; e ) ; } setDisrupted ; responseStatus == CallStatsResponseStatus . RESPONSE_STATUS_SUCCESS ) { keepAliveStatusListener ) else if ( == CallStatsResponseStatus INVALID_AUTHENTICATION_TOKEN ) ( ) CallStatsErrors . , ) ; else { httpClient setDisrupted ) ; } } public ( Exception ) { info ( "Response exception " e toString ( ) ; httpClient . setDisrupted ) ; } } }<CODESPLIT>Send keep alive bridge message .
public getResource final resourceName , final nodeId , final Map String > { final StreamingOutput sOutput ( ) { public void ( OutputStream ) throws { final revision = queryParams . get REVISION ) ; String = . get . WRAP ) ; String doNodeId . get ( . ; boolean = wrap == null ? false : ( ) final boolean == ) . equalsIgnoreCase ( ) final Long rev = == null ? null Long . valueOf ( revision ; ( resourceName , nodeId , rev , , wrapResult ) } } return sOutput ; }<CODESPLIT>This method is responsible to deliver the whole XML resource addressed by a unique node id .
public [ ] createManagedEntities ( sc , ] mors if mors == null ) return ManagedEntity ] ; [ ] mes = new ManagedEntity [ mors . ( i < ; ++ ) { mes [ i ] = createExactManagedEntity ( sc i ) ; } return mes }<CODESPLIT>Given a ServerConnection and an array of MORs return an array of MEs
public Function < , String ( I_CmsFormatterBean formatter , Supplier CmsXmlContent > ) return result ; if != ) { result = formatter . getAttributes ) . ( ) { content = get ) ; ( content != null ) { result = content ) . getParameter ( key ) } return result ; } ; }<CODESPLIT>Helper method to create a string template source for a given formatter and content .
private ByteBuffer createReadWriteMessage ( final opCode , logicalBlockAddress final transferLength { ByteBuffer = ByteBuffer ( ; cdb ( ) ; cdb . ( LOGICAL_BLOCK_ADDRESS_OFFSET ) ; cdb . putInt ( logicalBlockAddress ) TRANSFER_LENGTH_OFFSET . putShort ( ) ; rewind ( ) ; return cdb }<CODESPLIT>Creates the Command Descriptor Block for a given Operation Message .
long ByteBuffer [ ] int offset int ) IOException { long rc fillAppRead ( 0 ) { return ; } return ByteBuffers . move ( appRead offset , length ; }<CODESPLIT>Reads ByteBuffer from peer . Starts handshaking if needed .
static ( MemorySegment [ , int , value { if ( inFirstSegment segments , segments [ 0 ] putInt ( offset , ) ; } else { ( , value ) } }<CODESPLIT>set int from segments .
Optional < > getOptionalUser ( String ) { { ( . ofNullable ( getUser ( username ) ) GitLabApiException glae ) ( GitLabApi . ) ) }<CODESPLIT>Lookup a user by username and return an Optional instance .
protected registerRateLimiterComponent ( { String = GatewayConfigProperties . COMPONENT_PREFIX + IRateLimiterComponent class ( ) ; , ESRateLimiterComponent . getName ) ; setConfigProperty ( componentPropName + ".client.type" , "jest" componentPropName ".client.protocol" setConfigProperty ".client.host" "${apiman.es.host}" ) ( + ".client.port" "${apiman.es.port}" ; setConfigProperty ( componentPropName + ".client.username" , "${apiman.es.username}" setConfigProperty ( + ".client.password" , "${apiman.es.password}" ) }<CODESPLIT>The rate limiter component .
public Point3d getCoordinatesFromGridPoint gridPoint ) { int dimCounter = 0 ; new ( , ) ; for int z 0 ; < [ 0 ] [ 0 . z ) ( int y y < grid [ . ; y ) { for int = 0 ; x grid . length ++ ) ( ) { point . x minx + * ; + latticeConstant ; z = minz + * z ; return point ; } } } return point ; }<CODESPLIT>Method calculates coordinates from a given grid array position .
setColor ( Color { if ( null { _color = COLOR ; } else { . set ( } }<CODESPLIT>Defines the color that will be used to colorize the section in a clock .
void EventId eventId ) { Lockable V eventWrapper sharedBuffer . getEvent ( ) ; { if ( eventWrapper release ( ) ) sharedBuffer . removeEvent ( eventId ) ; } else sharedBuffer , ) } } }<CODESPLIT>Decreases the reference counter for the given event so that it can be removed once the reference counter reaches 0 .
public toSql ( showParameters ) String sql ; if ( { metaModel getDialect formSelect ( null , orderBys limit , offset ) ; } else sql != ? getDialect formSelect metaModel . ) null , , orderBys , , ) ; } if showParameters ) { StringBuilder = new sql ) . ( ", with " ) join ( sb , params ", " ) = toString ) } return sql ; }<CODESPLIT>Use to see what SQL will be sent to the database .
private ( StylesheetHandler handler ) TransformerException { Source = ; processor handler . ( ) uriresolver . getURIResolver ; ( uriresolver != null { String href = getHref ( ) ; String base = ) uriresolver resolve base ) ; } return s }<CODESPLIT>Get the Source object for the included or imported stylesheet module obtained from the user s URIResolver if there is no user provided URIResolver null is returned .
String ) { if . featOkTst ( Journal_Type jcasType ) . casFeat_title null ) "title" , "de.julielab.jules.types.Journal" ) return jcasType . ll_cas ll_getStringValue ( addr , ( ( ) . casFeatCode_title ; }<CODESPLIT>getter for title - gets Full journal title C
static Val ( Object if ( o && o instanceof Val ) { return Cast . as ) return ( o ; }<CODESPLIT>Convenience method for creating a Convertible Object
protected ( SparseDoubleVector meaning , < String , { ( String : ) if ! term . IteratorFactory EMPTY_TOKEN ) ) { int dimension = basis term ; - ; . set ( dimension , weighting . weight ( distance , ) ; ++ distance ; } }<CODESPLIT>Adds a feature for each word in the context that has a valid dimension . Feature are scored based on the context word s distance from the focus word .
ArrayList > getViews ( try { ( . ) { Log . ( config } return viewFetcher . ( null , false ; } catch ( Exception e ) { ) ; return } }<CODESPLIT>Returns an ArrayList of all the View objects located in the focused Activity or Dialog .
private E extends > SparseDoubleVector ( WeightedGraph < E > g int vertex { ( SparseDoubleVector weightVec . get ) if ( == null ) ( this { = vertex ( == null weightVec computeWeightVector ( , vertex ) ; vertexToWeightVector . put ( vertex , ; } } return weightVec else return ( g vertex ) ; }<CODESPLIT>Returns the normalized weight vector for the specified row to be used in edge comparisons . The weight vector is normalized by the number of edges from the row with positive weights and includes a weight for the row to itself which reflects the similarity of the keystone nod .
static fillRows ( [ ] , TypeDescription schema , VectorizedRowBatch int [ selectedFields { Math . ( int . ( ) , rows . length ) List > = ) int = 0 < . length fieldIdx ++ ) int orcIdx = selectedFields [ fieldIdx readField ( , fieldIdx , fieldTypes . get ( orcIdx , batch . orcIdx rowsToRead ; return rowsToRead ; }<CODESPLIT>Fills an ORC batch into an array of Row .
< ICalProperty getProperties component ) { return ICalProperty > ( component . getProperties ( . values ; }<CODESPLIT>Gets the properties to marshal . Child classes can override this for better control over which properties are marshalled .
public double computeTauAndDivide final int , final numRows , final [ , final double max double tau ; for i = j ; i < numRows ; i d u max d d ; = . sqrt ) ; if ( u [ j ] ) tau - tau ; return tau }<CODESPLIT>Normalizes elements in u by dividing by max and computes the norm2 of the normalized array u . Adjust the sign of the returned value depending on the size of the first element in u . Normalization is done to avoid overflow .
public Epic getEpic String epicKey , Map < , Epic > String = . getJiraBaseUrl ( ) + ( featureSettings getJiraBaseUrl ( ) endsWith "/" ) ? "" : "/" ) . format EPIC_REST_SUFFIX epicKey ) ; > responseEntity = makeRestCall ) String responseBody = responseEntity . getBody ) JSONObject issue = ( JSONObject ) parser . ) ( null ) { issue epicMap ParseException ) { error ( "Parser exception parsing , pe ) ; ( e { LOGGER . ( "Error calling JIRA API" ) ; } null ; }<CODESPLIT>Get Epic using Jira API
Serializable getLayoutConstraints final child PanelModel model = ) ; if ( model layoutConstraints != null ) { . get child ) } return }<CODESPLIT>Retrieves the layout constraints for the given component if they have been set .
public Map < , Set < String > getReverseMap ) { Map . Entry < Set < String > . entrySet ) < String < = HashMap < String , Set > > ( . size ) ; Map . Entry < String , Set String > > entries ) { k = me getKey ) ; Set String > transList getValue ) for ( ) < > entry = rMap ( ; if ( == null ) < String toAdd = new String ( 6 ) ; toAdd . ( k put ( trans , toAdd ) ; } { entry add ( k } return rMap<CODESPLIT>Returns a reversed map of the current map .
public ( String refreshToken ) lock . ) if refreshToken != ) Preconditions checkArgument jsonFactory != null != && clientAuthentication != null && tokenServerEncodedUrl != null the and + ) } this . refreshToken = refreshToken ; } finally { lock unlock ) ; } return this }<CODESPLIT>Sets the refresh token .
void EGLSurface eglSurface ) ( mEGLDisplay EGL14 EGL_NO_DISPLAY { Log . d TAG , } if ( ! . eglMakeCurrent ( mEGLDisplay eglSurface , eglSurface , mEGLContext ) ) { "eglMakeCurrent failed" ) } }<CODESPLIT>Makes our EGL context current using the supplied surface for both draw and read .
static < T final T defaultValue , , final Object ... paths ) { return navigateOrDefault defaultValue , ; }<CODESPLIT>Use navigateOrDefault which is a much better name .
void clearCache CommerceWarehouseItem commerceWarehouseItem ) . removeResult CommerceWarehouseItemModelImpl ENTITY_CACHE_ENABLED CommerceWarehouseItemImpl . class , . getPrimaryKey clearCache ( FINDER_CLASS_NAME_LIST_WITH_PAGINATION ) finderCache . clearCache ( ) ; clearUniqueFindersCache ( commerceWarehouseItem , true ; }<CODESPLIT>Clears the cache for the commerce warehouse item .
private void process ( String input output ) MPXJException IOException { MPPReader reader = MPPReader ( ) ; = reader . read input ; varDataFileName projectDirName ; int = NumberHelper . ( m_project . getProjectProperties ) . getMppFileType ) ; { 8 : { projectDirName = ; "FixDeferFix 0" ; break ; } : projectDirName = ; "Var2Data" ; break ; } : { projectDirName = " 112" varDataFileName = "Var2Data" break ; case 14 : { projectDirName " 114" ; = "Var2Data" } : { throw new ( file type " + ; } } FileInputStream new input ; POIFSFileSystem fs new POIFSFileSystem is ) is . close ( ) DirectoryEntry root = fs . getRoot ( m_projectDir = ( ) . getEntry ( projectDirName String , String = HashMap String ( ; task : { mapText ( task . ( , ) ; processReplacements ( ( DirectoryEntry ) . ( ) , replacements ; replacements . clear ( for ( Resource resource m_project . ( ) ) { mapText ( . ( ) , replacements ; ( resource . getInitials ) , ) processReplacements ( DirectoryEntry ) m_projectDir getEntry "TBkndRsc" ) , varDataFileName replacements , ) ; replacements . clear ( ProjectProperties = . ( ) ( ) , replacements ) ; m_projectDir , true replacements ( ) ( . getProjectTitle ( replacements ) mapText ( getSubject ( ) , ; properties . ( ) ; mapText ( replacements ) ; ( properties getComments ) , replacements ; ( , "\005SummaryInformation" , ; replacements . clear ( ) mapText ( properties . , replacements ) ( . ( ) , replacements ) mapText ( . , replacements ) processReplacements "\005DocumentSummaryInformation" replacements FileOutputStream os = new FileOutputStream ( . writeFilesystem ( os ) . flush ( ) os ) fs close ;<CODESPLIT>Process an MPP file to make it anonymous .
public setRollbackOnly ( { final isTraceOn = TraceComponent . isAnyTracingEnabled ; if isTraceOn tc ) ) . entry , , this ) ; } LocalTransactionCoordinator lCoord getLocalCoord ; ( { ( ; } try txService . ( ) ; catch Exception e ) { . processException ( e CLASS_NAME + "556" , ) throw new IllegalStateException ( "No transaction" ) ; } } if && tc . ) ) Tr ( "setRollbackOnly" ; } }<CODESPLIT>Marks the current local or global transaction to be rolled back
static boolean ( String content { if ( content contains "\"reason\":\"missing\"" ) ) return true ; } document not error is content ) ; return }<CODESPLIT>Analyses the content of a 404 response to see if it is legible for retry .
private ListenableFuture < > writeBlocksToTargets ( Collection < . > outputBuffers , [ ] serialized ) { Preconditions . checkArgument ( m_tableTasks serialized . Preconditions . checkArgument . == serialized length ) ; final List < ? > = ArrayList ListenableFuture < > > ( outputBuffers . ) ; Iterator < DBBPool . BBContainer > = outputBuffers . ( int serializedIndex ; for : ) final DBBPool = containerIter next ( ; ByteBuffer buf . ) ; buf ( [ ++ ] task . m_target . ( ) ; . position ( ; < . BBContainer > valueForTarget . ; if ( task . != ) for filter : task . m_filters ) valueForTarget filter . filter ) } ListenableFuture > writeFuture = . ( , ) ; if ( writeFuture != null ) writeFutures ( writeFuture } return . ( writeFutures ) ;<CODESPLIT>Finalize the output buffers and write them to the corresponding data targets
isTerminal ( atom < IAtom , Integer { return graph [ atomToIndex . get ( ) ] . ; }<CODESPLIT>Is the atom terminal having only one connection .
private < AsyncResult Void > createUndeployHandler ( final Message < message ) return Handler Void > ) { handle AsyncResult < Void > result ) { ( failed ) reply ( . putString , ) . ( "message" , . cause ( ) . getMessage ) ) } else { message . reply ( new ( ) . "status" ) ; } } ; }<CODESPLIT>Creates a platform undeploy handler .
public PhotoAllContext getAllContexts ( String photoId FlickrException { < > setList new PhotoSetList PhotoSet > ( ) PoolList < Pool > = PoolList Pool ) ; PhotoAllContext = new PhotoAllContext ) ; Map < , Object > = HashMap > ) ; parameters . put , ; parameters . put ( "photo_id" ) Response response . transport . getPath ( ) , apiKey , sharedSecret ) ; ( response . ( ) { throw new FlickrException ( . getErrorCode ( , response ) ; } Collection < > = response . getPayloadCollection ; for ( Element photosElement if setElement . getTagName ) . ( "set" ) { PhotoSet pset = PhotoSet ( ) ; pset . setTitle . getAttribute ( ) ; pset . setSecret ( "secret" ) pset setId getAttribute "id" ) setFarm ( ; pset . setPrimary setElement getAttribute "primary" ) pset . ( setElement getAttribute "server" ) setViewCount ( ( setElement . getAttribute ( ) ) ; pset setCommentCount ( . parseInt ( setElement . getAttribute "comment_count" ) ) ; pset setCountPhoto Integer . parseInt ( . getAttribute ( "count_photo" . setCountVideo ( . ( setElement . getAttribute "count_video" ) ) ; setList add ( ) ; . ( setList ) ; else getTagName ) . equals ( ) { new Pool ; setTitle ( getAttribute "title" pool . setId ( setElement . getAttribute ( "id" ) pool setUrl setElement getAttribute ( "url" . setIconServer setElement . getAttribute ( "iconserver" ) ; ( setElement . getAttribute ( ) ) ; . setMemberCount ( parseInt ( getAttribute ( "members" Integer ( setElement . getAttribute ( "pool_count" poolList add ( ; allContext . ( } } }<CODESPLIT>Returns all visble sets and pools the photo belongs to .
public Map < , Object > getFieldData ( < , Object > ) { Map < String , Object propReturn = != null = new Hashtable , ) ( int i = 1 i ++ { DBParams FIELD + . toString ( i ) = ( String ) properties . get ( ) ; if strFieldName ) break record = ( ; ( strFieldName '.' - 1 { = this ( ( 0 . ( ) ; strFieldName = strFieldName substring ( strFieldName . ( '.' ) + 1 } field = null ; ( record null = record getField ( ; if ( != null ) propReturn . put ( strFieldNumber , getData ( ) } return propReturn ;<CODESPLIT>GetFieldData Method .
void connect InetAddress , int ) throws SocketException { . ( ) . ( ) ; connect0 ; connectedAddress address ; port ; connected = }<CODESPLIT>Connects a datagram socket to a remote destination . This associates the remote address with the local socket so that datagrams may only be sent to this destination and received from this destination .
private getEscaped ( { pos if ( pos == length { throw IllegalStateException "Unexpected + ; } chars pos ] ) { case '"' : '\\' : case ',' case case : case '#' : case ' : case : case '%' : '_' return [ pos ] ; return getUTF8 ( ) ; } }<CODESPLIT>returns escaped char
static ( String expression if ( . ( . VALIDATION_MATCHER_PREFIX ) && . endsWith { return expression . ( Citrus . VALIDATION_MATCHER_PREFIX length ( ) , expression . length ( ) Citrus . ( ) } expression ;<CODESPLIT>Cut off validation matchers prefix and suffix .
public < TypeElement implementingClasses ( typeElement ) { SortedSet < result ( , SortedSet < intfcs = typeElement false ) ; Iterator < TypeElement > = iterator ) . ) Iterator < implementingClassesIter implementingClasses ( . next ( ) iterator ( ) ; ( implementingClassesIter . hasNext ) ) c = . next ( ; if ( result . contains ( ) ) { add ( ) } } return ; }<CODESPLIT>Return the set of classes which implement the interface passed .
void add ValidationResult ) &= validation . if ( ! validate ) ; errors . addAll ( ; warnings addAll ( . warnings }<CODESPLIT>Adds a validation result to this .
public static String ( obj ) { buf = new ; MetaFieldInfo ] = toMetaFieldInfoArray ( obj , null ) ; for ( int = 0 ; < fields i ++ { field = fields ; buf . append ( . ) ; append ( "=" ) if ( field actualValue != null . ( equals ( String . { append ( ) . value ; buf append ( '"' ) buf . append ( . ) ; if ( + < fields . length ) . append ) ; } buf . ) ; }<CODESPLIT>Creates a string for an object based on the MetaField annotations .
String getArrayClassName Class ? > ) { if . ( ) ) return getArrayClassName ( clazz . "[]" ; return clazz . getName ( }<CODESPLIT>Formats the class name with trailing square brackets .
synchronized addBlock ( block ) if ( ( ) return } BlockScanInfo info = . ( ; if != null ) { LOG . warn ( "Adding " block info info new BlockScanInfo ( block ) ; info . lastScanTime = getNewBlockScanTime ( ( ) ; adjustThrottler ( ) }<CODESPLIT>Adds block to list of blocks
String int x , ) { ( x getArrayWidth ( ) ) ( y ( x < 0 || ( y < ) ) { throw new IllegalArgumentException ( ) ; x ] [ ; }<CODESPLIT>Gets a tile of the XPM Image .
public final String name String bitLenExpression final sizeExpression { final Item item new Item , this . byteOrder ; item . bitLenExpression assertExpressionChars ( bitLenExpression ) ; item . sizeExpression = ( ) . ( item ) ; }<CODESPLIT>Add named bit array where each bit length is calculated through expression .
public static Object ( String strPattern , String , offset , boolean , matchAll ) { PatternMatcherInput input = ) ; Perl5Matcher = ( ) compileOptions : . CASE_INSENSITIVE_MASK ; compileOptions += SINGLELINE_MASK ; offset < ) = Pattern pattern = getPattern strPattern , ) ; if offset <= strInput . ( ) ) . ( offset - ) ; if strInput length ) ) new ( ) while ( matcher input ) ) { = matcher . ( ) beginOffset ( 0 ) 1 ; if ( ) { return new Double ( match } appendEL ( ; } if ( matches . ( 0 ) { } return 0<CODESPLIT>return index of the first occurence of the pattern in input text
private checkRegisteredServicesByLdapFilter ( filter ) InvalidSyntaxException { ? > getBundleContext ( ) . ( ( String , filter if ( isEmptyOrNull ( references ) ) { return ( . { ) getService ( references [ 0 ) ; } throw new RuntimeException ( registered filter: " + filter ) }<CODESPLIT>Checks the OSGi ServiceRegistry if a service matching the given filter is present .
public ( DEvent event ) if ( null ( event ; ( != null ) . ( event ) ; } else { log "Dropping event for non- managed , ( ) , "class" , getClass ( ) . getName ) "event" , event ) ; }<CODESPLIT>Posts the specified event either to our dobject manager or to the compound event for which we are currently transacting .
Identity createOverlayManagerGroup String { return ExtendedIdentifiers . . ICS_METADATA_NS_URI , IfmapStrings . ICS_METADATA_PREFIX "overlay-manager-group" , ; }<CODESPLIT>Create a overlay - manager - group identifier that is an extended identity identifier .
public DoubleMatrix cholesky DoubleMatrix A { DoubleMatrix result = A ( ) int = ( 'U' . rows . , 0 , A . rows ) if ( < ) ( info ; } ( > 0 { throw new LapackPositivityException ( , "Minor " + + " was negative. Matrix positive definite." } clearLower result ) return result }<CODESPLIT>Compute Cholesky decomposition of A
public static boolean final String className , final String methodName ) throwable new ( StackTraceElement [ = throwable ( ; if ( null == stackElements ) LOGGER . ( . stack" false } final = . equals methodName ) ; ( i = 1 ; < stackElements . i ++ if ( [ i ] getClassName ( ) equals ( className ) ) { matchAllMethod true : stackElements getMethodName ( . methodName ; } } return ; }<CODESPLIT>Checks the current method is whether invoked by a caller specified by the given class name and method name .
setFlag ( name String value ) throws IOException ( "setflag" name , value ; }<CODESPLIT>set JVM command line flag
Q Position position , , Expression ? expr { Expression < ? flag = getType ( ) , + "{0}" , expr ; return queryMixin . addFlag new , flag ) ; }<CODESPLIT>Add the given prefix and expression as a general query flag
static ( Channel c ) channel = SocketChannel c InetSocketAddress hostAddress = channel localAddress ( InetSocketAddress ( channel ) ; scheme = channel . ( ) . get ( SslHandler . class ) null : ConnectionInfo , remoteAddress scheme ) }<CODESPLIT>Retrieve the connection information from the current connection directly
public PDPDomain getPDPDomain String pdpDomainName throws IOException { SortedSet String > domainRanges = null ; ( serializedCache != null ) { if containsKey pdpDomainName ) = serializedCache . pdpDomainName } boolean = checkDomainRanges ( domainRanges ) ; try { if shouldRequestDomainRanges { u = new URL server + "getPDPDomain?pdpId=" pdpDomainName . info ( "Fetching {}" , u ) ; InputStream response = u ) xml = JFatCatClient . ( response ) ; = getDomainRangesFromXML xml ; if domainRanges null ) ) ; ( e ) { logger error ( "Problem generating request for " pdpDomainName , e throw IllegalArgumentException ( "Invalid PDP " , pdbId = null < = < ResidueRange > ( ) ; for : domainRanges SubstructureIdentifier = ( ) ; ( pdbId == pdbId = ( } if . equals ( strucId . ) ) { throw new RuntimeException ( "Don't take the union of multiple PDB IDs." ; } addAll ( strucId . getResidueRanges ) ) return ( , ranges ) }<CODESPLIT>Get a StructureIdentifier representing the specified PDP domain .
Context getContext ) { if ( != null { searchView getContext ( ) ; } else if ( return supportView . ) ; } ( ERROR_NO_SEARCHVIEW }<CODESPLIT>Returns the context the view is running in through which it can access the current theme resources etc .
private isMacroCycle ( ring , { if ( ring getAtomCount ( < 8 ) for ( : ring ( ) boolean found = false ; ( IAtomContainer other : . { == ) continue ; ( . contains bond ) { found = true break if ( ! found true ; } return false ; }<CODESPLIT>Check if a ring in a ring set is a macro cycle . We define this as a ring with > = 10 atom and has at least one bond that isn t contained in any other rings .
public > T datastoreToJava ( entity ) { ( == ) { null result T ) newInstance ) ; populate ( , result ) ; result ; } catch ( new ) ; } catch ( IllegalAccessException e ) throw RuntimeException ( e ) ; }<CODESPLIT>Convert a value from Google representation to a Java value
void updateCacheState Map String , > props ) { ( ) ; if cacheEnabled ) { authCacheServiceRef ; else { deactivate ( cc ) } }<CODESPLIT>Based on the configuration properties the auth cache should either be active or not .
public static QuerySnapshot ( final query , readTime final DocumentSet documentSet , final List < DocumentChange > documentChanges ) { return new ) { QueryDocumentSnapshot > documents List getDocuments ( { if ( documents == { synchronized documentSet { ( == null { documents = . ; } } } return Collections . unmodifiableList documents ) ; public DocumentChange > ( ) { unmodifiableList ( documentChanges ) ; } ( ) return documentSet . size ) ; boolean Object o ) ( == ) { true ; } if o == null || ( ) != getClass ) { return ; that o ; return Objects ( . && . equals ( this . size , that ) && Objects . ( getDocumentChanges ( ) ( ) && equals ( getDocuments ( , that . ) } public int ( ) { return Objects . hash ( , this ( ) , ) ) ; } } }<CODESPLIT>Creates a new QuerySnapshot representing a snapshot of a Query with changed documents .
private boolean readSend InH3 hIn , OutboxAmp outbox HeadersAmp ) throws IOException MethodRefHamp methodHamp = null ; try { methodHamp = readMethod catch ( { log . Level e . ( ) , e ) ( hIn ; true } method = . getMethod ( ) ; methodHamp . getClassLoader ( ) ; Thread thread Thread . currentThread ) . setContextClassLoader loader ) ; args readArgs methodHamp , if ( . isLoggable _logLevel ) { log , this + " method getName ( + debugArgs ( args + " {to:" + + ", " + ) } SendMessage_N sendMessage = ( method . ( ) method method ) ) ; timeout = 1000L ; try . offer ) catch Throwable ) { log . ( e . ; ( log . ( Level FINEST ) ) { log ( FINEST , e ( ) ; } } return ;<CODESPLIT>The send message is a on - way call to a service .
private getRemoteFileName ( file ) if ( getProperty ( . ( "/" ) ) return file . service ) if ( file . getProperty ( PARAM_REMOTE_PATH ) . ) String file PARAM_REMOTE_PATH . split ( "/" ) return tmp tmp . length - 1 return . getProperty ( PARAM_REMOTE_PATH ) }<CODESPLIT>Checks if the remote file path contains also the remote file name . If it s not specified the name of the local file will be used .
public ( Task task ) final MetricGroup buffers addGroup "buffers" ; . gauge "inputQueueLength" , ( ) ; . gauge "outputQueueLength" , new OutputBuffersGauge task ) ) ; buffers . gauge ( "inPoolUsage" new task ) , OutputBufferPoolUsageGauge task ) ) }<CODESPLIT>Initialize Buffer Metrics for a task .
void doubleClick String fileName ) { new ( rect ) . doubleClick ( fileName ex ) { throw new QTasteException ( ex . getMessage , ex ) } }<CODESPLIT>Simulates a double click on the specified image of the area .
void setDestinationSSECustomerKey SSECustomerKey sseKey ) ( null this != null ) { throw new must not be set at the same time." ) ; . destinationSSECustomerKey = ; }<CODESPLIT>Sets the optional customer - provided server - side encryption key to use to encrypt the destination object being copied .
onFailure ( t Toast . makeText ( . getMessage ( ) , LENGTH_LONG . show ; }<CODESPLIT>show any error messages posted to the bus .
private void paintDropLines ( SeaGlassContext g ) { JTable . DropLocation loc . ( ) ; if == ) return } Color color ( Color ) style . ( , "Table.dropLineColor" ) ; shortColor = ( ) style get , ) if ( color == null shortColor ; Rectangle rect getHDropLineRect ( ) if != ) { . x ; int = rect width if ( != null { ( , ; setColor color ; . ( x . y rect . , rect . height if ( ! loc . isInsertColumn ( && != null ) { . ( ) g . fillRect , rect w , rect . height ; } } rect = getVDropLineRect ( ) rect != null { int y rect . y ; int h ; ( extendRect ( rect ) ; g setColor ; g fillRect ( rect , . y , rect . , . height ) ; } ( ! isInsertRow ) && shortColor != null { setColor ( shortColor ) ; g . ( x y , rect h ) ; }<CODESPLIT>Paint the drop lines if any .
DatalogProgram SWRLRule rule ) . accept this ; ( notSupported ) { . warn + errors ) ; . clear ( ) } DatalogProgram dp = datalogFactory . getDatalogProgram ( appendRule facts ) dp ; }<CODESPLIT>Translate the swrl_rule Return a datalog program containing the supported datalog facts
String inflateAuthnRequest final byte [ ] ) { inflated CompressionUtils inflate ( decodedBytes ) ; if ( ! ) ) { ; } return ( decodedBytes }<CODESPLIT>Inflate authn request string .
static ( final String final File , Properties , final IFilesystemFramework filesystemFramework { if ) ) { generateProjectPropertiesFile name , propertyFile , , properties , true ) ; } return propertyFile , filesystemFramework ; }<CODESPLIT>Create and generate file with the given properties if not null
static synchronized void ( ) { final LogContext = . LOG_CONTEXT ; Configurator = embeddedLogContext . getLogger ( ) . ) ; ( PropertyConfigurator ) LogContextConfiguration ( configurator ) . getLogContextConfiguration ( clearLogContext ( ; } if configurator instanceof ) { clearLogContext ( LogContextConfiguration ) ; } else { final List < > loggerNames = . embeddedLogContext . ( ) ) String : ) { embeddedLogContext getLoggerIfExists ( ) ; if ( null final Handler [ = . ( ) if ( handlers != ) { for ( handler handlers ) { handler . close ) ; } logger . ) . ) ; logger . setUseParentHandlers ( ) setLevel ( Level ) } } }<CODESPLIT>Attempts to clear the global log context used for embedded servers .
execute ( timeout timeUnit ) { return ( delegate . execute ( ) timeout , ; }<CODESPLIT>Executes the API request in a synchronous fashion using the given timeout .
public InputStream getInputStream HttpServletRequest request , MutableObject < [ > sourceMapResult ) IOException { byte [ ] bytes = this . bytes = this sourceMap String filename = filename = null if ( bytes != null result = ByteArrayInputStream bytes ; ( sourceMapResult null && sourceMapSize > 0 . setValue ( sourceMap ) ; } } if ( filename null ICacheManager cmgr ( ( IAggregator getAttribute IAggregator AGGREGATOR_REQATTRNAME ) ( ) File file new ( cmgr ( filename ) ; sourceMapSize 0 { result new FileInputStream ( file ; } else { data ; ObjectInputStream new ( FileInputStream ( ) try CacheData ) is . ) } ( ) { throw new IOException ( e ) , finally { IOUtils . is ; } bytes = data . ; sourceMap = data . null ) sourceMapResult . sourceMap ) ; result = new bytes else { new ( ) ; } result }<CODESPLIT>Return an input stream to the layer . Has side effect of setting the appropriate Content - Type Content - Length and Content - Encoding headers in the response .
public cacheIncludeAndIgnore ( table ) if ( getIgnoreByMatches ( ) ) { ( ArrayList ( ) for ( : ( ) ) { getIgnoreByMatches ( ) addAll ( . ( } getIncludeByMatches ) == { ( new < WebElement > ) ) ( : getIncludeOnlyRowsMatching ( ) ) { getIncludeByMatches ) . addAll . findElements by ) ; } } }<CODESPLIT>Does the table comparison
public > List < InlineDiffChunk E > > ( < > , List E > { null ) { this . inlineDiffDisplayer . ( this . diffManager . diff ( previous , next , } e ( e ) return null ; }<CODESPLIT>Builds an in - line diff between two versions of a list of elements .
public static CompletableFuture MessageSet > getMessagesAroundUntil ( TextChannel , Predicate < around { < > future = new CompletableFuture ( ) channel getApi ( ) . getThreadPool ( ) ( ) . submit ( ) -> List < Message > new < > ( ) ; Optional Message untilMessage = getMessagesAroundAsStream ( channel , around ) messages ) ( condition ) new untilMessage -> ) . ( Collections . ( ) ) ) } catch ( Throwable t ) future . ( t } ) ; return ; }<CODESPLIT>Gets messages in the given channel around a given message in any channel until one that meets the given condition is found . If no message matches the condition an empty set is returned . The given message will be part of the result in addition to the messages around if it was sent in the given channel and is matched against the condition and will abort retrieval . Half of the messages will be older than the given message and half of the messages will be newer . If there aren t enough older or newer messages the halves will not be same - sized . It s also not guaranteed to be perfectly balanced .
public findSipApplicationAnnotation ( InputStream stream { try [ rawClassBytes rawClassBytes new byte stream ) stream . rawClassBytes ; boolean one = ( rawClassBytes , SIP_APPLICATION_BYTES ; boolean two = contains ; && two ) return true ; } catch Exception ) { } return false }<CODESPLIT>Determine if this stream contains SipApplication annotations
protected Map < Object > buildJobDataMap ( final JmxCommand jmxCommand , ] ) MBeanException < String > jobDataMap HashMap String , Object > ( ) ; { int = ; : ( ) { process jobDataMap , . valueOf ( [ ++ ] ) ) } for ( : this . getArguments ) ) { . setValueUsingParser ( . valueOf ( params [ ind ] ) ; } e ) throw ( ) ; } return ; }<CODESPLIT>Initialize the JobDataMap with the Program arguments
private V ( buf ) Token t getNextToken ( ) if . tokenType != TokenType ) { IllegalStateException ( " + t ) ; } buf . append ( ) ( ( . tokenType . ) { } else if ( t . tokenType == TRAILING_BACKSLASH ) Vopt ( buf ) ; }<CODESPLIT>Vopt = EOL V
addHeader ( String final String sValue ) sValue != null ) _addHeader sName , sValue ; }<CODESPLIT>Add the passed header as is .
< N Number max ( List < ) { return cal ( numberList DoubleStream :: ; }<CODESPLIT>Max number .
public ( ) throws InvalidArgumentException if ( statusReturnCode - ) return ; } { final = ) ; proposalResponsePayloadDeserializer getExtension ( ) . ( ) ; return statusReturnCode ; } catch ( InvalidArgumentException e ; Exception throw new InvalidArgumentException e ) ; }<CODESPLIT>getChaincodeActionResponseStatus returns the what chaincode executions set as the return status .
generate ( < Env < AttrContext > > queue ) { generate queue , null ; }<CODESPLIT>Generates the source or class file for a list of classes . The decision to generate a source file or a class file is based upon the compiler s options . Generation stops if an error occurs while writing files .
public create ( final String , final , , String version final < , > parameters ) { new EnhancedMimeType ( primary , sub , encoding parameters ; MimeTypeParseException throw RuntimeException ( "Failed to create versioned mime type: " + primary "/" sub , ex ) ; }<CODESPLIT>Creates an instance with all data and exceptions wrapped to runtime exceptions .
static long Object long defaultValue ) { toNullableLong ( value ) ; return result != null ( long ; }<CODESPLIT>Converts value into integer or returns default when conversion is not possible .
public setIsolation ( iso ) JspTagException { if ( TRANSACTION_READ_COMMITTED . ( iso ) isolation TRANSACTION_READ_COMMITTED ; if ( equals iso ) { isolation = TRANSACTION_READ_UNCOMMITTED ; else ( iso isolation Connection . } if ( . equals ( iso ) ) { isolation = Connection ; } { throw new Resources . ( "TRANSACTION_INVALID_ISOLATION" ) ; } }<CODESPLIT>Setter method for the transaction isolation level .
void Node root ) { initTraversal root ; = root ; pushScope root ) ) ; popScope ( ; } catch ( Error | Exception unexpectedException ( unexpectedException ) } }<CODESPLIT>Traverses a parse tree recursively .
CollectionRequest < > ( String ) { String path String format ( "/workspaces/%s/tags" workspace ) ; return ( , Tag , path , "GET" ; }<CODESPLIT>Returns the compact tag records for all tags in the workspace .
CriteriaOnlyFindQuery ) { return ! peek ) isCliQuery ) , JsonParameter ( ( ) setOperation ( Operation . FIND ) , peek ( ) . ( ) ) ; }<CODESPLIT>A find query only given as criterion . Leave it to MongoDB s own parser to handle it .
private ( Node < E l ) E = . ; final < E = prev ; item null ; l . = null ; last = prev ; if ( prev == null . next null ; modCount ++ ; return element }<CODESPLIT>Unlinks non - null last node l .
static ( Hashtable < Object > , userDn char [ ] pwd { env , "simple" ) ; . put ( Context SECURITY_PRINCIPAL , userDn ) ; env . put , String ( ) ; }<CODESPLIT>Sets the environment properties needed for a simple username + password authenticated jndi connection .
createTeam ( name tag ) { return ( SERVICE , "createTeam" name , tag ; }<CODESPLIT>Create a new ranked team with the specified name and tag
private void checkFilePattern String s throws ProblemException { Pattern p ; if File separatorChar { p . compile ) } else if ( File . separatorChar '/' p Pattern ) { new ProblemException platform the unsupported + File . + as file separator character. add support for it!" ; } = p matcher s ) ; if ( m . matches ( ) ) new ProblemException ( \"" + + is not file ) ; }<CODESPLIT>Verify that a source file name is valid .
void close ) throws ( Entry < ShardingTransactionManager > entry : transactionManagerMap . entrySet ( ) ) . ) ( ) } }<CODESPLIT>Close sharding transaction managers .
protected String getBar long percentage { StringBuilder sb = new ) . ( sb . "% [" for int i = 0 ; i < ; ) if || - ) { append "=" ) } else if i percentage - 1 ) sb . append ( ">" ) } else sb . append ( " " ) ; sb . "] " ; sb toString ) ; }<CODESPLIT>Generates the progress bar for the given percentage
private ( T element , T > ) Set T > dependencies = . get dependencies != null ) for ( T dependency dependencies ) { resolve ( dependency , result ) } . result ( element ) ; }<CODESPLIT>Resolves an element .
B camundaOut String source , ) param modelInstance ( CamundaOut . class ) ; param ; param . setCamundaTarget target ) ; addExtensionElement ) ; return ; }<CODESPLIT>Sets a camunda out parameter to pass a variable from a sub process instance to the super process instance
createArgumentsReference ( { . name ( ; if ( isAddingTypes ( ) ) { result . argumentsTypeSupplier ( ) } return ; }<CODESPLIT>Creates a reference to arguments with the type specified in externs or unknown if the externs for it weren t included .
Date String dateString ) date = ; df new SimpleDateFormat ( "yyyy-MM-dd" ; try ( dateString ) ; catch ( ParseException ex { System . out . println ( ex ) ; } ; }<CODESPLIT>Takes a String and converts it to a Date
int cusolverRfSetNumericProperties cusolverRfHandle double zero , double return checkResult ( cusolverRfSetNumericPropertiesNative ( handle , , boost ; }<CODESPLIT>CUSOLVERRF set and get numeric properties
Object quoteIfString Object { return obj instanceof ( ( String obj ) : ; }<CODESPLIT>Turn the given Object into a String with single quotes if it is a String ; keeping the Object as - is else .
public Object > deleteUidAsync ( String type String name final uid_type = UniqueId . ( ) ( uid_type case METRIC : return metrics . deleteAsync ( name : tag_names ) : tag_values . deleteAsync ( name ) ; default : throw new UID " + uid_type ) ; }<CODESPLIT>Attempts to delete the given UID name mapping from the storage table as well as the local cache .
boolean int index ) ( config commandLogging { . d ( config commandLoggingTag , ; } return scroller scrollList ( waiter . ( index , ListView . ) DOWN , false ; }<CODESPLIT>Scrolls down a ListView matching the specified index .
protected ( MethodSymbol meth , treePath ) { result ( ) . get meth ) ( null ) if ( != null ) result setTreePath ( treePath ) ; } else { result new this , put meth result ) ; }<CODESPLIT>Create the AnnotationTypeElementDoc for a MethodSymbol . Should be called only on symbols representing annotation type elements .
Object call method ... arguments ) throws , IOException { return internal_call ( method , null 0 , ; }<CODESPLIT>Call a method on the remote Pyro object this proxy is for .
static String ( int total ) { total == 0 ? 0 : 1F * value return format ( average ; }<CODESPLIT>Returns value converted to percentage format .
static extends Geometry > T > ( < > expr , float , float expr . getType ( , SpatialOps . TRANSLATE expr , ConstantImpl . create ( deltax ) ( deltay ) ; }<CODESPLIT>Translates the geometry to a new location using the numeric parameters as offsets .
private static byte requestWebContent ( String url ) throws TVRageException { httpGet new ( httpGet . "accept" , ; DigestedResponse response = DigestedResponseReader . requestContent ( , CHARSET ; response . getStatusCode 500 { throw ( . HTTP_503_ERROR url ) ; else ( response . getStatusCode ) >= 300 throw new ApiExceptionType . , url ) ; } return getContent ( ) getBytes ) ; } catch ( ex ) throw ( ApiExceptionType url ex ) ; } }<CODESPLIT>Get content from URL in byte array
static boolean ( value ) for ( char value toCharArray ( ) { if ( ! Character ) { false ; } } return }<CODESPLIT>Returns a boolean indicating whether the given string value is numeric .
RequestMapping = GET , "/foo" ) Map String String > getFoo ( { final fooObj = new HashMap > ( ) ; fooObj . put ( ) ; return ; }<CODESPLIT>Controller to just support pinging .
protected fireArrayStartEvent ( JsonConfig jsonConfig { if . ) for ( listeners jsonConfig getJsonEventListeners ) . iterator ; . hasNext ( ) ; ) { JsonEventListener JsonEventListener listeners ; . ( ) ; } catch ( RuntimeException e ) { log warn e ) ; } } }<CODESPLIT>Fires a start of array event .
static extends Exception > ( SneakyRunnable runnable { return ( ) { @ RuntimeException > castedRunnable = ( SneakyRunnable < RuntimeException > ) runnable ; ( ) ; ; }<CODESPLIT>Sneaky throws a Runnable lambda .
public Domain update final BandwidthClient , final String id , final < String Object params ParseException , Exception ( != null id != null final String = . ; RestResponse response . ( domainsUri params ) ; final JSONObject jsonObject = toJSONObject ( client get ( , null ) ; return new ( client jsonObject ) ; }<CODESPLIT>Convenience method to return a Domain .
public static Stream > getResourceTypes ( final Event event ) { . . . . observation . Event ) { final . . jcr . api . observation . = ( org . jcr . . Event ) event Stream Builder < NodeType > types = . ( ) ; for ( final NodeType type getMixinNodeTypes ) . add ( types . ) ( map ( :: getName ) ; catch ( final RepositoryException e ) throw new ( e } return empty ( ) ; }<CODESPLIT>Get the RDF Types of the resource corresponding to this JCR Event
void processDefaultHeader ParserContext context ) { ( String : . ( ) ) if ( hasHeaderSeparator ( ; } processHeaderLine line , getDocumentModel ) ) } }<CODESPLIT>Process the header of the file .
Connection getConnection String , String , String password ) SQLException boolean alive = ( ) ; if createConnection ( , username ) ; } return }<CODESPLIT>Retrieves the connection object . If the connection doesnt exist or is dead it will attempt to create a new connection .
static renderPad ( final , final pad final newLine ) { renderNewLine builder , i = 0 ; < pad ; i ) { builder . append ( ; } return ; }<CODESPLIT>Render some leading spaces onto a line of html .
public < OvhLine eligibility_lines_active_POST ( city , String contactName , , ) IOException = "/xdsl/eligibility/lines/active" sb = qPath ; HashMap < String , Object > = < , ; , , city addBody o , , contactName ) addBody o , "street" , ) ; addBody ( o , "streetNumber" ) ; resp = exec ( qPath , "POST" . toString ( o ) return ( , t5 ; }<CODESPLIT>Get the active lines at given address
private evaluateExpressionStack ( final Deque String > operators final < > ) { ( ! isEmpty { values . push getBooleanResultAsString ( operators . ( ) , values . pop ( ) , . ) ( pop ( ) ) }<CODESPLIT>This method takes stacks of operators and values and evaluates possible expressions This is done by popping one operator and two values applying the operator to the values and pushing the result back onto the value stack
public int write [ ] buffer , int offset , int throws { result long requestExpireTime = _requestExpireTime ; requestExpireTime > && < CurrentTime . currentTime ( ) ) ( ) ; ClientDisconnectException ( L "{0}: request-timeout write exp={0}s" ( , CurrentTime . currentTime ( ) requestExpireTime ) ; } synchronized ( _writeLock ) { CurrentTime ( long expires = do ( buffer } result == . TIMEOUT_EXN && CurrentTime getCurrentTimeActual ( ) < expires ) } if isEnd ) ) ; } return result ; }<CODESPLIT>Writes to the socket .
public ( float r , g , float ) float [ = { , g , ; normalize ambient ) gl . glEnable ( . GL_LIGHTING ) ; gl . glEnable ( GL2 GL_LIGHT0 gl . . , , 0 ) }<CODESPLIT>Sets the RGB value of the ambientLight
setMultiChoiceCount ( { if ( null ( i ; i < fields . length multiChoiceCount . multiply ( fields [ i ] . setMultiChoiceCount ) ; return ; }<CODESPLIT>Set the multiChoiceCount for this tuple
void delete forceDelete APIException { HttpResponse response delete ( getUrl ( ) + "?force=" + forceDelete . throwIfNotOk ) ; }<CODESPLIT>Creates this directory vi the Algorithmia Data API
protected addNameToApplicationMap ( name ) String appName getApplicationName ( ) if ( == null ) return < String = applicationMap ( appName ) ; if ( list == null String newList String ; = applicationMap ( appName , newList ; if list == null ) list } . add ( name ) }<CODESPLIT>Adds the metric name to an application map . This map is not a complete list of metrics owned by an application produced metrics are managed in the MetricsExtension
public Envelope ( connection , TableLocation , String geometryField ) throws if ( geometryField . isEmpty ( List < String > geometryFields getGeometryFields connection location ) geometryFields . ( ) ) { throw "The table " location " contain field, then the extent + "cannot ) ; } = get 0 ; ResultSet rs = . createStatement ( ( ST_Extent(" . ) ext FROM location if rs next ( ) ) return ( ( Geometry rs . getObject 1 ) . ( ) ; } throw new SQLException ( "Unable the table it may empty" ) ; }<CODESPLIT>Merge the bounding box of all geometries inside the provided table .
private void doListGet final Message < JsonObject > ) final String name message . body ( ) . getString ( "name" ) null ) reply ( new ) "status" , ) . putString ( "message" name specified." ) return } Integer index message . body ( ) "index" ) ; if ( index == null { message . ( ( ) putString ( "status" . ( , "No ) ; ; } . ( new Object ) { public ( { data . ( formatKey ( name ) . get ( ) ; } new < < Object > > { AsyncResult < Object > { ( . ) ) { message reply ( new ) "status" "error" ) putString "message" , result . cause ( . getMessage ) ) } message . reply new JsonObject ( ) . , "ok" ) ( "result" , ( ) ; } } ;<CODESPLIT>Handles a list get .
public static PlotCanvas ( String id , double ] data ) Histogram data ; histogram . setID ( id double [ ] lowerBound = Math . min data ) ; double ] = { Math data ) , 0 } double ] [ = histogram . getHistogram ) ; for ( int i = freq length ++ ) { if i 1 ] upperBound ] { 1 = freq i [ } PlotCanvas canvas new ( lowerBound , upperBound ; canvas getAxis ( 0 . ( false canvas . histogram ) ; canvas ; }<CODESPLIT>Create a plot canvas with the histogram plot .
public static Pair List > , List < Tuple > > splitData List Tuple > trainingData , proportion ) if proportion 0 || proportion 1 ) { throw new ( 0.0 - ) ; } ( proportion 0.5 proportion 1 proportion ; } List < > ) < > largeList new < > ) int smallListSize ) Math . floor ( * trainingData size ) ) int ct 0 Set Integer = < ( ; ( < trainingData ( ) indices . ( ) ) { int index int ( Math . random ) ( trainingData . size ) 1 ) while ( indices ( index index = ( int ) Math . random ( ) * ( . - 1 ) ; } indices ( index ) ; . ( indices . ( . ( trainingData get ) . collect ( Collectors ) ) IntStream range ( , trainingData size ( ) ) filter x -> ! . x ) . ( largeList add ( trainingData . get ( i ) ) ; ImmutablePair smallList , largeList )<CODESPLIT>Shuffle the data and split by proportion
public static void getScreenShotABGR ( BufferedImage out ) { WritableRaster wr = getRaster ) ; DataBufferByte db DataBufferByte wr getDataBuffer ) ; byte ] cpuArray = db . ( ; . clear ) ; bgraBuf get ( ) . ( ; int width = wr getWidth . ) for ( y 0 < / 2 { for ( int = 0 x width ; ++ ) int = y + * ; outPtr ( height - * width x ) 4 ; byte b1 cpuArray + 0 ] ; byte g1 cpuArray inPtr + 1 ] byte = [ + 2 ] a1 = + 3 ] ; byte = cpuArray [ outPtr + 0 ] byte [ outPtr + ] ; byte = cpuArray [ outPtr + = ] ; [ outPtr + = ; cpuArray [ 1 ] b1 cpuArray outPtr + ] = ; cpuArray [ outPtr 3 ] = ; cpuArray [ ] = a2 ; cpuArray inPtr ] = b2 ; cpuArray [ inPtr + 2 g2 ; cpuArray [ inPtr = r2 ; }<CODESPLIT>Good format for java swing .
public Pair < int [ ] [ ] int ] documentToDataAndLabels ( IN > ) int docSize = document ) int [ ] [ ] [ data = new int [ docSize ] ] [ ] int ] new [ ; if flags reverse ( document ) ; for ( j = j ; j ++ ) < String > CRFLabel d = makeDatum , , featureFactory ) ; List List < String > features . asFeatures ) ; for ( int 0 , fSize = features size ( ) ; fSize ++ { Collection < > cliqueFeatures . k ) ; data j ] [ k ] = cliqueFeatures . size ) ; int m String feature : { index featureIndex indexOf feature ) ; ( >= ) [ ] [ m = ; m ++ ; else } if ( < [ ] . length [ ] f = ] ; System arraycopy [ j ] [ ] 0 , , , m ) data [ k ] = f } IN wi = document ( ) ; labels [ = . indexOf ( wi . get . class ) ) ; if ( . useReverse ) { reverse ( ) ; } return new Pair [ ] [ int [ ] , labels }<CODESPLIT>Convert a document List into arrays storing the data features and labels .
public static synchronized Class < ? > > locateAll ( final { ( == throw new "serviceName cannot ) } List < Class < ? > classes ArrayList Class > ( ( != null List Callable < < ? > > = factories . get serviceName ) ; l { for Callable < Class < ? > : l ) try { . add ( c call ( ) catch ( Exception ) } return classes ; }<CODESPLIT>Finds all providers for the given service .
String ByteBuf buffer ) throws { int length buffer bytesBefore BsonConstants STRING_TERMINATION ) if ( 0 new IOException "string termination found" ) ; String = buffer . toString ( buffer . readerIndex ( , StandardCharsets . length 1 ; return result }<CODESPLIT>default visibility for unit test
public addCase ( theCase ) if ( theCase == null new "Variant cannot ; JSType ( JSType ; ( cases == null ) cases = JSType ] else oldCases cases new JSType . + 1 ; System . ( , 0 , cases 0 , oldCases . length ; } . parent = this ; newCase . siblingPosition cases length ; cases newCase siblingPosition = newCase ; }<CODESPLIT>Add a case to the variant . Note that every variant must have at least one case .
public summarizeState ( { StringBuilder = new ) ; . "clipVol=" ) . append _clipVol ) ; append ( ) ; int ii = 0 ; for ( ) if 0 . ( ", " ) ; . ( soundType ) ; } return ( ) . toString ( ) }<CODESPLIT>Returns a string summarizing our volume settings and disabled sound types .
private < String String > ( Pattern keyPattern ) { String > = > ( for ( Object it = props . keySet ( ) iterator ; . ) = String ) next ) ; matcher = keyPattern matcher key ) ; if matcher . matches ( ) { = matcher group ( 2 ; String propertyValue props . getProperty ( ) ; map ( id propertyValue ; } return ; }<CODESPLIT>Returns the map where the key is the 2 group of the pattern and the value is the property value
long rawUncompress long long inputSize , long IOException { return impl . rawUncompress ( , inputSize ; }<CODESPLIT>Zero - copy decompress using memory addresses .
write byte [ ] int off int ) this . checkIncreaseArray ( ) ; off , this . buffer , this . pos , len . pos += ; }<CODESPLIT>Writes a byte array content into the stream
final ( ProjectGlobalHealthCheckName healthCheck healthCheckResource , < > ) { PatchHealthCheckHttpRequest request PatchHealthCheckHttpRequest . healthCheck == null ? : healthCheck . toString ) ) . setHealthCheckResource ( healthCheckResource ) . addAllFieldMask fieldMask build ) return ( ) ;<CODESPLIT>Updates a HealthCheck resource in the specified project using the data included in the request . This method supports PATCH semantics and uses the JSON merge patch format and processing rules .
void initializeNoxItemMargin TypedArray attributes noxItemMarginDefaultValue = ( . R . dimen default_nox_item_margin ) getDimension ( R . styleable . nox_item_margin , noxItemMarginDefaultValue ) ; setNoxItemMargin ( noxItemMargin ; }<CODESPLIT>Configures the nox item default margin used in NoxConfig Shape and NoxItemCatalog to draw nox item instances during the onDraw execution .
OperationResult failed long long eventIndex , Throwable return new OperationResult ( index , eventIndex error , ; }<CODESPLIT>Returns a failed operation result .
public InsnList ifIntegersEqual InsnList lhs InsnList rhs , InsnList action Validate . ( ) notNull ( ; Validate ( ) ; InsnList ret = new InsnList ) ; notEqualLabelNode new ret lhs ; ret ( ) ; . add ( new JumpInsnNode Opcodes . IF_ICMPNE , ) ) ; ret . action ) . add notEqualLabelNode ) return ret }<CODESPLIT>Compares two integers and performs some action if the integers are equal .
public FormatOptions of int flags int width , int precision if checkFlagConsistency flags UNSET ) throw new "invalid 0x" + Integer . toHexString ( flags ) if ( width && != UNSET throw IllegalArgumentException ( width: " + ) } if ( ( < 0 || precision MAX_ALLOWED_PRECISION ) precision != ) { throw new IllegalArgumentException ( "invalid precision: + precision ) return new , precision ) ; }<CODESPLIT>Creates a options instance with the given values .
void tripleClick Coordinates p = getPoint , "triple click" ) ; . mouseAction ( p . y , 3 , . LEFT ; }<CODESPLIT>Triple click is an Opera specific way of selecting a sentence .
void TypedArray attributes ) placeholder = . ( . styleable . nox_item_placeholder ; if placeholder = getContext ( . getResources ( ) getDrawable ( R . drawable . ic_nox ) setPlaceholder ( placeholder ; }<CODESPLIT>Configures the placeholder used if there is no another placeholder configured in the NoxItem instances during the onDraw execution .
public ( DependencyExplorerOutput output , invalidKeys ) { . prunedGraph new . GraphPruner output . ) for ( < ? key : invalidKeys . ( ) ) { prunedGraph . remove ( key ; removeBinding ( ( . ( ) ) }<CODESPLIT>Prune all of the invalid optional keys from the graph . After this method all of the keys remaining in the graph are resolvable .
PersistentResourceXMLDescription getSimpleMapperParser ) if ( . equals ( Version VERSION_1_0 ) { return ; } else if Version . ) ) simpleMapperParser_1_1 ; } return }<CODESPLIT>1 . 0 version of parser is different at simple mapperParser
public getAbsoluteTemplateURI String , boolean includeExtension { FastStringWriter buf new ( ) ; . substring ( 1 ( ) ; ( . ( SLASH > 1 ) buf . append ( SLASH int i = tmp lastIndexOf SLASH buf ( tmp . substring 0 , ) ; append ) buf append tmp . substring i + 1 length ) ) ; buf ( SLASH_UNDR ; . append ( , templateName ( ) ; } if ( includeExtension ) { . append ( EXTENSION ) ; } String uri = buf . toString ( ) buf . ) return uri ; }<CODESPLIT>Used to resolve template names that are not relative to a controller .
protected void scanResourcePaths startPath ) IOException , SAXException { Set > dirList context getResourcePaths ; if != null for String path : dirList ) { if path ( ) if startsWith "/WEB-INF/lib/" ) } if ( . endsWith ( ) { scanResourcePaths ( path ; } else if path . "/WEB-INF/tags/" ) { if path . endsWith ( ) ) { parseTld ( path } } else if . ( ) { path ) ; } }<CODESPLIT>Scan web application resources for TLDs recursively .
boolean duringDrag SVGPoint , SVGPoint , Event evt , inside { if ( != null ) { startPoint , , evt ) ; } return }<CODESPLIT>Method called during drags .
private PGPKeyRingGenerator createKeyRingGenerator ( String userId password , keySize { . trace ( String, int)" ; . trace ( "User {}, {}, Size: , userId , password null ? set" : "********" , keySize ; PGPKeyRingGenerator generator null try ( RSA key pair ) ( ) ; generator1 . ( new ( BigInteger ( , getSecureRandom ( ) 12 ) ) LOGGER . "Generating Signing ) BcPGPKeyPair signingKeyPair = new BcPGPKeyPair PGPPublicKey . RSA_SIGN generator1 , Date ( ) ; LOGGER debug ( "Generating Encyption ; BcPGPKeyPair encryptionKeyPair BcPGPKeyPair . , generator1 . ( ) ) ; LOGGER . ( "Generating Signature Key Properties" ) ; PGPSignatureSubpacketGenerator = new PGPSignatureSubpacketGenerator ) signatureSubpacketGenerator . setKeyFlags ( SIGN_DATA | KeyFlags ) signatureSubpacketGenerator setPreferredSymmetricAlgorithms false getPreferredEncryptionAlgorithms ) ; . setPreferredHashAlgorithms ( ) ; signatureSubpacketGenerator . setPreferredCompressionAlgorithms false getPreferredCompressionAlgorithms ( ) ) LOGGER . debug Encyption Properties" encryptionSubpacketGenerator ( . setKeyFlags ( false , KeyFlags | KeyFlags . ENCRYPT_STORAGE ; LOGGER ( "Creating PGP Key Ring ) = new PGPKeyRingGenerator PGPPublicKey RSA_SIGN , , , new ( . get ( . SHA1 ) signatureSubpacketGenerator generate ( ) , , new ( PGPPublicKey , HashAlgorithmTags . SHA256 ) , new ( ( ) . password ) ) ) ; . addSubKey ( encryptionKeyPair ) null ) ; } catch PGPException e ) { LOGGER . e . getMessage ) ; generator } return }<CODESPLIT>creates and initializes a PGP Key Ring Generator
public getDateFromString ( final String final String ) try SimpleDateFormat df = buildDateFormat pattern ) dateString ) ; } ( ParseException e ) throw new DateException ( String . format ( "Could parse %s pattern ) ) ; }<CODESPLIT>Get data from data string using the given pattern and the default date format symbols for the default locale .
public remove ( key ) synchronized ( ) { if ! _cacheL1 containsKey ( key ) _cacheL2 . key ) return null ; } Object retval ; Map newMap ) newMap ( ) retval = remove ( key ) } _cacheL1 newMap ; _cacheL2 . clear _missCount 0 ; return retval ; }<CODESPLIT>This operation is very expensive . A full copy of the Map is created
private String getItemType ( Cmdb cmdb String itemType null String = cmdb ( ) String = cmdb . getConfigurationItemType ) String = hpsmSettings . getAppSubType ( ) String hpsmSettingsType hpsmSettings . getAppType ( boolean typeCheck = ; subTypeCheck ( "" . equals hpsmSettingsType ; } if ( ! . equals hpsmSettingsSubType ) subTypeCheck ; } if ( subTypeCheck ) { subType && subType ( . getAppSubType ( ) ) { itemType = ; subType null && subType equals ( . getCompSubType ( ) ) itemType = COMPONENT_TYPE else subType null && subType equals ( ) ) { itemType ENVIRONMENT_TYPE ; } } else if ( typeCheck ! subTypeCheck ) if type != null && hpsmSettings . getAppType ) { = APP_TYPE ; else ( != && type . ( ) ) ) { = ; } else if type != null . ( ( { itemType ; } } { if null && equals ( getAppSubType ( ) ) && null && type . ( hpsmSettings getAppType ( ) ) { itemType APP_TYPE } if subType != null subType equals ( hpsmSettings . ( ) && type != null && . equals ( hpsmSettings . ( ) ) COMPONENT_TYPE ; if ( subType && . equals ( getEnvSubType ( ) type != null && type . getEnvType ( ) { itemType = } return }<CODESPLIT>Returns the type of the configuration item .
public void readXML final List < String > , Map < String String _attributes , final String _text throws SAXException _tags . ( == 1 ) String . 0 ) ; if ( equals ( ) { . = _text } else if ( value ) ) { this . fileApplication = ; } else ( equals ( ) ) { . ( ( ) else ( "definition" equals ( _tags . 0 ) { final = . . get this . definitions . ) - 1 ; curDef readXML ( _tags . subList , _tags size ( ) _attributes , ; throw new SAXException ( "Unknown XML " + " for: " . ) ; }<CODESPLIT>Read event for given tags path with attributes and text .
public getSQLUpdate boolean ) { String = this . makeTableNames ( keyArea = this . getBaseRecord . getKeyArea ( 0 ) boolean = ? true isNull ( . TEMP_KEY_AREA , true ) = this . getBaseRecord ( . ( ) sFilter = keyArea . ( "=" . TEMP_KEY_AREA , , bUseCurrentKeyValues null true true ) ; . > ) = " . getBaseRecord ( ) . ( . SQL_UPDATE_TYPE , bUseCurrentValues ; if ( strSetValues length ( ) == 0 ) null ; strRecordset = "UPDATE + strRecordset + " + + sFilter return strRecordset ; }<CODESPLIT>Get the SQL Update string . UPDATE table SET field1 = value1 field2 = value2 WHERE key = value
public static synchronized ( Object ... objects ) { for ( objects { ( < ? { verifyClass Class ? > ) mock ) ; } { = EasyMockMethodInvocationControl . ( if invocationControl != { . verify ) ; } { ( isNiceReplayAndVerifyMode ( ) ! isEasyMocked ( ) { try org . easymock . EasyMock . mock ) ; catch ( e ) { throw RuntimeException ( mock not a mock , ; } } } }<CODESPLIT>Switches the mocks or classes to verify mode . Note that you must use this method when using PowerMock!
public mapTileRequestFailed ( MapTileRequestState pState { if ( mTileNotFoundImage != { putTileIntoCache pState getMapTile mTileNotFoundImage , NOT_FOUND ) ( Handler handler : mTileRequestCompleteHandlers ) { if handler ) handler ) } { for Handler : mTileRequestCompleteHandlers { if ( != ) { handler . ( MAPTILE_FAIL_ID ) ; } } Configuration . getInstance ) . isDebugTileProviders ) ) Log . d ( IMapView LOGTAG , "MapTileProviderBase.mapTileRequestFailed(): MapTileIndex ( getMapTile ) ) ; } }<CODESPLIT>Called by implementation class methods indicating that they have failed to retrieve the requested map tile . a MAPTILE_FAIL_ID message is sent .
static validateFactoryAndClass ( fd , factoryId , int classId , ) { ( != ( ) throw new "Invalid Expected: " + fd . getFactoryId ( + ", " factoryId " ; if ( fd getClassId ( ) { throw IllegalArgumentException ( classId! Expected: " fd . getClassId ( ) + " + " in " + ) ; }<CODESPLIT>Validates if the given factoryId and classId match the ones from the fieldDefinition
public ( InputComponent < ? > , addColon { String label = . getLabel == null ) { = input . getName ) ; } if ( addColon && ! label endsWith COLON { += COLON ; ; }<CODESPLIT>Returns the label for this component
final ( final View final int ) View = convertView ; if ! ( view = new PlaceholderView getContext ( ) ) ; } view . ) ; return ; }<CODESPLIT>Inflates an invisible placeholder view with a specific height .
void ) throws Exception . info c "stopService" "Stopping LdapServer" ) ; . server . info ( c "stopService" , "Stopping DirectoryService" ; service . shutdown ( ) ; Log . "stopService" , "Ldap ; }<CODESPLIT>Stop the LdapServer and the Directory service . Use for JUnit teardown . If the service is not stopped then future instances with the same name cannot clean up the file directory .
public setCacheMinutes ( iMinutes ) if ( iMinutes == - iMinutes ; = ( iMinutes ) { timerCache null ) { timerCache . cancel ( ; null this ; { ( timerCache ) timerCache . ( ) ; this startCache ( ) ; = new DBTimerTask ) ; = new java . util . Timer ( ; timerCache . timerTask , * ) ; } }<CODESPLIT>This will set this database to start caching records until they haven t been used for iMinutes minutes .
protected void propagateOnEnter GVRPickedObject hit ) { GVRSceneObject = . getHitObject ( ; GVREventManager eventManager = getGVRContext ( ) . getEventManager ( . contains SEND_TOUCH_EVENTS ) ) ( ( EventOptions SEND_TO_LISTENERS ) ) { eventManager ( this ITouchEvents class "onEnter" hitObject , ) ; } if ( ( EventOptions . SEND_TO_HIT_OBJECT ) ) { eventManager sendEvent ( hitObject ITouchEvents , "onEnter" hitObject , hit if mEventOptions contains ( ) && mScene != ) { eventManager ( ITouchEvents . class , , ) ; } if ( mEventOptions contains ( EventOptions . ) ) { mEventOptions contains EventOptions . SEND_TO_LISTENERS ) eventManager , IPickEvents class , , , ) if ( . contains ( EventOptions . ) { sendEvent , . , "onEnter" , hitObject hit ) ; . ( EventOptions . ) && mScene != null ) ) ( mScene , IPickEvents class , hit ) ; } }<CODESPLIT>Propagate onEnter events to listeners
java . . . GetSendQuotaResult > getSendQuotaAsync . amazonaws . handlers . < GetSendQuotaRequest , GetSendQuotaResult > getSendQuotaAsync ( GetSendQuotaRequest ( , asyncHandler }<CODESPLIT>Simplified method form for invoking the GetSendQuota operation with an AsyncHandler .
short ) throws OtpErlangRangeException long l longValue ) final short i = short ) l ) { throw OtpErlangRangeException ( "Value too large for short: " ; } return ; }<CODESPLIT>Get this number as a short .
private MjdbcSQLException translateSQLStatePrefix String reason , String SQLState int , SQLException cause { MjdbcSQLException result = null ; String = getSqlState sqlStatePrefix = ( sqlState != sqlState ) >= ) { sqlStatePrefix = sqlState ( 0 2 ( . SQL_STATE_PREFIX_BAD_SQL_GRAMMAR contains ( sqlStatePrefix ) == result = new BadSqlGrammarException ( reason , SQLState vendorCode ) ; else SpringExceptionHandlerConstants . contains ( true { = new , vendorCode ) } if ( SQL_STATE_PREFIX_DATA_ACCESS_RESOURCE_FAILURE sqlStatePrefix ) ) result new DataAccessResourceFailureException reason , SQLState , ) ; } else SpringExceptionHandlerConstants . SQL_STATE_PREFIX_TRANSIENT_DATA_ACCESS_RESOURCE_EXCEPTION . contains ( == true ) { result new reason SQLState , ) ; else . . contains ( ) == true ) { = new ConcurrencyFailureException , , ) } return result ;<CODESPLIT>Checks SQL state and tries to convert it into Spring SQL Exception . This implementation is vendor free .
public matches ( name ) if ( == null ) return equals ( "" ) if ( null ) all . equals ( name ) ; } if ) return middle if start != ! . startsWith ) ) { return false ; } return null || . endsWith ( end ) }<CODESPLIT>Checks if Simon name matches this pattern .
static nslimitselector ( nitro_service service selectorname Exception nslimitselector new nslimitselector ( ) ; obj . nslimitselector response = ( ) obj . get_resource ) ; return ; }<CODESPLIT>Use this API to fetch nslimitselector resource of given name .
public int ( [ ] eqn double [ ] ) double a = ; double b = ; double = [ ] int rc 0 if ( == 0f ) { if == 0f ) { - ; [ ] = - c b ; { double b - * * ; if ( < 0f ) ; d Math . ) [ rc ] ( - b a * ; ( != 0f ) { res [ rc ] = ( - b - d ) / ( a * 2f ) ; } return res rc ) ; }<CODESPLIT>Solves quadratic equation
Set > getAllTerms ( final Set Term ret new HashSet < Term ( ) : statementGroups ) { ( final Statement stmt sg . getAllStatements ( ) ) { ret . ( getAllTerms ) ; } ret ;<CODESPLIT>Returns the set of all terms contained within the document .
public void cancelCopy ( CopyOperationImpl op SQLException { ( hasLock op ) throw new ( . tr ( "Tried inactive operation" ) , PSQLState . OBJECT_NOT_IN_STATE ; } SQLException error = null ; = 0 ; { ( CopyIn { this ) LOGGER , "FE => CopyFail" ) final byte ] msg . "Copy cancel requested" ) ( 'f' ) pgStream sendInteger4 ( 5 . ) ; pgStream . send msg ) ; . sendChar ) ; . flush ( ) ; try { processCopyResults ( op true ) ; } SQLException { ++ ; if error != ) { = se ; SQLException ; while ( ( next = ( ) ) null { e = setNextException ( error } = ; } ( hasLock ( ) ; } ( { sendQueryCancel ( ; } catch ( IOException ) throw PSQLException ( . ( connection copy operation" . CONNECTION_FAILURE , ioe { synchronized ( ) ( hasLock ( op ) unlock ( ) } } } ( op { if ( errors 1 { throw new PSQLException . ( "Missing expected error copy request" ) , PSQLState . COMMUNICATION_ERROR } else if ( errors 1 ) new PSQLException ( GT ( "Got error responses to single copy cancel valueOf ( errors , PSQLState . ) ; }<CODESPLIT>Finishes a copy operation and unlocks connection discarding any exchanged data .
. google api . adwords . axis o . AttributeType [ ] getRequestedAttributeTypes ) { ; }<CODESPLIT>Gets the requestedAttributeTypes value for this TargetingIdeaSelector .
public Annotation v ) ( OntRelationMention_Type featOkTst ( OntRelationMention_Type ) jcasType ) casFeat_range == throwFeatMissing ( "range" , ) ; jcasType . . ll_setRefValue ( addr , ( ( OntRelationMention_Type ) ) casFeatCode_range . . ll_getFSRef ( ; }<CODESPLIT>setter for range - sets
List . ibm . security . . . > getRelatedRolePlayer ( ) if ( = new ArrayList < . ibm . wsspi security . wim . model . RolePlayer > return this . ; }<CODESPLIT>Gets the value of the relatedRolePlayer property .
JCExpression getUnderlyingBinding unifier return ( unifier == null : unifier . getBinding ( new UFreeIdent . ( identifier ; }<CODESPLIT>Gets the binding of the underlying identifier in the unifier .
void clearCache ) { ( CommercePriceEntryImpl . ; finderCache . clearCache ( FINDER_CLASS_NAME_ENTITY ) ; finderCache . FINDER_CLASS_NAME_LIST_WITH_PAGINATION finderCache ( FINDER_CLASS_NAME_LIST_WITHOUT_PAGINATION ; }<CODESPLIT>Clears the cache for all commerce price entries .
int int initial ) ( initial MINIMUM_CAPACITY { MINIMUM_CAPACITY ; } if initial > } int capacity = ; while ( capacity < initial ) { ; } return ; }<CODESPLIT>Compute capacity given initial capacity .
V get K k , TimeUnit unit , TimeoutException { await ( k , timeout , return get ( k ; }<CODESPLIT>Retrieve the value associated with the given key blocking as long as necessary up to the specified maximum .
public static void ( final Path distributedClassPath , Path , final Job ) throws IOException { String classpathProperty = . getProperty ( classpathProperty { classpathProperty = getProperty ; [ ] jarFiles = classpathProperty ( File pathSeparator Configuration = job getConfiguration ( ) ; final distributedClassPath . getFileSystem ( conf ) ; if fs instanceof LocalFileSystem { } for jarFilePath : final jarFile new File ; jarFile . ( . endsWith ) { RetryUtils ( ) { isSnapshot ( jarFile ) { addSnapshotJarToClassPath ( jarFile intermediateClassPath , fs , job } { addJarToClassPath ( jarFile distributedClassPath , , job ) } return , shouldRetryPredicate ( , NUM_RETRIES ) ; } catch ( Exception e throw new RuntimeException ) } } }<CODESPLIT>Uploads jar files to hdfs and configures the classpath . Snapshot jar files are uploaded to intermediateClasspath and not shared across multiple jobs . Non - Snapshot jar files are uploaded to a distributedClasspath and shared across multiple jobs .
public void eval String javascript ) throws WidgetException WebElement element = WebDriver = ( . getWrappedDriver ( ) ; { ( ( ) ) . executeScript ( javascript , element } catch ( Exception ) { long . currentTimeMillis ( ) ; success = false ; while ( success System . currentTimeMillis ( ) < time ) ( ) . executeScript ( true Exception { . sleep 500 ) ; } InterruptedException e1 ) { e e2 ; } } ( ! ) { e ) ; } }<CODESPLIT>Executes JavaScript code on the current element in the current frame or window .
long addWrapField long instant ) { return , FieldUtils . getWrappedValue ( get ( instant ) 0 - 1 ) ; }<CODESPLIT>Add the specified amount to the specified time instant wrapping around within the remainder range if necessary . The amount added may be negative .
protected SendRequest makeUnsignedChannelContract Coin valueToMe Transaction tx = new Transaction wallet . ( ) getTotalValue . subtract ) equals ( Coin . ZERO ) ) tx . addOutput ( ( . ( wallet . , getClientKey ) ) ) } tx . addInput contract getOutput 0 ) ) ; . forTx ( tx ) ; }<CODESPLIT>Create a payment transaction with valueToMe going back to us
String getUserNameFromToken String { if ( null { return null ; } return authToken . ( TOKEN_SEPARATOR ) ; }<CODESPLIT>Extracts the user name from token .
protected Class < > resolveProxyClass ( String [ interfaceNames throws ClassNotFoundException { proxyClassLoader classLoader ; Class ? > [ ] [ interfaceNames . ] < ? = int = 0 ; i < length ; ) { < > loadClass ( interfaceNames [ ] ) if ( ! . isPublic ( intf getModifiers ( ) ) ClassLoader classLoader = ( intf ) nonPublicInterface null { if ) throw new ( nonPublicInterface + " + " both declared different class loaders" { nonPublicInterface = ; proxyClassLoader = classLoader } interfaces [ i ] = intf try { . getProxyClass , interfaces ) ; } catch IllegalArgumentException ex { throw new , ) ;<CODESPLIT>Delegates class loading to the specified class loader .
static ] rowSums ( ] [ data { [ ] x = double [ ( int i = ; i < x length ; i ++ ) { x [ i = data i ) } x ;<CODESPLIT>Returns the row sums for a matrix .
protected void rehash int newCapacity ) { int = . length ; oldTable ] = table ; int oldValues [ ] [ ] state newTable [ new ] newValues [ ] = new newCapacity ] newState [ = byte [ ] ; this . = chooseLowWaterMark newCapacity , this minLoadFactor ) ; this highWaterMark = chooseHighWaterMark newCapacity . maxLoadFactor ; this . ; . = newValues = ; this freeEntries = newCapacity - distinct ( int ; -- 0 ; { if oldState i ] == { long = oldTable i ] int index = element ) [ index element ; newValues [ index ] oldValues [ ] ; newState = ; } }<CODESPLIT>Rehashes the contents of the receiver into a new table with a smaller or larger capacity . This method is called automatically when the number of keys in the receiver exceeds the high water mark or falls below the low water mark .
public ( HpackHeaderField header ) int headerSize . ( ; ( headerSize capacity ( return ; ( - size < headerSize { remove ( ) } hpackHeaderFields [ head ++ += ( ) ; if ( head == hpackHeaderFields length { head = 0 ; }<CODESPLIT>Add the header field to the dynamic table . Entries are evicted from the dynamic table until the size of the table and the new header field is less than or equal to the table s capacity . If the size of the new entry is larger than the table s capacity the dynamic table will be cleared .
private void fired initial ) { for ( final LauncherListener listener . ( ; for ( final launchableConfig ) { Media = Medias . create ( launchableConfig . ) ) ; featurable = factory create media ) ; try Launchable = featurable getFeature ( Launchable class ; if ( launchableConfig . getDelay ( ) { add DelayedLaunch ( launchableConfig , } { launch initial , , launchable } } catch ( LionEngineException exception ) { featurable . getFeature Identifiable ) . throw exception ; } } }<CODESPLIT>Called when fire is performed .
static void ( InvocationManager omgr ) { invmgr ; _omgr = omgr ; invmgr . registerProvider ( ( TimeBaseMarshaller , GLOBAL_GROUP ; }<CODESPLIT>Registers the time provider with the appropriate managers . Called by the presents server at startup .
createLogFile ( location start , long end new UfsJournalFile ( location , start end , ; }<CODESPLIT>Creates a journal log file .
Object ) throws java . ObjectStreamException try return CertificateRep ( type , ( ) e ) { throw java . io . ( "java.security.cert.Certificate: " + type + ": " ( ) ) } }<CODESPLIT>Replace the Certificate to be serialized .
static Throwable final ] arguments ) { length == 0 ? null : extractThrowable ( arguments length - ) ; }<CODESPLIT>Returns a throwable if the last argument is one .
public List < < IBond IBond > makeBondMapsOfAtomMaps ( IAtomContainer , IAtomContainer , List < Map , IAtom mappings ) < Map < IBond , IBond > > bondMaps Map IBond ( ( < IAtom > mapping : mappings { bondMaps add ( makeBondMapOfAtomMap ( ac1 mapping ) ; } return bondMaps }<CODESPLIT>Returns bond maps between source and target molecules based on the atoms
LongConstant long value ) entry = ( ) if ( entry != ) return ( this , _entries size ( ) , ) ; addConstant ( entry ; ) ; return ; }<CODESPLIT>Adds a long constant .
getOrOpen ( name , File file ) { return , , true ; }<CODESPLIT>Get the cached GeoPackage or open and cache the GeoPackage file
static ( String clz_name int idx clz_name lastIndexOf 'V' ) ; if idx == ; try { return . valueOf ( clz_name substring ( idx + 1 ) ) ; ex { return ; } }<CODESPLIT>Extract the version number from the schema class name . Returns - 1 if there s no version number at the end of the classname .
private ( Canvas canvas , paint , Path , shapeAppearanceModel RectF ) { ( shapeAppearanceModel ( { float cornerSize = shapeAppearanceModel getTopRightCorner ( ) . ( ) ; canvas . drawRoundRect ( bounds , , paint ; drawPath paint ) ; }<CODESPLIT>Draw the path or try to draw a round rect if possible .
public AnalyzerJob getAnalyzerJob final String descriptorName , final analyzerName final String analyzerInputName { List < AnalyzerJob > candidates = new ArrayList < candidates = ( candidates , { = o getDescriptor ( ) . getDisplayName ; return . ( ) } ) if ( analyzerName != null = CollectionUtils2 . refineCandidates ( candidates , o { final String = getName ( return analyzerName actualAnalyzerName ; ) ; analyzerInputName != ) { = . refineCandidates { final InputColumn > = ( o ; if ( inputColumn null { return ; } return equals inputColumn getName ( ) ) ; candidates . isEmpty ( ) { . error ( AnalyzerJob to choose from" ) return null ; } else if candidates ( { logger ( "Multiple ({}) AnalyzerJob choose from, picking first" } return candidates iterator ) next ( ;<CODESPLIT>Gets the best candidate analyzer job based on search criteria offered in parameters .
removeExecutedTradeCallback ( BitfinexExecutedTradeSymbol final BiConsumer < BitfinexExecutedTradeSymbol callback ) throws BitfinexClientException { return tradesCallbacks . ( tradeSymbol ; }<CODESPLIT>Remove a executed trade callback
HealthDto doPrimaryHealthCheck ) { List < > primaryHealthDependencies healthDependencies values ) . stream ( ) . filter ( collect ( Collectors ( ) ) ( primaryHealthDependencies }<CODESPLIT>Performs the Primary Health Check .
static appfwxmlerrorpage ( service ) Exception { appfwxmlerrorpage obj new ( ) ; [ ] response = obj . ( service return response [ 0 }<CODESPLIT>Use this API to fetch all the appfwxmlerrorpage resources that are configured on netscaler .
private ( final AbstractHttpClient client { this . . ( HttpResponseInterceptor ) { void process HttpResponse final HttpContext throws , IOException { Header = response . getFirstHeader ( "Location" ) ; if ( header . , ( ) ) } } ) }<CODESPLIT>This method is used to capture Location headers after HttpClient redirect handling .
private quickSelect ( < P points , int splitAxis , ) { numPoints points ) ; tmp . numPoints { tmp = new double [ numPoints ; indexes new [ for = ; i ; ++ ) tmp [ i = distance ( get ( i ) , splitAxis ) } QuickSelect . tmp , , numPoints indexes ) ; }<CODESPLIT>Uses quick - select to find the median value
public writeHtml ( pOut , pHtml ) throws IOException { = ( , ) ; parser . ) { String token = parser . nextToken ) ( . ) print "&lt;" ) else ( token equals ( ">" ) pOut . print ( ) ; } else if token . ( "&" ) ) { pOut . print "&amp;" ; { pOut print token ; } } }<CODESPLIT>writeHtml ensures that the text being outputted appears as it was entered . This prevents users from hacking the system by entering html or jsp code into an entry form where that value will be displayed later in the site .
getNodeName ( node String result = node ) ; return result == null ? node getNodeName ( ; }<CODESPLIT>Returns the node name . First tries local name . If this is null returns instead the full node name .
void setExpiryDate @ IntRange 1 , = ) , @ IntRange from = int year ) { mExpiryDateEditText . setText ( DateUtils . createDateStringFromIntegerInput , year ) ; }<CODESPLIT>Set the expiration date . Method invokes completion listener and changes focus to the CVC field if a valid date is entered .
protected ( DdlWrite write ) scriptInfo . "-- dependencies\n" write applyDropDependencies ( . getBuffer + "-- apply write apply ( ) . ( ) + write . applyForeignKeys ( ) . getBuffer applyHistoryView getBuffer ( ) write . ) . getBuffer ( ) ) }<CODESPLIT>Write the Apply DDL buffers to the writer .
static final classEquals ( Class Class clz2 { ( == null || clz2 null ) ; } return clz1 clz2 || clz1 . ( ) . equals getName ( ) ; }<CODESPLIT>Compares if two classes are equal or their class names are equal .
void addSharedFunction ISource source fileName = source ( ( FileSource ) source ) . getFileName ( ; source , fileName ; }<CODESPLIT>Add shared function by ISource
setCommercePriceListService ( . commerce . price . . CommercePriceListService commercePriceListService ) { . commercePriceListService = ; }<CODESPLIT>Sets the commerce price list remote service .
HtmlTree MAIN ) htmltree = new HtmlTree MAIN ) ; htmltree . setRole ( Role MAIN ) ; }<CODESPLIT>Generates a MAIN tag with role attribute .
static cachepolicylabel_stats ( nitro_service service labelname Exception cachepolicylabel_stats new cachepolicylabel_stats ( ) ; obj . cachepolicylabel_stats response = ( ) obj . stat_resource ) ; return ; }<CODESPLIT>Use this API to fetch statistics of cachepolicylabel_stats resource of given name .
protected saveBroker ( mapfile , broker ) { if broker isModified ( ) ) return } BufferedWriter bout BufferedWriter ( new FileWriter ( mapfile ) ) ; bout ; ) ( ioe ) { throw new RuntimeException ( "Unable to store component ID mapfile "]" , ioe ) ; }<CODESPLIT>Stores a persistent representation of the supplied hashmap ID broker in the specified file .
void final Collection < values ) DataAccessException jdbcTemplate execute ( new ConnectionCallback Object > ( Connection connection ) SQLException , DataAccessException { . update ( connection , ) ; } } ; }<CODESPLIT>update the objects .
public fromExternal ( final IntSupplier , final IntConsumer ) return MutableInt ) { int getAsInt { . getAsInt ( ) ; public Integer get ( { return getAsInt ( ) ; } public MutableInt ( value { ) ; } } }<CODESPLIT>Construct a MutableInt that gets and sets an external value using the provided Supplier and Consumer
void Config config ) . debug ) this . configWriteLock . ( ) = config ; processAppPackages ( config ) ; } finally { this unlock ( ) } }<CODESPLIT>Replace the configuration of this instance directly .
void String type ) ( PropertyKey Host name ) , IpUtils . ( ) Type . name ( , type ) ; ( PropertyKey . Status . name ( ) . name ( ; }<CODESPLIT>Add properties to properties map on transaction start
List < . Sequence ) { if == null ) { sequence = new ArrayList < SequenceListType > ; this . ; }<CODESPLIT>Gets the value of the sequence property .
MapBuilder String fieldName , , Supplier Number supplier { if ( include { Number ) ; if ( != null ) { . put ( getFieldName ( fieldName ) } } return ; }<CODESPLIT>Adds the number value to the provided map under the provided field name if it should be included . The supplier is only invoked if the field is to be included .
public disconnectCardOneConsumer ) if ( TraceComponent isAnyTracingEnabled ( ) tc ( ) ( tc , "disconnectCardOneConsumer" ] clonedConsumerPoints = null synchronized consumerPoints { clonedConsumerPoints consumerPoints toArray ( ; } SILimitExceededException e = ( nls . getFormattedMessage "CONSUMERCARDINALITY_LIMIT_REACHED_CWSIP0472" new ] ( ) , getLocalisationUuid ) . ) } ) FFDCFilter processException e "com.ibm.ws.sib.processor.impl.RemoteConsumerDispatcher.disconnectCardOneConsumer" , "1:945:1.97.2.21" this ) ; ( , ) ; = ; i . length ; i ) ck = ( ) [ i ; ck . ( e ; ( TraceComponent . isAnyTracingEnabled ( ) && tc . isEntryEnabled ( ) SibTr . tc "disconnectCardOneConsumer" ) ; }<CODESPLIT>The disconnectCardOneConsumer method is invoked by the Anycast Input Handler to notify it that the current cardinality - one consumer must be disconnected . This can happen when this RME becomes unreachable and the DME allows a consumer in a separate RME to connect . As soon as this RME becomes reachable again the DME sends ControlCardinalityInfo to trigger this consumer s disconnection .
boolean isAdministrator AuthContext ctx ctx . ( != ctx . getUsername ) . . getPassword ( ) != null && ctx . getPassword ( equals ( adminPass ; }<CODESPLIT>Check if the given credentials allow administrative access
protected void init ) { ( settings autostart ) ) { runner = settings . getRunner ( ) ; logger . config " runner . . getSimpleName ( ; settings . ( OperaDefaults . SERVER_DEFAULT_PORT_IDENTIFIER ) ; createScopeServices ( ; ( != null ) { . startOpera ( ; init ( ) ; debugger = services . ( ) ; this ) = services getWindowManager ) ; exec = services . ) ; core services . ( ; cookieManager ) ; OperaMouse this ; keyboard new OperaKeyboard ( this ; . getConsoleLogger ) . onConsoleMessage ConsoleMessageConverter logs ) ) ; . utils ( ) ) ; ! . ) . contains ( "Mini" ) ) { new OperaScopePreferences . getPrefs ( ) ; ( ) set ( Unrequested Popups" , ) . ) is ( MOBILE ) { preferences ) . set ( "User Prefs" Form Element" true ) } proxy = new OperaProxy ) ; proxy parse getProxy ( ) }<CODESPLIT>Initialize required Scope services .
public static String String string ) { byte [ ] hash MessageDigest getInstance "MD5" . digest ( . getBytes "UTF-8" ) ; catch ( NoSuchAlgorithmException e ) throw ( MD5 supported?" , e catch ( UnsupportedEncodingException e throw RuntimeException ( UTF-8 should be , ) ; } StringBuilder = new StringBuilder . length ) ( byte b hash ) int ( & ; < 0x10 hex ( '0' ) ; hex . append Integer toHexString ( ) ) hex . toString ( ; }<CODESPLIT>Calculate the MD5 of a given String
static ( File dir for ( i 0 dir != null && < 20 rawDir = findResRawDir ( ) ; if ( != null ) { return rawDir ; } getParentFile ) ; null ; }<CODESPLIT>Look for the resource - directory in the current directory or the directories above . Then look for the raw - directory underneath the resource - directory .
Object resolveVariable String pName { ELContext ctx getELContext ( ) ; return ctx . getELResolver ( ( null , pName ; }<CODESPLIT>LIDB4147 - 9 Begin - modified for JSP 2 . 1
protected DependantValue createPrimaryKeyValue InFlightMetadataCollector , PersistentProperty property Collection collection , > ) KeyValue keyValue ; DependantValue key ; = collection . getReferencedPropertyName ( ; if ( propertyRef == null = collection getOwner ) . getIdentifier } else { keyValue KeyValue collection . ) . ( ) . getValue ( ) ; } isDebugEnabled ) . debug ( "[GrailsDomainBinder] value [" + . ) getName + ) DependantValue ( metadataBuildingContext , getCollectionTable ) , ) ; key . null ) ; key . ( true ; key . false ) ; key ; }<CODESPLIT>Creates the DependentValue object that forms a primary key reference for the collection .
AVariableExp getVarExp name vardef , PType type var = getVarExp ( name , vardef ) ; setType type ; ; }<CODESPLIT>Generate Var Exp with everything!
static boolean ( String if ( Strings ( arg ) || arg . trim ( ) . ) return } return ; }<CODESPLIT>Determines whether the parameter string is null empty or whitespace .
queryBlockByNumber ( blockNumber InvalidArgumentException , ProposalException { getShuffledPeers ( EnumSet . of ( PeerRole . ) ) ; }<CODESPLIT>query this channel for a Block by the blockNumber . The request is retried on all peers till successful
( "unchecked" public getGetter ( Class type ) { return getGettersAsMap ( type ) get ( ; }<CODESPLIT>Search getter for given class and property name .
static String ( byte [ ] , String ) try return new String decodeLZ ( data ) catch ( UnsupportedEncodingException ) { RuntimeException e ) } }<CODESPLIT>Decode lz to string string .
AirlineFlightUpdateTemplateBuilder addAirlineFlightUpdateTemplate String String locale , String updateType ) { return new AirlineFlightUpdateTemplateBuilder ( introMessage locale , pnrNumber ; }<CODESPLIT>Adds an Airline Flight Update Template to the response .
private void addModulesArgument ( final String final List String arguments final Module modules , String , final String role { buf = new StringBuilder ( ) if ( != aditionalpath ) { add ( argument ; . aditionalpath ; ( modules null ) { if ( ! . contains argument ) arguments ( argument ) ; int i = i . length i { Module module = modules i ] ; artifact @ SuppressWarnings "unchecked" ) Set < Artifact > = project . getArtifacts ( ; for ( Artifact allArtifacts if art . getGroupId ) . ( ) ) && . getArtifactId ( ) . equals ( getArtifactId ( ) && . defaultString ( module ) . equals . ( . ( ) ) && . ( module . ) ) equals ( StringUtils defaultString art . getType ( ) ) ) = ; ; } == null throw new MojoExecutionException ( "The . toString ( + " in as " + ", is not found the project dependencies" ; } ( ( 0 ) { buf . append ( . ) ; } buf append ( getFile ( ) . getPath ( ) ) if ( buf . ( > { String = buf toString ( ) . add ( pathString ) . debug + argument + pathString ) }<CODESPLIT>Finds all artifacts in the weavemodule property and adds them to the ajc options .
static String ( HttpServletRequest request { String client . ( "aerogear-sender" ) if ( hasValue ( client ; } request . getHeader ( "user-agent" }<CODESPLIT>Reads the aerogear - sender header to check if an AeroGear Sender client was used . If the header value is NULL the value of the standard user - agent header is returned
public < ServiceMessage requestMany ( request , Class < ? > , Address ) return ( ( { requireNonNull , address parameter required and must null" ) requireNonNull transport and null" ; return create address ) requestStream ( request ) . map ( message -> ServiceMessageCodec ( message responseType ) ) ( this throwIfError ) } ) ; }<CODESPLIT>Given an address issues request to remote service which returns stream of service messages back .
public void incrementalRestore incrementalBackupFile ) throws FileNotFoundException , IOException , ClassNotFoundException = ; { = new ObjectInputStream PrivilegedFileHelper ( incrementalBackupFile ) while ( true ) { changesLog ( ) . setSystemId ( . ) ; ChangesLogIterator cli . ( ) while ( cli hasNextLog ) ) { if ( cli . nextLog . getEventType == LOCK ) { ) } ( ) ; ( EOFException ) ( LOG . ( ) ) { LOG . trace ( "An exception ( ) ) ; } } }<CODESPLIT>Perform incremental restore operation .
public Integer > start ( { final Integer object new < Integer ( . object , < > ( ) { count ; public void ( final ByteBuffer buffer ) remaining } public Integer finish ( ) { return ; } ) ; return object }<CODESPLIT>Initializes a byte counter on this channel .
static ( String locator logger . ( ) boolean flag = false try { locator ) != null } catch ( NoSuchElementException ) { } logger . ) ; return ; }<CODESPLIT>Checks if the provided element is present on the page based on the locator provided
public static void ( String args [ ] throws { final StringBuffer = new StringBuffer ( "The lazy fox" ; Thread ) { ( ) { buffer . 0 , 4 ) ; append ( in ; . err println ( "Middle" ) ; . sleep ( 4000 ) ; } catch Exception e ) } append ( fall" ) err println "Fall" ) } t2 = Thread ) { run try { sleep 1000 ; ( Exception e ) } buffer . append " jump over the fence" System err . println ( ) ; } . start ) ; start ( ) t1 . join ( ) ; t2 . join ; System . println buffer ) ;<CODESPLIT>We have more input since wait started
protected double interpolate double boundA , double boundB { double alphaNew isNaN gp ) alphaNew = SearchInterpolate . quadratic , gprev stprev fp , stp ) ; } else = SearchInterpolate . cubic2 fprev , gprev fp , gp , ; ( Double . isNaN ( alphaNew ) = SearchInterpolate . quadratic ( fprev , gprev fp ) double l , l ; } { l boundB ; u boundA } if ( < l ) alphaNew = l else if alphaNew > = u ; return ; }<CODESPLIT>Use either quadratic of cubic interpolation to guess the minimum .
private List < > check ( DataType dataType { . finer ( semantic constraints on datatype " + dataType . name ) > errors < SemanticError > ; String > = new HashSet < String ) ; ( constructor dataType constructors ) logger . finest ( "Checking constructor " + constructor . name + " datatype " + . ; if . constructors ) 1 dataType . ( constructor name ) { . info with as its data + . + "." ; errors . add _ConstructorDataTypeConflict dataType . ) ) ; ( . ( constructor . name { "Two constructors with same name . + data type " + dataType name + "." ) . ( ( . name constructor . ) } else { . add ( constructor . ) } errors ( check ( , ) } return ;<CODESPLIT>Checks a data type for duplicate constructor names or constructors having the same name as the data type
SuppressWarnings "unchecked" , "rawtypes" protected void ( additionalList GrailsPlugin plugin ) { ( ! getName ( ) ) { addedNames . add plugin . getName ( ) ) ; additionalList . ( ; ( , ) } }<CODESPLIT>Adds a plugin to the additional if this hasn t happened already
private executeRequest ( request ) IOException , GroovesharkException { HttpResponse httpClient . ( ) debugLogging ) ( request ) } String responsePayload = CharStreams . toString new response getEntity ( . ) ) { jsonMapper . ( new StringReader responsePayload ) ) ; } catch JsonProcessingException e { throw new GroovesharkException . ServerErrorException ( "Failed parse - was not + ) ; } }<CODESPLIT>Boilerplate to send the request and parse the response payload as JSON .
public < String T > ( JsonParser jsonParser ) throws HashMap < , > HashMap < T > ; ( jsonParser . nextToken ( ) != . { key ( . ( ) ( . getCurrentToken ) == JsonToken VALUE_NULL ) { map . key null ) ; } else { map . ( key , jsonParser ) } return map ; }<CODESPLIT>Parse a map of objects from a JsonParser .
subtract ( d date . setTime ( ( ) - d . parse ( ) ; ; }<CODESPLIT>subtract date on supported date
double long i ) digit = / double base ; double radical digit ; ( i > 0 { inverse += digit ( double ) ( i % base ) ; *= base } inverse ; }<CODESPLIT>Compute the radical inverse of i .
public getTempDir ( ) { ( FileUtil ) if TEMP_DIR null ) String . ( "java.io.tmpdir" ) ( . isEmpty ( tmpDir ) ) { if ( File ( "/temp" ) . } else { tmpDir "/tmp" ; } } = ; } } return TEMP_DIR }<CODESPLIT>Gets the default temp directory for the system .
static , Value > ( List Value list Accumulator init , ReduceClosure Accumulator , accumulator = init ; ( Value value : ) { accumulator = f . eval ( ; } return ; }<CODESPLIT>Applies a binary function between each element of the given list .
protected ProcessOutput executeProcess faxJob , String command , FaxActionType faxActionType ) command null { ( ) String updatedCommand ; ( . useWindowsCommandPrefix ) { StringBuilder = ( . ) + this length ) + ; . append this . windowsCommandPrefix ; . append ( " ) ; buffer ( updatedCommand updatedCommand = . toString ( ) ; } ProcessOutput . ( updatedCommand ) ; this . validateProcessOutput processOutput faxActionType ) ; updateFaxJob ( processOutput ) ; return processOutput ; }<CODESPLIT>Executes the process and returns the output .
ModelNode getConnector String ) { final Address Address . root ( ) add ( SUBSYSTEM , SUBSYSTEM_WEB ) ; readResource ( , true }<CODESPLIT>Returns the connector node with all its attributes . Will be null if it doesn t exist .
int match ( CharsetDetector det ] commonChars ) { @ SuppressWarnings ( int = 0 ; int 0 ; int commonCharCount = ; int badCharCount 0 ; int totalCharCount = 0 ; confidence = 0 ; iter = new ) detectBlock for iter . reset ( ) ; nextChar iter { ++ ( error { ++ else long cv & 0xFFFFFFFFL ; if cv <= ) singleByteCharCount ++ } else doubleByteCharCount ( != null Arrays binarySearch ( commonChars ( cv 0 ) commonCharCount ++ } } } } >= 2 && badCharCount * 5 >= ) { break detectBlock ; } if doubleByteCharCount 10 && badCharCount == if ( && totalCharCount < 10 confidence = 0 ; } = ; break detectBlock ; ( doubleByteCharCount 20 badCharCount { confidence detectBlock } ( == null ) { confidence doubleByteCharCount - 20 * badCharCount ) = 100 } else double maxVal = log ( ( float / ) ; double scaleFactor 90.0 / maxVal ; ( int ) ( log ( commonCharCount 1 ) * scaleFactor + 10 ) ; confidence . ( confidence , } } return confidence<CODESPLIT>Test the match of this charset with the input text data which is obtained via the CharsetDetector object .
static ( DMatrix src srcY0 , srcY1 int , int srcX1 , dst ) ) . reshape ( - srcY0 , srcX1 srcX0 ) ; extract ( src , srcY0 , , srcX1 dst 0 0 ; }<CODESPLIT>Extract where the destination is reshaped to match the extracted region
public resizeEip ( request ) checkNotNull ( request . getNewBandwidthInMbps , not null" ( request ( ) should be empty" ) ; if ( Strings isNullOrEmpty . ( request generateDefaultClientToken ) ) InternalRequest = this createRequest ( request HttpMethodName PUT , request . ( ) ) ; . addParameter , null ) internalRequest . addParameter CLIENT_TOKEN_IDENTIFY , . getClientToken ( ) ) fillPayload ( internalRequest ) ( , . class ) ; }<CODESPLIT>Resizing eip The Prepaid eip can not be downgrade . This is an asynchronous interface .
void ) { if currentContactSeedBrokerIndex == . ) currentContactSeedBrokerIndex = 0 ; URL newContactUrl [ currentContactSeedBrokerIndex ] ) this . consumer = SimpleConsumer ( newContactUrl . getHost ( ) , newContactUrl getPort , , ) ; }<CODESPLIT>Re - establish broker connection using the next available seed broker address .
private unescape String ) { StringBuilder = new StringBuilder ) for ( int i i < value . ++ i { c value charAt ( ) if ( == ESCAPE_PREFIX ) { String value . substring ( + , 3 int code = Integer parseInt ( 16 ) ( reservedChars length reservedChars code ] == ) { result reservedChars code ) ; ; } { throw ServiceLocationException ( escaped character + " position " + 1 ) + " of + , SLPError PARSE_ERROR ) ; } } else { result . ( c ) } } . ( ) ; }<CODESPLIT>Unescapes the scope string following RFC 2608 6 . 4 . 1
protected HashMap readFile HashMap brMap ) throws IOException HashMap = new HashMap ) ; ArrayList < HashMap > expArr = new ArrayList ; HashMap HashMap > files ( ArrayList < > obvData ; HashMap obv expData ; ( exname files keySet ( ) { obvData = ( . get ( exname ) . get ( ) ; for HashMap obvData ) = new ; = ( ( expData files . ( ) , expData , files ( ) "crid" ) copyItem ( expData , . get ( exname , "local_name" ) ; . ( , obv ) ; obv put . get ( obvDataKey ) ; . add expData ; } } idNames = new ) idNames . ) ; removeIndex ( , idNames . put ( , return ret ;<CODESPLIT>DSSAT TFile Data input method for Controller using
public FixedStringSearchInterpolator createInterpolator MojoParameters params String filter ) { String delimiters = ( ) delimiters == { return create ) ; } DockerAssemblyConfigurationSource configSource = new ( null null . . ( ) . ( params getProject ( ) . withExpressionMarkers ( [ 0 , delimiters [ 1 ] ) , configSource . ( 0 ] delimiters [ ] ) ; }<CODESPLIT>Create an interpolator for the given maven parameters and filter configuration .
public boolean isPartitionCleanupInProgress ZooKeeper zk throws KeeperException , InterruptedException { String > = . . leaders_initiators ) ; ZKUtil ChildrenCallback > childrenCallbacks = Lists . newArrayList ) ( child ZKUtil = ZKUtil . ) zk . ( ZKUtil . ( . leaders_initiators , child , false , callback null ) . add callback ; } for ( ZKUtil ChildrenCallback callback : childrenCallbacks ) { callback . get . isEmpty ) { return } return false ;<CODESPLIT>Checks if the cluster suffered an aborted join or node shutdown and is still in the process of cleaning up .
private byte [ unifyLData ( final CEMI ldata final emptySrc , final < Integer > types ) { final [ ] instanceof CEMILDataEx CEMILDataEx ext = CEMILDataEx ; < AddInfo > additionalInfo = additionalInfo ( ; ) for ( Iterator < AddInfo > i iterator ( ) ; i . hasNext ( ; ) { AddInfo i . ) ; types contains info . ) logger . ( L-Data additional , i . ) } } } = ldata . toByteArray ) ; data [ ] = 0 ; data + [ 1 ] + ] = ; if emptySrc ) data [ 1 ] + ] = 0 ; data [ 1 + data ] + 4 ; return data ;<CODESPLIT>additional info . types provides the list of add . info types we want to keep everything else is removed
public T extends Number > ] asArray final ... ) { int [ b = [ ] ; for ( i = 0 ; < b . length ; i ++ ) { [ = . ) ; return b }<CODESPLIT>Convert any number class to array of integer .
synchronized setActiveChunkHandle ( handle ) Preconditions . checkArgument ( handle || ! . ( SegmentChunk handle readonly." ) last lastChunk ( ) ; Preconditions . checkState last != , set when SegmentChunks." ; Preconditions ( == null handle . getSegmentName ) . ( last . ( ) ) , "Active SegmentChunk be for SegmentChunk." ) this . = handle }<CODESPLIT>Sets the Active SegmentChunk handle .
String ) { if . featOkTst ( Timex3Interval_Type jcasType ) . casFeat_emptyValue null ) "emptyValue" , "de.unihd.dbs.uima.types.heideltime.Timex3Interval" ) return jcasType . ll_cas ll_getStringValue ( addr , ( ( ) . casFeatCode_emptyValue ; }<CODESPLIT>getter for emptyValue - gets
public static AccountInfo ( BitstampBalance bitstampBalance , String ) { List new < ( ) ; for ( org . . xchange . . . account . BitstampBalance . Balance b . getBalances ) { Balance xchangeBalance ( Currency . getInstance . ( ) . toUpperCase ( ) , . getBalance ( ) , b . getAvailable b ( ZERO , ZERO subtract ( ( getReserved ) ) , ZERO ) balances . ( xchangeBalance ; return new AccountInfo ( , bitstampBalance getFee ( Wallet ( balances ) ; }<CODESPLIT>Adapts a BitstampBalance to an AccountInfo
afterConnectionClosed ( session status ) { logger "WebSocket closed: {}, Close Status: {}" , session status . toString ; }<CODESPLIT>Invoked after the web socket connection is closed . You can override this method in the child classes .
public trimLastPathSection ( String path { String sections path split "/" ) StringBuilder newPath StringBuilder ) ; int = 1 ; i sections . length - 1 ; i ++ ) { newPath [ . append "/" return newPath . toString ( ) }<CODESPLIT>Removes the last part of a file path .
static Style ) Style style = new ; style . color = PaletteUtils . getSolidColor ( . MATERIAL_RED ; }<CODESPLIT>Default material red transparent style for SuperToasts .
public ( ) { Bean T > null EjbDescriptor T ejbDescriptor = ( ) ( . isMessageDriven ) bean = getBean ( ; } WeldManager beanManager = getBeanManager ( ) ; WeldCreationalContext beanManager bean ) ; managedObjectContext = ( creationalContext ) ; return managedObjectContext }<CODESPLIT>This version creates a ManagedObjectContext which contains a CreationalContext for an EJB .
final void String { DeleteOperationRequest request = ( ) . setName ( name ) . build ) ; ; }<CODESPLIT>Deletes a long - running operation . This method indicates that the client is no longer interested in the operation result . It does not cancel the operation . If the server doesn t support this method it returns google . rpc . Code . UNIMPLEMENTED .
boolean int x ) . check currentState BitsState UNKNOWN ) ; return <= x length << wordshift ) ( bits [ x wordshift ] & ( 1 << ( ) ) != ; }<CODESPLIT>Is x an element of this set?
addSearchFinishHandler ( SearchFinishEvent . SearchFinishHandler handler ) { return , . TYPE ; }<CODESPLIT>This handler will be triggered when search is finish
public setForeignBusSendAllowed ( sendAllowed ) if ( TraceComponent . isAnyTracingEnabled && tc isEntryEnabled ) . entry , "setForeignBusSendAllowed" . ( sendAllowed ) ) ; } _sendAllowedOnTargetForeignBus Boolean . ( ) != synchronized aliasesThatTargetThisDest ) i aliasesThatTargetThisDest . ( ) ; ( . hasNext ( ) { AbstractAliasDestinationHandler abstractAliasDestinationHandler = AbstractAliasDestinationHandler ) next ( ; . setForeignBusSendAllowed ( sendAllowed ) } } } if ( TraceComponent ( ) && isEntryEnabled ( ) SibTr . tc , ; }<CODESPLIT>Set the Foreign Bus Level sendAllowed flag
processingInstruction ( target data ) throws SAXException documentHandler != null ) documentHandler . processingInstruction target , ; }<CODESPLIT>Adapt a SAX2 processing instruction event .
public Integer getFileSizeOnFTPServer String hostName Integer port , String userName password , filePath { null ; = executeCommandOnFTPServer , , userName , password , "SIZE" , ) ( == . " ) { RuntimeException String . ( "Unable to size the %s file. Got reply from FTP server." filePath , ) ; } { result = . valueOf replyString . split ( " ) [ 1 replaceAll , ) ; } return ; }<CODESPLIT>Get size of the FTP file .
public base_responses enable nitro_service client String trapname [ ] ) { base_responses = ; != null . length ) snmpalarm enableresources [ ] = new snmpalarm trapname ] for 0 trapname length ; ) enableresources [ ] = new ( ) ; enableresources i . trapname trapname [ i ] ; } = perform_operation_bulk_request ( enableresources , ; return result ; }<CODESPLIT>Use this API to enable snmpalarm resources of given names .
void ordered < action ) { TopoSorter sorter = new TopoSorter < > ( this ) sorter . ; }<CODESPLIT>Traverse this graph and performs the given action in topological order
public parse ( String asg { int asg . '-' ; int d2 = . ( d1 + ; int dN = asg . lastIndexOf ( '-' dN 0 asg ) dN = asg . length ( ) ; } return new , , d2 , dN ) }<CODESPLIT>Create a new instance of a server group object by parsing the group name .
static int ( int numNodes ) int = ) ( srcCount OP_PER_MAP ) ( numMaps , numNodes * MAX_MAPS_PER_NODE ) ; return Math . numMaps , 1 ; }<CODESPLIT>Calculate how many maps to run .
protected channelRead0 ( ctx , msg ) throws Exception { msg ( ) : originalPromise ( ) . ( ) . remove ( this ) ctx ( ; : ( AuthenticationException ( on Bucket command" ) ; break case : originalPromise . setFailure new AuthenticationException ( "Bucket not found on ) ) ; ; default : originalPromise . ( new ( "Unhandled select " + . ( ) ) } }<CODESPLIT>Handles incoming Select bucket responses .
final DiceNotationExpression ( final DiceNotationExpression { result if instanceof ExpressionWrapper ) { result = ( . getWrappedExpression ( ) } else { result ; } return ; }<CODESPLIT>Removes the expression wrappers used to temporally prune the nodes .
public float ] ( float [ value , float , upper , String valueName ( value , valueName be null" ; ( i 0 ; < . length ++ i ) { float value [ i ] if Float ( ) { throw new ( valueName + i must NaN" ; else ( v < ) { throw String format "%s[%d] is of [%f, (too low)" valueName , , lower upper else ( v { throw new IllegalArgumentException ( String format "%s[%d] is of range of [%f, %f] (too high)" , valueName i , lower upper ) } return value ; }<CODESPLIT>Ensures that all elements in the argument floating point array are within the inclusive range
void copy InputStream , OutputStream outputStream ) throws ( inputStream outputStream , true ; }<CODESPLIT>Writes the content provided by the given source input stream into the given destination output stream .
private static Collection Tuple > getTuples ( List VarDef varDefs , int , int varEnd , int tupleSize ) { Collection < ArrayList < > ) ; for i i < ; i ++ ) { = varDefs get i ; < VarValueDef values = nextVar . getValidValues if ( ! values . hasNext ( ) { throw new ( tuples -- valid values defined nextVar ; Collection < = tupleSize 1 ? : ( varDefs + varEnd + 1 - ) if ( == null ) { ( values . hasNext ) ) { add new ( new VarBindingDef ( values ) ) ) ; ( subTuples ( ) ) { while ( . ) ) nextBinding new VarBindingDef ( nextVar values next ( ) ) ; for subTuple ) nextTuple Tuple nextBinding . addAll ( ; if ( nextTuple . isCompatible ) { ( nextTuple ; } } } return }<CODESPLIT>Returns all valid tuples of values for the given input variables .
public ( K key ) final int hash ( ; int slot = indexOf hash ; Entry < V > entry = table [ slot ] ; entry entry if hashCode hash && entry . key . equals ( key ) ) . ; } } return null }<CODESPLIT>Looks up the value mapped under the given key . Returns null if no value is mapped under this key .
boolean validSecondFactor String secret , ) { . ( , Required . SECRET toString ( ( number , Required TOTP . toString ( ) ; return TotpUtils secret , number ; }<CODESPLIT>Checks if a given number for 2FA is valid for the given secret
protected ( int currS , currL , int , prevL Emissions ) { ( currS , DL , prevL States . DL , . t_DL_in , emission ) ; updateOutgoingEdges ( currS , currL , , , Transitions . , emission ) }<CODESPLIT>Enumerates the possible transitions into state DL .
public setPrefix ( key prefix ) { PdfName fieldname = PdfName ( ) PdfObject ( fieldname if ( null throw new IllegalArgumentException ( "You must set value before a new . ) ; PdfName . , o ) ; dict . put ( PdfName . , new PdfString , PdfObject . ) ; ( fieldname dict ) ; }<CODESPLIT>Adds a prefix for the Collection item . You can only use this method after you have set the value of the item .
protected AbstractExpression replaceExpressionsWithPve AbstractExpression expr { assert expr null ) ; if ( expr instanceof TupleValueExpression ) { int paramIdx = ParameterizationInfo ) ParameterValueExpression pve ( paramIdx , ; ( paramIdx expr ) ; return pve ; } if ( instanceof ) int paramIdx = ParameterizationInfo getNextParamIndex ( ) ParameterValueExpression ParameterValueExpression ( paramIdx , expr ) ; List < TupleValueExpression > tves ( expr assert ( != ) ; for ( TupleValueExpression tve ) int = tve getOrigStmtId ) ; && m_parentStmt origId { throw new PlanningErrorException "Subqueries do not support of statement columns" ; } } put paramIdx , expr ) return } ( ) != { ( expr . getLeft ( ) ) ) ( expr ( != ) { . setRight replaceExpressionsWithPve expr ) if ( ) != ) { < AbstractExpression = ArrayList < > ( for ( AbstractExpression : getArgs ( ) { newArgs ( replaceExpressionsWithPve ( argument ) ; } expr setArgs ) ; } return expr }<CODESPLIT>Helper method to replace all TVEs and aggregated expressions with the corresponding PVEs . The original expressions are placed into the map to be propagated to the EE . The key to the map is the parameter index .
private addCallback ( String applicationId DelayedCallback callback ) boolean = ; < DelayedCallback list = get ) ; null list ) { list new ArrayList < DelayedCallback > ( ) ; BACKLOG . put ) true } ( callback ) ; return isFirst }<CODESPLIT>Add a delayed callback for the given application id . Returns whether this is the first request for the application id .
static ] gunzipBytes ( ] compressedBytes throws { bos = new ByteArrayOutputStream ( int 1.5 ) ) ; dos = new InflaterOutputStream bos ) ; dos . write ( compressedBytes ) dos ( ; bos toByteArray ) ;<CODESPLIT>to avoid linking all that jazz into the client code
getOutputExpression int index ) schemaCol = ( ) TupleValueExpression tve = new ( getTableAlias , schemaCol . getColumnAlias ( ) , schemaCol . getColumnAlias ( ) ; return ; }<CODESPLIT>Produce a tuple value expression for a column produced by this subquery
