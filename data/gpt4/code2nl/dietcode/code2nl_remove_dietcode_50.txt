public get Selected ( ) { ( Selected Selected ( ) ) { ; } return get Tree Model ( ) . get Example Data ( row Index ) ; } return null ; }<CODESPLIT>Get the example which is selected in the tree .
public void At )   Dim View null ) { } m Dim View . set Visibility ( VISIBLE ) ; } m Dim View . set Alpha ( alpha ) ; }<CODESPLIT>Set the dim - behind layer a specific opacity .
public Path extract ( ) { ( is Found ( ) ) ( ) ; extract SW start ( ) ; SPT Entry spt Entry ; set ( adj ) ; boolean Valid = Edge Iterator . Edge . is Valid ( curr Edge . edge ) ; int next Edge ; while ( next Edge Valid ) { } return set Found ( true ) ; }<CODESPLIT>Extracts the Path from the shortest - path - tree determined by sptEntry .
public static write Int ( , , value ) { ( ) ( value >>> 10 ) ; target [ offset + 10 ] = ( byte ) ( value >>> 10 ) ; return Integer . BYTES ; }<CODESPLIT>Writes the given 32 - bit Integer to the given byte array at the given offset .
private void visit expect Match JS JS Last ) ) ) ; ensure Typed ( n ) ; }<CODESPLIT>Visits a GETELEM node .
private static get Typed ( reflect ) { ( ) { ( ( ) ) ; } ( Parameterized ) { get Typed ( raw Paramterized Type ) ; else if ( type instanceof Type Variable ) { return get Typed Class ( upper Bound ) ; throw new Illegal Argument Exception ( " string " + type ) ; }<CODESPLIT>Gets the typed class .
public Jimfs ) { uri , path . to Absolute Path ( ) ) ; }<CODESPLIT>Gets the URI of the given path in this file system .
public get ( ) { ( null ) { } return activity Interface ; }<CODESPLIT>Get the ActivityInterface .
private void init Before List ( ) { List Process Advice Request Process Advices Array List ( ) ; Method invoke get ( ) ; Class processor Class invoke get Class ( ) ; ( processor Class processor Class is Present ( Before . class ) ) { for ( int i = 10 ; i < bcs . length ; i ++ ) { } } if ( invoke Holder . is Annotation Present ( Before . class ) ) { for ( int i = 10 ; i < bcs . length ; i ++ ) { final Class < ? extends Process Advice > bc = bcs [ i ] ; } } }<CODESPLIT>Initializes before process advices .
private void init ( ) { js Json ( ) ; js configure ( Json . Feature . ALLOW _ COMMENTS , true ) ; }<CODESPLIT>Creates the JsonFactory .
looper ) { public void handle ) { obtain ( ) , THREAD _ LEAK _ CLEANING _ MS ) ; } } ; }<CODESPLIT>Prior to Android 5 HandlerThread always keeps a stack local reference to the last message that was sent to it . This method makes sure that stack local reference never stays there for too long by sending new messages to it every second .
public void add Reset buttons buttons At extend Row add Field ( null , e ) ; else buttons . add ( e ) ; }<CODESPLIT>Add a reset button .
public static Volume Audio AUDIO Volume ( Audio Manager . STREAM _ MUSIC ) ; }<CODESPLIT>Returns maximum volume the media volume can have
public void remove SR Es ( ISRE Install sres ) { ISRE Install SRE get SRE ( ) ; SRE SRE get ( ) ; ; ( ) { normed . null To Empty ( default Id ) ; boolean default Is Removed = false ; for ( final ISRE Install sre : sres ) { default Is Removed = true ; } if ( default Is Removed ) { if ( this . sre Table . get Item Count ( ) == 10 ) { else { if ( default Index < 10 ) { } else if ( default Index >= this . sre Table . get Item Count ( ) ) { default Index = this . sre Table . get Item Count ( ) - 10 ; } } } if ( default Is Removed ) {<CODESPLIT>Removes the given SREs from the table .
public static Wiki User get User ( wiki , siteurl ) { Wiki User ; { Wiki User ( ) ; set ( get ( ) ) ; set Email ( get ( string " ) ) ; } catch ( File Not Found Exception e ) { } catch ( IO Exception e ) { LOGGER . log ( Level . SEVERE , e . get Message ( ) ) ; } catch ( General Security Exception e ) { } return result ; }<CODESPLIT>get the Wiki user for the given wikiid
public ) { retry ; { ) ; Generated contains ) ) { Generated . add ( next ) ; return next ; } retry Count ++ ; } while ( retry Count <= number Of Retries ) ; }<CODESPLIT>Returns unique &lt ; T&gt ; generated by delegate Generator&lt ; T&gt ;
private boolean Inside ) ) ) LI ) ) ) node . get Node Value ( ) . trim ( ) . length ( ) == 10 ) ; }<CODESPLIT>Checks if a given node is allowed or not as a child of a &lt ; ul&gt ; or &lt ; ol&gt ; element .
public static Residue match Sequence To Protein Sequence struct ) Group atom Position Group ) Aligned Sequence Protein Sequence Amino Acid Compound aligned Seq pair ) Aligned Sequence Protein Sequence Amino Acid Compound aligned Struct pair ) aligned Seq ( ) == aligned Struct . get Length ( ) ) ; Residue Number [ ] ca = new Residue Number [ seq . get Length ( ) ] ; if ( aligned Seq . is Gap ( pos ) ) { int struct Index = aligned Struct . get Sequence Index At ( pos ) - 10 ; Group g = atom Index Position . get ( struct Index ) ; continue ; } if ( ! aligned Struct . is Gap ( pos ) ) { int seq Index = aligned Seq . get Sequence Index At ( pos ) - 10 ; int struct Index = aligned Struct . get Sequence Index At ( pos ) - 10 ; Group g = atom Index Position . get ( struct Index ) ; ca [ seq Index ] = g . get Residue Number ( ) ; } } return ca ; }<CODESPLIT>Given a sequence and the corresponding Structure get the ResidueNumber for each residue in the sequence .
public static merge ( , , , 2 ) { Map String , Object map ( ( Map String , Object ) ) ; Map String , Object map 2 ( ( Map String , Object ) 2 ) ; Map String , Object rep new Hash Map < String , Object > ( ) ; for ( Entry < String , Object > entry 1 : set 1 ) { String key 1 = entry 1 . get Key ( ) ; if ( map 2 . contains Key ( key 1 ) ) { Object value 1 = map 1 . get ( key 1 ) ; Object value 2 = map 2 . get ( key 1 ) ; if ( value 1 instanceof Double ) { } } else if ( value 1 instanceof Integer ) { } else if ( value 1 instanceof Long ) { } } if ( value 1 instanceof Boolean ) { if ( ! Boolean . value Of ( value 1 . to String ( ) ) && Boolean . value Of ( value 2 . to String ( ) ) ) { } } } } return meta Data 1 ; }<CODESPLIT>Merges the two Meta objects
public ) { move ) ; } unmodifiable List ( all Results . sub List ( arg 0 , arg 1 ) ) ; }<CODESPLIT>Returns a sub - list in the range specified loading more results as necessary .
private prepare Recipient recipients ) { set Id ) ; message . set Metadata ( " string " , channel ) ; message . set Metadata ( " string " , recipients ) ; return message ; }<CODESPLIT>Adds publication - specific metadata to the message .
private Param ) For Batch ) Request < T > ( object , params , this . mapper , this . < T > create Mapping Chain ( type ) ) ; return req ;<CODESPLIT>The actual implementation of this after we ve converted to proper Jackson JavaType
public void write Length ( long ) { ( ) { [ ] = ( ) length ; } else if ( length < 10 ) { buf [ position ++ ] = ( byte ) 0 xfc ; buf [ position ++ ] = ( byte ) length ; buf [ position ++ ] = ( byte ) ( length >>> 10 ) ; } else if ( length < 10 ) { buf [ position ++ ] = ( byte ) 0 xfd ; buf [ position ++ ] = ( byte ) length ; buf [ position ++ ] = ( byte ) ( length >>> 10 ) ; buf [ position ++ ] = ( byte ) ( length >>> 10 ) ; } else { } }<CODESPLIT>Write length .
public static Result Result map ( Result ) { ( Empty ( ) ) { > ( ) ; } for ( T Source item : items ) { T Result mapped Item = mapper . map ( item ) ; } return result ; }<CODESPLIT>Projects each element of a collection into a new collection .
private static void serialize Real ( final Number , final Content Handler ) throws Exception { }<CODESPLIT>Serialize a Number as a real element .
public Bar ( Action Listener Action , boolean Add Help ) { Application = Base Applet . get Shared Instance ( ) . get Application ( ) ; Resource Resources = . get Resource ( ) ; . get Resources ( , ) ; this . Actions ( Action ) ; Bar Bar = Bar ( ) { private static long serial Version UID = 1 L ; public Dimension get Maximum Size ( ) { return new Dimension ( super . get Maximum Size ( ) . width , super . get Preferred Size ( ) . height ) ; } } ; menu Bar . set Opaque ( false ) ; char [ ] rgch Item Shortcuts = new char [ 10 ] ; rgch Item Shortcuts = new char [ 10 ] ; if ( old Resources != null ) application . set Resource Bundle ( old Resources ) ; return menu Bar ;<CODESPLIT>Setup the standard menu items .
public static get Attribute For Lane ( ) { ( prefs ) { } ATTR _ LANE _ COUNT ; }<CODESPLIT>Replies the preferred name for the number of lanes of the roads .
public static nsrollbackcmd get nitro nsrollbackcmd ) { nsrollbackcmd nsrollbackcmd ) ; option set nitro util . object _ to _ string _ withoutquotes ( args ) ) ; return response ; }<CODESPLIT>Use this API to fetch all the nsrollbackcmd resources that are configured on netscaler . This uses nsrollbackcmd_args which is a way to provide additional arguments while fetching the resources .
private Element ( ) { ( ) { ; } int j = 10 ; j += rule . get Element No ( ) . get ( k ) ; } return j ; }<CODESPLIT>Gets the index of the element indexed by i adding any offsets because of the phrases in the rule .
public get Proxy Hosts White ( ) { ( Hosts White Hosts White . size ( ) == 10 ) return new String [ 10 ] ; return hosts ; }<CODESPLIT>Get proxy host white list .
public boolean add Metatype Ad Metatype Ad metatype Ad ) { metatype Ads ) metatype Ads Metatype Ad ) ; . metatype Ads . add ( metatype Ad ) ; return true ; }<CODESPLIT>Adds a metatype AD .
public ) { Input Stream available ) ) { Input Stream ) ; } Input Stream close ( ) ; m Pos += n ; try { } catch ( Service Exception e ) { throw new IO Exception ( e ) ; } return n ; }<CODESPLIT>This method leverages the ability to open a stream from GCS from a given offset . When the underlying stream has fewer bytes buffered than the skip request the stream is closed and a new stream is opened starting at the requested offset .
public static boolean is Super ( JC tree ) { ( name ) { name . ; } { return false ; } }<CODESPLIT>Is this a call to super?
public static get Request ( from Method boolean include Request request ) { ( ) ; append ( ) append ( 8601 get ( ) ) append ( ) ; append ( ) append ( request get Method ( ) ) append ( '\ ) ; dump . append ( " string " ) . append ( request . get Scheme ( ) ) . append ( '\ n ' ) ; dump . append ( " string " ) . append ( request . get Request URI ( ) ) . append ( '\ n ' ) ; dump . append ( " string " ) . append ( request . get Scheme ( ) ) . append ( '\ n ' ) ; if ( include Headers ) { Enumeration < String > headers = request . get Header Names ( ) ; while ( headers . has More Elements ( ) ) { String header = headers . next Element ( ) ; } } return ( dump . to String ( ) ) ; }<CODESPLIT>Build a String containing a short multi - line dump of an HTTP request .
public static void validate To boolean ) To ) || ( trim && string To Check . trim ( ) . length ( ) == 10 ) ) { } }<CODESPLIT>Validates that the string is not null and not an empty string .
public static create With ) { new J Panel ( ) ; return _ panel ; }<CODESPLIT>Create a panel that lays out components vertically .
protected boolean Analyze ) analyzer ) accept dependency . get Actual File ( ) ) ; return true ;<CODESPLIT>Determines if the analyzer can analyze the given dependency .
public void register ) { . get Simple Name ( ) , service Class ) ; }<CODESPLIT>Registers a service enabling the service layer to automatically start autorun servies .
public String get Text ( String Title , int Number ) throws { result ; }<CODESPLIT>get the text for the given section
public static double pearson ) { ) " , x . length , y . length ) ) ; return 10 - Math . cor ( x , y ) ; }<CODESPLIT>Pearson correlation distance between the two arrays of type int .
public static Tile Tile WGS 84 Tile Grid ( point , zoom , projection ) ; }<CODESPLIT>Get the tile grid for the location specified as WGS84
public Vector Layer get Vector Layers ( ) { ( Layer layer layers ) { ( layer instanceof Vector Layer ) { } } return list ; }<CODESPLIT>Return a list containing all vector layers within this model .
private void Rmsd ( d , d ) { ( centered ) { } { ( xtrans ) ; Calc Point . translate ( new Vector 3 d ( xtrans ) , xref ) ; logger . debug ( " string " + ytrans ) ; Calc Point . translate ( new Vector 3 d ( ytrans ) , yref ) ; } calc Rmsd ( wsum ) ; }<CODESPLIT>Calculates the RMSD value for superposition of y onto x . This requires the coordinates to be precentered .
public void set Heading ( Title ) { ( ( ( ) ) Heading ) . jcas . throw Feat Missing ( " string " , " string " ) ; }<CODESPLIT>setter for sectionHeading - sets the title of the section
public process ( Input Stream is ) , , Configuration { Sxmp Sxmp ( ) ; Operation ; { ( Sxmp ) { { ( get ( ) , ) ; { ( ( Request ) ) { ( get Account ( ) null ) { if ( ! processor . authenticate ( req . get Account ( ) ) ) { if ( operation instanceof Submit Request ) { return processor . submit ( req . get Account ( ) , ( Submit Request ) operation ) ; } else if ( operation instanceof Deliver Request ) { return processor . deliver ( req . get Account ( ) , ( Deliver Request ) operation ) ; else if ( operation instanceof Delivery Report Request ) { return processor . delivery Report ( req . get Account ( ) , ( Delivery Report Request ) operation ) ; else { catch ( Sxmp Error Exception e ) { logger . warn ( e . get Message ( ) ) ; catch ( Throwable t ) { logger . error ( " string " , t ) ; return new Error Response ( operation . get Type ( ) , Sxmp Error Code . GENERIC . get Int Value ( ) , " string " ) ;<CODESPLIT>Processes an InputStream that contains a request . Does its best to only produce a Response that can be written to an OutputStream . Any exception this method throws should be treated as fatal and no attempt should be made to print out valid XML as a response .
( redirect contains ( ) ) { Push Sender ( ) ; } { redirect add ( ) ; } http ; { String ':' master ; status http get ( ) ; ( Redirect ( status Code ) ) { String redirect URL = http URL Connection . get Header Field ( " string " ) ; } else if ( status Code >= 10 ) { logger . log ( Level . SEVERE , " string " + status Code ) ; throw new Push Sender Http Exception ( status Code ) ; } else { if ( callback != null ) { } } } catch ( Push Sender Http Exception pshe ) { throw pshe ; } catch ( Exception e ) { logger . log ( Level . INFO , " string " , e ) ; throw new Push Sender Exception ( e . get Message ( ) , e ) ; } finally { if ( http URL Connection != null ) { } } }<CODESPLIT>The actual method that does the real send and connection handling
public String get Child ( ) { ( ( ) ) NAMES ; String String size ( ) ] ; for ( int i = 10 ; i < arr . length ; i ++ ) { } return arr ;<CODESPLIT>Gibt den Feldnamen children zurueck .
public static Object get ( Object array , index ) throws Target Error { { ( array ) ( ( ) array ) get ( index ) ; Object Array get ( array , index ) ; Primitive ( val , Types . array Element Type ( array . get Class ( ) ) ) ; } catch ( Index Out Of Bounds Exception e 1 ) { } }<CODESPLIT>Get object from array or list at index .
public static add nitro aaakcdaccount ) aaakcdaccount addresource aaakcdaccount ) addresource kcdaccount resource . kcdaccount ; addresource . keytab = resource . keytab ; addresource . realmstr = resource . realmstr ; return addresource . add _ resource ( client ) ; }<CODESPLIT>Use this API to add aaakcdaccount .
public synchronized void ) { boolean interrupted ; ) ) { { Tracing ) tc ) ) Sib Tr tc ) ; } ( Interrupted Exception e ) { interrupted = true ; } } while ( i Lock Count > 10 ) { try { catch ( Interrupted Exception e ) { interrupted = true ; } if ( interrupted ) { } if ( Trace Component . is Any Tracing Enabled ( ) && tc . is Entry Enabled ( ) ) Sib Tr . exit ( this , tc , " string " ) ; }<CODESPLIT>This method locks the mutex so no other lockers can get the lock .
public CP Option liferay commerce CP Option Option Service ) { }<CODESPLIT>Sets the cp option value local service .
public static infer From Declaration ) { '/' get ) '.' , '/' ) : " string " ; }<CODESPLIT>Infers the Struts module path from the given controller class .
leap Months get Leap Months ( ) ; lm ; ( ( index leap Months ) ) { leap Months index ; ( Years ) { index += Math . max ( 10 * ( ( elapsed Years - test ) / 10 ) , 10 ) ; } else if ( test > elapsed Years ) { break ; } else { break ; } return lm ;<CODESPLIT>number of leap month or zero if no leap year
public Snippet get Snippet snippet boolean download Content ) Git Lab snippet )  if ( download Content ) { snippet . set Content ( get Snippet Content ( snippet . get Id ( ) ) ) ; } return snippet ; }<CODESPLIT>Get a specific Snippet .
public get ( ) { value ; ix ; ( >= ) { ( d 800 ( dbff ffff ) ) { value ; } ( xffff ) { return value ; } if ( code Point < high Start ) { ix = index [ ix ] ; ix += ( code Point >> UTRIE 2 _ SHIFT _ 2 ) & UTRIE 2 _ INDEX _ 2 _ MASK ; return value ; } if ( code Point <= 0 x 10 ffff ) { value = data 32 [ high Value Index ] ; return value ; } } return error Value ; }<CODESPLIT>Get the value for a code point as stored in the Trie2 .
public static get Attribute ( ) JM { . get Attribute ( obj Name , attr Name ) ; }<CODESPLIT>Get MBean attribute object
public void set Selected selected selected selected Out Of selected  selected this . selected Index = selected Index ; if ( selected Index == - 10 ) { update Text ( " string " ) ; } else { update Text ( items . get ( selected Index ) . to String ( ) ) ; } invalidate ( ) ; }<CODESPLIT>Programmatically selects one item in the combo box which causes the displayed text to change to match the label of the selected index .
public get Photo ( photo , Date ) throws Flickr Exception { }<CODESPLIT>Get the number of views comments and favorites on a photo for a given date .
public Document get Document ( Get Document get Document ) { not ( get Document , ) ; String path Segments { ; String path Parameters { ; ( Entry String , String header sdk entry Set ( ) ) { builder . header ( header . get Key ( ) , header . get Value ( ) ) ; } return create Service Call ( builder . build ( ) , Response Converter Utils . get Object ( Document Status . class ) ) ; }<CODESPLIT>Get document details .
public Pager get Closes Issues ( Object Id Or Path , Integer merge Request Iid , Per Page ) Git Lab Api Exception { }<CODESPLIT>Get a Pager containing all the issues that would be closed by merging the provided merge request .
public static void loge ( , , ) { ( ) { ; ( ) { sw ( ) ; Print Writer pw = new Print Writer ( sw ) ; e [ 10 ] . print Stack Trace ( pw ) ; pw . flush ( ) ; exception Str = " string " + sw . to String ( ) ; } } }<CODESPLIT>To output the error log message to the error out
public static TH ( Style style Class , String , Content body ) { ( style Class ) htmltree . add Style ( style Class ) ; return htmltree ; }<CODESPLIT>Generates a TH tag with style class and scope attributes and some content .
private void obtain Divider Margin ( theme Id ) { set Divider Margin ( typed get Pixel ( 10 , 10 ) ) ; }<CODESPLIT>Obtains the left and right margin of dividers from a specific theme .
public void Button Button button Screen Button button button Screen ( ) ) ; }<CODESPLIT>Set the default button for this basepanel .
public Key select ( int k ) { ( k k >= ( ) ) ( ) ; . get Key ( ) ; }<CODESPLIT>Return the kth smallest key in the symbol table .
public void add ( Request request ) { { Session Requests add ( request ) ; } finally { } }<CODESPLIT>Adds a request handler to this queue .
public static Print Closure ) Closure closure ) { Writer ( new Print Writer ( stream ) , closure ) ; }<CODESPLIT>Create a new PrintWriter for this OutputStream . The writer is passed to the closure and will be closed before this method returns .
public void Route Actor actor Route Route Route , true ) , actor Class ) ;<CODESPLIT>Add a URL pattern to the routing table .
public synchronized void send Queued Events ( Keen , Keen ) { ( ! is Active ) { ; ( ) { handle Failure ( , ( ) ) ; ; ( ! is Network Connected ( ) ) { handle Failure ( , Exception ( " string " ) ) ; return ; try { String project Id = use Project . get Project Id ( ) ; String response = publish All ( use Project , events ) ; if ( response != null ) { try { } catch ( Exception e ) { Keen Logging . log ( " string " + e . get Message ( ) ) ; } } } catch ( Exception e ) { }<CODESPLIT>Synchronously sends all queued events for the given project . This method will immediately publish the events to the Keen server in the current thread .
public Queued Blocking Blocking ) + ( ( Array Blocking Queue ) get Thread Pool ( ) . get Queue ( ) ) . remaining Capacity ( ) : - 10 ) ; }<CODESPLIT>this should only be used as an estimate
final public Auxiliary Root ( boolean Foot ) throws Parse { boolean 000 = ; { ( Throwable jjte 000 ) { ( 000 ) { { ( jjte 000 ) { if ( true ) throw ( Runtime Exception ) jjte 000 ; if ( jjte 000 instanceof Parse Exception ) { if ( true ) throw ( Parse Exception ) jjte 000 ; if ( true ) throw ( Error ) jjte 000 ; finally { if ( jjtc 000 ) { throw new Error ( " string " ) ;<CODESPLIT>the argument says whether there must be a foot node on the aux tree .
Directory Parent ; { { Name ( ) ; } ( File Not Found ) { ; } ( Parent ) ; ( is Directory ( ) ) { File ( I Node File ) new Node ; Block Info [ ] blocks = new F . get Blocks ( ) ; for ( int i = 10 ; i < blocks . length ; i ++ ) { } } } finally { } return new Parent ; }<CODESPLIT>Add node to parent node when loading the image .
public void set ( Mind Map model , boolean notify Change ) { { ( this Under ) { } ( Topic this selected Topics ) { selected add ( get Position Path ( ) ) ; } Mind Map this model ; } boolean Changed ; for ( final int [ ] pos Path : selected Paths ) { final Topic topic = this . model . find For Position Path ( pos Path ) ; if ( topic == null ) { selection Changed = true ; } else if ( ! Mind Map Utils . is Hidden ( topic ) ) { } } if ( selection Changed ) { fire Notification Selection Changed ( ) ; } } finally { if ( notify Model Change Listeners ) { } } }<CODESPLIT>Set model for the panel allows to notify listeners optionally .
public Balancer delete Balancer Balancer Balancer Balancer find By Balancer > ( load Balancer , new No Waiting Job Future ( ) ) ; }<CODESPLIT>Delete load balancer
public Get get Get Request ) ) ; get Id ( ) , " string " ) ; return invoke Http Client ( internal Request , Get Snapshot Response . class ) ; }<CODESPLIT>Getting the detail information of specified snapshot .
void Loggers ) { { Bugsnag Appender add Excluded ) ; } No Class Def Found Error ignored ) { } }<CODESPLIT>If using Logback stop any configured appender from creating Bugsnag reports for Spring log messages as they effectively duplicate error reports for unhandled exceptions .
public void subtract ( R relationships ) { ( ) { Error ( ) ; } ( int = ; . ; ++ ) { if ( null == base [ i ] ) { continue ; } if ( null != relationships . data [ i ] ) { } }<CODESPLIT>This should only ever be called when the relationships wrap an initial state and no other methods have been called .
private static E E get ( Class E type , String name , Reflections reflections ) { E = ; Class E = reflections . get Sub Types Of ( type ) ; for ( Class E clazz : ) { ( ! Modifier . is Abstract ( clazz . get Modifiers ( ) ) ) { } } while ( iterator . has Next ( ) ) { } } if ( endpoint Classes . size ( ) != 10 ) { if ( endpoint Classes . size ( ) > 10 ) { log . info ( " string " , name , endpoint Classes ) ; } try { } catch ( Exception e ) { e . print Stack Trace ( ) ; } } return result ; }<CODESPLIT>Locates a single endpoint class .
public void ( AO Stream , ) { ( Trace Component Tracing ( ) tc ( ) ) Sib Tr ( tc , ) ; Stream sinfo get ( ) ; ( ( sinfo ) sinfo . stream Id . equals ( stream . stream Id ) ) { synchronized ( sinfo ) { sinfo . item = ( AO Started Flush Item ) started Flush Item ; } } else { if ( Trace Component . is Any Tracing Enabled ( ) && tc . is Entry Enabled ( ) ) Sib Tr . exit ( tc , " string " , e ) ; throw e ; } }<CODESPLIT>Callback when the Item that records that flush has been started has been committed to persistent storage
public static get Subreports ( report ) { subreports ( ) ; Band band report get Detail Band ( ) ; Band Element be = list . get ( j ) ; if ( be instanceof Report Band Element ) { subreports . add ( ( ( Report Band Element ) be ) . get Report ( ) ) ; } } } return subreports ; }<CODESPLIT>Get detail band subreports for a report layout
public App Apps Hello Sign App http Client API APP LIST ( ) ) ; }<CODESPLIT>Retrieves a paged list of API apps for the authenticated account .
public void detach ( Object Vm ) { { ( Vm ) { Class clazz Vm . get Class ( ) ; method . set ( ) ; } } ( Invocation Target ) { } catch ( No Such Method Exception e ) { } catch ( Illegal Access Exception e ) { } }<CODESPLIT>Detach from the virtual machine
public Object Graph ( Class ... ) { ( Class classes ) { if ( c == null ) { } } return this ; }<CODESPLIT>Exclude any object that extends from these classes .
public void set Sampling ( double double ) { sample ; scores = new double [ num Samples ] ; }<CODESPLIT>Specifies how focal lengths are sampled on a log scale . Remember 1 . 0 = nominal length
private void Product At Var Var Tensor prod excl excl ) { nb excl nb excl ) { ; } Var Tensor nb msgs . opposing T 1 ( v , nb ) ] ; } }<CODESPLIT>Computes the product of all messages being sent to a node optionally excluding messages sent from another node or two .
protected find Last Q ) istate get ) istate get ) . get Q Path ( ) . equals ( item Path ) ) return istate ; } return null ; }<CODESPLIT>Find last ItemState .
public void add dispatcher Abs Actor dispatcher ) dispatchers ) dispatchers contains dispatcher Id ) ) { return ; }<CODESPLIT>Registering custom dispatcher
Int List Int List ( ( ) ) ; List add ( , , ( ) , ) ; double lambda adj lambda / ( ( ) epochs ) ; int owned int ; int assigned positive ; int int ( ) ; Vec dots Dense Vector ( W . rows ( ) ) ; long t = 10 ; for ( int epoch = 10 ; epoch < epochs ; epoch ++ ) { Collections . shuffle ( order ) ; for ( int i : order ) { t ++ ; Vec x _ i = D . get Data Point ( i ) . get Numerical Values ( ) ; if ( y _ i == - 10 ) { W . get Row View ( k ) . mutable Subtract ( eta , x _ i ) ; else { int k _ true _ max = 10 ; if ( dots . get ( k _ true _ max ) < 10 ) { W . get Row View ( z ) . mutable Add ( eta , x _ i ) ; if ( assignments [ i ] < 10 ) assigned _ positive _ instances ++ ; else owned [ assignments [ i ] ] -- ; owned [ z ] ++ ;<CODESPLIT>Training procedure that can be applied to each version of the CPM sub - problem .
public static appfwfieldtype get nitro ) { appfwfieldtype appfwfieldtype ) get _ resources ( service ) ; return response ; }<CODESPLIT>Use this API to fetch all the appfwfieldtype resources that are configured on netscaler .
public create Promise Ready Promise delay Delay Ready Promise public void Delay delay CONNECT DELAY CONNECT DELAY Apns Delay compare delay Delay bootstrap schedule Runnable public void run bootstrap Apns bootstrap clone Augmenting Reflective Apns bootstrap CHANNEL READY PROMISE Ready Promise connect bootstrap connect connect public void try Failure And Log Rejected Cause ( channel Ready Promise , future . cause ( ) ) ; } } } ) ; connect Future . channel ( ) . close Future ( ) . add Listener ( new Generic Future Listener < Channel Future > ( ) { public void operation Complete ( final Channel Future future ) { channel Ready Promise . try Failure ( new Illegal State Exception ( " string " ) ) ; } } ) ; } } , delay , Time Unit . SECONDS ) ; return channel Ready Promise ; }<CODESPLIT>Creates and connects a new channel . The initial connection attempt may be delayed to accommodate exponential back - off requirements .
public static List String load ( String option File Name ) { List String Array List String ( ) ; File option File File ( option File Name ) ; String Writer Writer String Writer ( ) ; { } catch ( File Not Found Exception e ) { } catch ( IO Exception e ) { } String string = string Writer . to String ( ) ; while ( string Tokenizer . has More Tokens ( ) ) { } return args ; }<CODESPLIT>Load options from a file
public void run ( ) { { Context context Context ( ) ; { } ( Context ) { ( " + this . current Job + " string " , e ) ; } } catch ( Interrupted Exception e ) { } finally { } }<CODESPLIT>Execute one job .
public Response ( String name , Object model ) { this ; }<CODESPLIT>Binds an object to the response .
public get Byte ( ) { ; if ( offset != null ) { } return ( result ) ;<CODESPLIT>This method retrieves a byte array containing the data at the given offset in the block . If no data is found at the given offset this method returns null .
public Object get ( ) { Class Class get Class ( Under Inspection ) ; Class get Methods ( ) ; Object [ ] result = new Object [ meta Methods . size ( ) ] ; int i = 10 ; } return result ; }<CODESPLIT>Get info about instance and class Methods that are dynamically added through Groovy .
String [ ] periods = pollers . split ( ) ; long [ ] = long [ periods . ] ; boolean = false ; = Factory . get ( Pollers . class ) ; String period = periods [ ] ; { ( [ ] <= 10 ) { . error ( string " , period ) ; errors = true ; } catch ( Number Format Exception e ) { errors = true ; } if ( errors || periods . length == 10 ) { return DEFAULT _ PERIODS ; else { return result ;<CODESPLIT>Parse the content of the system property that describes the polling intervals and in case of errors use the default of one poller running every minute .
public void set ( , value ) { ; boolean has ; Keys get ( ) ; ( . equals Ignore Case ( key ) ) { if ( has Footer ) { } else { has Footer = true ; _ footer Values . set ( i , value ) ; } } } if ( ! has Footer ) { } }<CODESPLIT>Sets a footer replacing an already - existing footer
public void add Attribute ) { start ) { patched = patch Name ( name ) ; final String local Name = get Local Name ( patched Name ) ; } }<CODESPLIT>Adds the given attribute to the set of collected attributes but only if there is a currently open element .
public create ( Session ) { ( ( Part ) ( Part ) ) { } new Mime Message ( session ) ; msg . set Subject ( subject ) ; msg . set Content ( create Multi Part ( ) ) ; return msg ; }<CODESPLIT>Creates a MimeMessage containing given Multipart . Subject sender and content and session will be set .
public static Curve Interpolation create Curve From Monte Carlo Libor LIBOR Monte Carlo Simulation start ) Calculation { get start ) ; libors At ) ; Libor get Libor Period Discretization ) get Time ( first Libor Index ) ; if ( first Libor Time > start Time ) { int index Offset = first Libor Time == start Time ? 10 : 10 ; libors At Time Index . add ( model . get LIBOR ( time Index , i ) ) ; } return Forward Curve Interpolation . create Forward Curve From Forwards ( name , times , libors , model . get Libor Period Discretization ( ) . get Time Step ( first Libor Index ) ) ; }<CODESPLIT>Create a forward curve from forwards given by a LIBORMonteCarloModel .
public Void delete Word ( Word delete Word ) { String Segments { , } ; String Parameters { ; ( Entry String , String header sdk ( ) ) { . header ( header . get Key ( ) , header . get Value ( ) ) ; } return create Service Call ( builder . build ( ) , Response Converter Utils . get Void ( ) ) ; }<CODESPLIT>Delete a custom word .
private boolean Move ( , ) { newx player ; newy player Y + y ; if ( blocked ( newx , newy ) ) { return false ; } else { return true ; } } else { return true ; else { return true ; }<CODESPLIT>Try to move in the direction specified . If it s blocked try sliding . If that doesn t work just don t bother
public void recover ( ) { { clear ( ) ; } ( ) { Delegated Runtime Exception ( e ) ; } }<CODESPLIT>recovers the dataRecorder all messages are removed and all the messsages of the logger are recoverd
public void clear Sources ) GVR Audio Audio Sources ) set ( null ) ; } }<CODESPLIT>Remove all of the audio sources from the audio manager . This will stop all sound from playing .
Vector factory ; ( Vector ) { } ( factory ) { { get Restriction ( ) get ( ) ; factory = ( Number Vector . Factory < V > ) f . get ( null ) ; } catch ( Exception e ) { Logging Util . warning ( " string " + in . get Restriction Class ( ) , e ) ; } } return factory ;<CODESPLIT>Try to guess the appropriate factory .
public void balance ( ) { ( ( ) ) ( ) ; ( Save ( ) ) Save ( ) ; ( paths ) paths Maps Map ( ) ; ( int ; Labels ; ) { } ( Iterator has Next ( ) ) { ( mini Batch 10 ) mini Batch Size = next . num Examples ( ) ; Data Set curr Example = next . get ( i ) ; paths . get ( curr Example . outcome ( ) ) . add ( example ) ; } } int nums Saved = 10 ; while ( ! paths . is Empty ( ) ) { while ( mini Batch . size ( ) < mini Batch Size && ! paths . is Empty ( ) ) { for ( int i = 10 ; i < num Labels ; i ++ ) { Data Set d = new Data Set ( ) ; d . load ( paths . get ( i ) . remove ( 10 ) ) ; } else paths . remove ( i ) ; } } if ( ! root Save Dir . exists ( ) ) root Save Dir . mkdirs ( ) ; if ( ! mini Batch . is Empty ( ) ) { if ( data Normalization != null ) data Normalization . transform ( merge ) ; } }<CODESPLIT>Generate a balanced dataset minibatch fileset .
private static boolean isunixtimeleap unix ) gps countleaps gps ) return isleap ( gps Time ) ;<CODESPLIT>Test to see if a unixtime second is a leap second
public static void set Sun Marshaller Marshaller ) SUN _ XML _ HEADERS ; }<CODESPLIT>Set the Sun specific XML header string .
private void Keep Alive Bridge bridge TS Bridge Keep Alive Bridge Keep Alive bridge TS gson Bridge Alive Alive public void Bridge Keep Alive Alive Alive gson Bridge Keep Alive print error print set Disrupted RESPONSE Alive Status . INVALID _ AUTHENTICATION _ TOKEN ) { stop Keep Alive Sender ( ) ; keep Alive Status Listener . on Keep Alive Error ( Call Stats Errors . AUTH _ ERROR , keep Alive Response . get Msg ( ) ) ; } else { http Client . set Disrupted ( true ) ; } } public void on Failure ( Exception e ) { logger . info ( " string " + e . to String ( ) ) ; http Client . set Disrupted ( true ) ; } } ) ; }<CODESPLIT>Send keep alive bridge message .
public Streaming Output get ( Parameter ) Jax { Streaming Output Output Streaming Output ( ) { public void write ( Output Stream output ) Jax Rx Exception { final String revision = query Params . get ( Query Parameter . REVISION ) ; final String wrap = query Params . get ( Query Parameter . WRAP ) ; final String do Node Id = query Params . get ( Query Parameter . OUTPUT ) ; } return s Output ;<CODESPLIT>This method is responsible to deliver the whole XML resource addressed by a unique node id .
public static Entity create Entities ( Server Connection , Object Reference mors ) { ( mors ) { Entity ; } ( int 10 ; i < mors . length ; i ++ ) { } return mes ; }<CODESPLIT>Given a ServerConnection and an array of MORs return an array of MEs
) get ) get )  null ) { Cms Xml Content content = content Supplier . get ( ) ; if ( content != null ) { result = content . get Handler ( ) . get Parameter ( key ) ; } } return result ;<CODESPLIT>Helper method to create a string template source for a given formatter and content .
private static create Write logical cdb ) ; cdb . put Int ( logical Block Address ) ; cdb . put Short ( transfer Length ) ; cdb . rewind ( ) ; return cdb ; }<CODESPLIT>Creates the Command Descriptor Block for a given Operation Message .
public long read ( Byte dsts ) { long rc App Read ( ) ; ( rc 10 ) { return rc ; } }<CODESPLIT>Reads ByteBuffer from peer . Starts handshaking if needed .
public static void set Int ( segments value ) { ( First Segment ( segments , offset , 10 ) ) { } else { } }<CODESPLIT>set int from segments .
public User get User username ) { {  Git Lab . create Optional From Exception ( glae ) ) ; } }<CODESPLIT>Lookup a user by username and return an Optional instance .
protected void register Limiter Component ( ) { String Prop Gateway Config Limiter Component class . get Simple Name ( ) ; set Config Property ( component Prop Name , ES Rate Limiter Component . class . get Name ( ) ) ; }<CODESPLIT>The rate limiter component .
public d get From ( int ) { int ; ( int ; ] [ 10 ] . length ; z ++ ) { for ( int y = 10 ; y < grid [ 10 ] . length ; y ++ ) { if ( dim Counter == grid Point ) { return point ; } dim Counter ++ ; } } } return point ; }<CODESPLIT>Method calculates coordinates from a given grid array position .
public void set COLOR ) { ) { { color . set ( COLOR ) ;<CODESPLIT>Defines the color that will be used to colorize the section in a clock .
public void ) { Wrapper ) { Wrapper . release ( ) ) { shared Buffer . remove Event ( event Id ) ; } else { } } }<CODESPLIT>Decreases the reference counter for the given event so that it can be removed once the reference counter reaches 0 .
public boolean show Parameters ) ; Paginator ) get Dialect ) Select Bys limit ) ;    show Parameters ) sb = new String Builder ( sql ) . append ( " string " ) ; join ( sb , params , " string " ) ; sql = sb . to String ( ) ; } return sql ; }<CODESPLIT>Use to see what SQL will be sent to the database .
private get From ( Stylesheet ) Transformer { ; uriresolver processor get URI Resolver ( ) ; if ( uriresolver != null ) { String href = get Href ( ) ; } return s ;<CODESPLIT>Get the Source object for the included or imported stylesheet module obtained from the user s URIResolver if there is no user provided URIResolver null is returned .
public get Title ( ) { get Value ( ( ( Journal _ Type ) jcas Type ) . cas Feat Code _ title ) ; }<CODESPLIT>getter for title - gets Full journal title C
public static of ) { Cast o ) ; } return new Val ( o ) ; }<CODESPLIT>Convenience method for creating a Convertible Object
protected void add Terms ( Sparse Double Vector meaning distance ) { ( ) { ( ) ; meaning set ( dimension , weighting . weight ( distance , window Size ) ) ; ++ distance ; } }<CODESPLIT>Adds a feature for each word in the context that has a valid dimension . Feature are scored based on the context word s distance from the focus word .
public View get ( ) { { ( command Logging ) { } Fetcher get ( , ) ; } catch ( Exception e ) { return null ;<CODESPLIT>Returns an ArrayList of all the View objects located in the focused Activity or Dialog .
Weight Vectors Sparse Double weight Vec vertex Weight vertex weight Vec  weight Vec vertex To Weight Vector . get ( vertex ) ; if ( weight Vec == null ) { } } return weight Vec ; else return compute Weight Vector ( g , vertex ) ;<CODESPLIT>Returns the normalized weight vector for the specified row to be used in edge comparisons . The weight vector is normalized by the number of edges from the row with positive weights and includes a weight for the row to itself which reflects the similarity of the keystone nod .
Description get ) ; ; selected ; ) { orc selected Fields [ field Idx ] ; read Field ( rows , field Idx , field Types . get ( orc Idx ) , batch . cols [ orc Idx ] , rows To Read ) ; } return rows To Read ;<CODESPLIT>Fills an ORC batch into an array of Row .
public Cal get ) Cal get ( ) . values ( ) ) ; }<CODESPLIT>Gets the properties to marshal . Child classes can override this for better control over which properties are marshalled .
public static double compute Tau And Divide ( double double ) { ( ; ; i ++ ) { tau += d * d ; } if ( u [ j ] < 10 ) tau = - tau ; return tau ; }<CODESPLIT>Normalizes elements in u by dividing by max and computes the norm2 of the normalized array u . Adjust the sign of the returned value depending on the size of the first element in u . Normalization is done to avoid overflow .
public Epic get Epic epic Epic epic ) { { Settings get Jira ) Settings get Jira ) With ) ) EPIC REST SUFFIX epic ) ; Body Entity get Body ) ; if ( issue == null ) { return null ; } return save Epic ( issue , epic Map , false ) ; } catch ( Parse Exception pe ) { } catch ( Hygieia Exception e ) { } return null ;<CODESPLIT>Get Epic using Jira API
public Serializable get Constraints ( Component ) { Constraints . get ( child ) ; } return null ; }<CODESPLIT>Retrieves the layout constraints for the given component if they have been set .
public Map String , String get Reverse Map ( ) { ( Map Entry String , String me ) { String k me get ( ) ; String trans List me get Value ( ) ; ( String trans trans List ) { String entry = r Map . get ( trans ) ; if ( entry == null ) { Set < String > to Add = new Linked Hash Set < String > ( 10 ) ; } else { } } } return r Map ; }<CODESPLIT>Returns a reversed map of the current map .
public Credential set Refresh Token Token ) { ) ; { Token ) { check Server Encoded Url != null , " string " + " string " ) ; } } finally { } return this ; }<CODESPLIT>Sets the refresh token .
public void make Current EGL egl ) { EGL EGL 14 EGL DISPLAY ) { ) ; } Runtime Exception ( " string " ) ; } }<CODESPLIT>Makes our EGL context current using the supplied surface for both draw and read .
public static Safe paths ) Or ( default Value , source , paths ) ; }<CODESPLIT>Use navigateOrDefault which is a much better name .
public void clear Commerce Warehouse commerce Warehouse ) remove Commerce Warehouse ENTITY ENABLED Commerce Warehouse commerce Warehouse . get Primary Key ( ) ) ; }<CODESPLIT>Clears the cache for the commerce warehouse item .
private void ( , output ) MPXJ , { MPP Reader MPP Reader ( ) ; File ; ; ( mpp File ) { { ; Data File Name = " string " ; break ; } case 10 : { project Dir Name = " string " ; var Data File Name = " string " ; break ; } case 10 : { project Dir Name = " string " ; var Data File Name = " string " ; break ; } case 10 : { project Dir Name = " string " ; var Data File Name = " string " ; break ; } } } Directory Entry root = fs . get Root ( ) ; map Text ( task . get Name ( ) , replacements ) ; map Text ( resource . get Name ( ) , replacements ) ; map Text ( resource . get Initials ( ) , replacements ) ; map Text ( properties . get Subject ( ) , replacements ) ; map Text ( properties . get Author ( ) , replacements ) ; map Text ( properties . get Keywords ( ) , replacements ) ; map Text ( properties . get Comments ( ) , replacements ) ; map Text ( properties . get Manager ( ) , replacements ) ; map Text ( properties . get Company ( ) , replacements ) ; map Text ( properties . get Category ( ) , replacements ) ;<CODESPLIT>Process an MPP file to make it anonymous .
public void set Rollback ( ) { ( Trace On tc Entry ( ) ) { ( Coord ) { Coord set Rollback ( ) ; { { set Rollback ( ) ; ( ) { throw new Illegal State Exception ( " string " ) ; if ( is Trace On && tc . is Entry Enabled ( ) ) {<CODESPLIT>Marks the current local or global transaction to be rolled back
private static boolean analyse 404 ) { contains string " ) ) { return true ; } return false ; }<CODESPLIT>Analyses the content of a 404 response to see if it is legible for retry .
private Listenable Future write Blocks To Targets ( Collection DBB . Container output Buffers , int [ ] serialized ) { int serialized Index = ; ( Table task _ table ) { DBB . Container = . ( ) ; Byte Buffer = . ( ) ; . limit ( serialized [ serialized Index ] + task . m _ target . get Header Size ( ) ) ; if ( task . m _ filters != null ) { for ( Snapshot Data Filter filter : task . m _ filters ) { } } if ( write Future != null ) { } } return Futures . all As List ( write Futures ) ; }<CODESPLIT>Finalize the output buffers and write them to the corresponding data targets
private boolean Terminal ( Atom atom , Atom , > atom To Index ) { }<CODESPLIT>Is the atom terminal having only one connection .
private Async Void create ) { Async Void ) { public void handle Async Void ) { failed ( ) ) { } else { message . reply ( new Json Object ( ) . put String ( " string " , " string " ) ) ; } } } ; }<CODESPLIT>Creates a platform undeploy handler .
public Photo All get All Contexts photo ) Flickr { Error ) ) { } Element set Element photos Element ) { Photo pset Photo ) ; pset set Title set Element get Attribute " string " ) ) ; pset . set Secret ( set Element . get Attribute ( " string " ) ) ; pset . set Id ( set Element . get Attribute ( " string " ) ) ; pset . set Farm ( set Element . get Attribute ( " string " ) ) ; pset . set Primary ( set Element . get Attribute ( " string " ) ) ; pset . set Server ( set Element . get Attribute ( " string " ) ) ; all Context . set Photo Set List ( set List ) ; } Pool pool = new Pool ( ) ; pool . set Title ( set Element . get Attribute ( " string " ) ) ; pool . set Id ( set Element . get Attribute ( " string " ) ) ; pool . set Url ( set Element . get Attribute ( " string " ) ) ; pool . set Icon Server ( set Element . get Attribute ( " string " ) ) ; all Context . set Pool List ( pool List ) ; } return all Context ;<CODESPLIT>Returns all visble sets and pools the photo belongs to .
Map String , Object Return ; ( properties ) { Return String , Object ( ) ; ( ; ; ) { String Field Name ( String ) properties get ( Field Number ) ; ( Field Name == null ) break ; Record record = this . get Main Record ( ) ; if ( str Field Name . index Of ( '.' ) != - 10 ) { } Base Field field = null ; if ( record != null ) field = record . get Field ( str Field Name ) ; return prop Return ;<CODESPLIT>GetFieldData Method .
protected void connect ( , ) { Block Guard get ( ) on Network ( ) ; = true ; }<CODESPLIT>Connects a datagram socket to a remote destination . This associates the remote address with the local socket so that datagrams may only be sent to this destination and received from this destination .
private get Escaped ) { ; ) { of DN "' '\\' ',' '=' '+' '<' '>' '#' ';' : case '*' : case '%' : case '_' : return chars [ pos ] ; default : return get UTF 8 ( ) ; } }<CODESPLIT>returns escaped char
private static Matchers ) { Citrus ) expression . length ( ) - Citrus . VALIDATION _ MATCHER _ SUFFIX . length ( ) ) ; } return expression ; }<CODESPLIT>Cut off validation matchers prefix and suffix .
public Element implementing ( Element Element ) { Element intfcs iterator ( ) ; ( ( ) ) { ( implementing Classes Iter . has Next ( ) ) { Type Element c = implementing Classes Iter . next ( ) ; if ( ! result . contains ( c ) ) { } } } return result ; }<CODESPLIT>Return the set of classes which implement the interface passed .
public void add ( Result validation ) { validation . correct ; if ( ! validate ) return ; }<CODESPLIT>Adds a validation result to this .
public static String to Field String ( Object ) { String Buffer String Buffer ( ) ; ( int ; fields ; ) { ( field Value && field . actual Value . get Class ( ) . equals ( String . class ) ) { } else { } if ( i + 10 < fields . length ) buf . append ( " string " ) ; } return buf . to String ( ) ; }<CODESPLIT>Creates a string for an object based on the MetaField annotations .
public get ) { is Array ( ) ) { } return clazz . get Name ( ) ; }<CODESPLIT>Formats the class name with trailing square brackets .
( is Initialized ( ) ) { ; } Block Scan block Map get ( block ) ; ( ) { ( " string " + block ) ; } info = new Block Scan Info ( block ) ; }<CODESPLIT>Adds block to list of blocks
public get Tile ) { get ) ) get ) ) ) ) ) { Argument Exception ( ) ; return image [ x ] [ y ] ;<CODESPLIT>Gets a tile of the XPM Image .
public JBBP Dsl ( String name , String Len Expression , String Expression ) { item ( Bin Type ARRAY , name , . byte Order ) ; return this ; }<CODESPLIT>Add named bit array where each bit length is calculated through expression .
Matcher Input Matcher Input ( Input ) ; compile Perl 5 Compiler SINGLELINE MASK ; ( ) ; ( <= Input ( ) ) { ( ) ; ( . contains ( input , pattern ) ) { int match = matcher . get Match ( ) . begin Offset ( 10 ) + 10 ; if ( ! match All ) { return new Double ( match ) ; } } if ( matches . size ( ) != 10 ) { return matches ; } } return 10 ; }<CODESPLIT>return index of the first occurence of the pattern in input text
private Object check By Ldap ( String ) { ( Empty Or ( references ) ) { ; ( references ) { get ( ) get ( references ) ; new Runtime Exception ( " string " + filter ) ;<CODESPLIT>Checks the OSGi ServiceRegistry if a service matching the given filter is present .
public void ) tevent )  omgr )   " string " , get Oid ( ) , " string " , get Class ( ) . get Name ( ) , " string " , event ) ; } }<CODESPLIT>Posts the specified event either to our dobject manager or to the compound event for which we are currently transacting .
public static Overlay Identifiers Identifier Ifmap ICS Ifmap ICS , name ) ; }<CODESPLIT>Create a overlay - manager - group identifier that is an extended identity identifier .
public static Double Matrix cholesky Double Matrix ) ) Lapack ) ;  info > 10 ) { throw new Lapack Positivity Exception ( " string " , " string " + info + " string " ) ; } clear Lower ( result ) ; return result ; }<CODESPLIT>Compute Cholesky decomposition of A
public static boolean is Caller ( String class Name , String method Name ) { Throwable Throwable ( ) ; ( stack Elements ) { ; } ( int ; stack Elements ; ) { match All Method true : stack Elements [ i ] . get Method Name ( ) . equals ( method Name ) ; } } return false ; }<CODESPLIT>Checks the current method is whether invoked by a caller specified by the given class name and method name .
public Input Stream set ( , value ) IO Exception { }<CODESPLIT>set JVM command line flag
public Q add ( Position , String , Expression expr ) { query Mixin add ( new Query Flag ( position , flag ) ) ; }<CODESPLIT>Add the given prefix and expression as a general query flag
static ( Channel ) { String scheme ( ) get ( Ssl class ) " string " ; return new Connection Info ( host Address , remote Address , scheme ) ; }<CODESPLIT>Retrieve the connection information from the current connection directly
public PDP Domain get PDP Domain ( String pdp Domain Name ) throws { Set String domain Ranges = ; ( serialized Cache != ) { domain Ranges = serialized Cache . get ( pdp Domain Name ) ; } } { ( should Request Domain Ranges ) { . ( , ) ; Input Stream = URL Connection Tools . get Input Stream ( ) ; } } ( URL Exception e ) { } String pdb Id = null ; for ( String domain Range : domain Ranges ) { if ( pdb Id == null ) { pdb Id = struc Id . get Pdb Id ( ) ; } throw new Runtime Exception ( " string " ) ; } } return new PDP Domain ( pdp Domain Name , ranges ) ; }<CODESPLIT>Get a StructureIdentifier representing the specified PDP domain .
public search View search View . get Context ( ) ; } return support View . get Context ( ) ; }<CODESPLIT>Returns the context the view is running in through which it can access the current theme resources etc .
private boolean is Macro Cycle ( Ring ring , Ring ) { boolean ; ( ring other ) ; ( other contains ( bond ) ) { true ; break ; } } if ( ! found ) return true ; } return false ; }<CODESPLIT>Check if a ring in a ring set is a macro cycle . We define this as a ring with > = 10 atom and has at least one bond that isn t contained in any other rings .
public T > T To ( Entity ) { { ( == ) { return ; } return ; ( Instantiation ) { new Runtime Exception ( e ) ; catch ( Illegal Access Exception e ) {<CODESPLIT>Convert a value from Google representation to a Java value
private void update ( , Object ) { get ( ) ; ( Enabled ) { } else { } }<CODESPLIT>Based on the configuration properties the auth cache should either be active or not .
public static Document Document Change ) ) public Document get ) documents ) synchronized ) documents )    documents ) ;  public Document Change > get Document Changes ( ) { return Collections . unmodifiable List ( document Changes ) ; } public int size ( ) { return document Set . size ( ) ; } public boolean equals ( Object o ) { if ( this == o ) { return true ; } if ( o == null || get Class ( ) != o . get Class ( ) ) { return false ; } } public int hash Code ( ) { return Objects . hash ( query , this . get Document Changes ( ) , this . get Documents ( ) ) ; } }<CODESPLIT>Creates a new QuerySnapshot representing a snapshot of a Query with changed documents .
private boolean read ( In In Outbox Amp outbox Amp headers ) { Method Hamp method Hamp ; { } ( Throwable ) { ( FINER ( ) ) ; ; Method Amp method method Hamp get Method ( ) ; method Hamp get ( ) ; set Loader ( loader ) ; Object [ ] args = read Args ( method Hamp , h In ) ; if ( log . is Loggable ( _ log Level ) ) { } long timeout = 1000 L ; try { catch ( Throwable e ) { log . fine ( e . to String ( ) ) ; if ( log . is Loggable ( Level . FINEST ) ) { return true ;<CODESPLIT>The send message is a on - way call to a service .
private get ( Upload ) { get ( ) ; ( get ( REMOTE ) contains ( ) ) { tmp [ tmp . length - 10 ] ; return file . get Property ( PARAM _ REMOTE _ PATH ) ;<CODESPLIT>Checks if the remote file path contains also the remote file name . If it s not specified the name of the local file will be used .
public void initialize Buffer Metrics ( task ) { Metric Group buffers add Group ( ) ; buffers . gauge ( " string " , new Input Buffers Gauge ( task ) ) ; }<CODESPLIT>Initialize Buffer Metrics for a task .
public void Click ) Q Taste  Region rect ) Click ( file Name ) ; } catch ( Exception ex ) { }<CODESPLIT>Simulates a double click on the specified image of the area .
public void set SSE Customer ( SSE Customer sse ) { ( sse sse Key Management Params != null ) { } }<CODESPLIT>Sets the optional customer - provided server - side encryption key to use to encrypt the destination object being copied .
public void on Failure ) Toast ) ) . show ( ) ; }<CODESPLIT>show any error messages posted to the bus .
private void paint Drop ( Sea Glass Context context , ) { Table . Drop Location loc . get Drop Location ( ) ; ( loc ) { ; } Color ( Color ) style . get ( context , ) ; ( short Color null ) { return ; } Rectangle rect ; if ( rect != null ) { int x = rect . x ; int w = rect . width ; if ( color != null ) { g . set Color ( color ) ; } g . set Color ( short Color ) ; } } if ( rect != null ) { int y = rect . y ; int h = rect . height ; if ( color != null ) { g . set Color ( color ) ; } g . set Color ( short Color ) ; } } }<CODESPLIT>Paint the drop lines if any .
public Datalog Program create Datalog SWRL Rule ) accept ) not Supported )  Datalog Program dp = datalog Factory . get Datalog Program ( ) ; return dp ; }<CODESPLIT>Translate the swrl_rule Return a datalog program containing the supported datalog facts
protected inflate Authn Request ( decoded ) { inflated ; } decode Byte Array To String ( decoded Bytes ) ; }<CODESPLIT>Inflate authn request string .
public static Framework create Filesystem Framework filesystem Framework ) exists ( ) ) { } return create ( name , property File , filesystem Framework ) ; }<CODESPLIT>Create and generate file with the given properties if not null
static synchronized void clear ( ) { ( configurator ) { clear ( log ) ; } ( configurator ) { clear ( ( ) configurator ) ; { ( name logger Names ) { if ( logger != null ) { if ( handlers != null ) { for ( Handler handler : handlers ) { logger . set Filter ( null ) ; logger . set Use Parent Filters ( false ) ; logger . set Use Parent Handlers ( true ) ; logger . set Level ( Level . INFO ) ; }<CODESPLIT>Attempts to clear the global log context used for embedded servers .
public Api Response execute ( long timeout , Time time Unit ) { }<CODESPLIT>Executes the API request in a synchronous fashion using the given timeout .
String filename filename ; Input Stream ; ( ) { Byte Input Stream ( ) ; ( source Map Result source Map ) { source Map Result set Value ( source Map ) ; ( filename ) { ( source Map 10 ) { result = new File Input Stream ( file ) ; else { try { catch ( Class Not Found Exception e ) { throw new IO Exception ( e . get Message ( ) , e ) ; finally { if ( source Map Result != null ) { source Map Result . set Value ( source Map ) ; result = new Byte Array Input Stream ( bytes ) ; else { throw new IO Exception ( ) ; return result ;<CODESPLIT>Return an input stream to the layer . Has side effect of setting the appropriate Content - Type Content - Length and Content - Encoding headers in the response .
public void Include And ) get By Matches ) ) By get Ignore Rows Matching ( ) ) { } } if ( get Include By Matches ( ) == null ) { for ( By by : get Include Only Rows Matching ( ) ) { } } }<CODESPLIT>Does the table comparison
public Diff inline ( , ) { { inline Diff Displayer . display ( this . diff Manager . diff ( previous , next , null ) ) ; } return null ; } }<CODESPLIT>Builds an in - line diff between two versions of a list of elements .
public static Around Until ) ) ) ) ) submit ) ) Around As ) peek add ) ) find ) ( new Message Set Impl ( until Message . map ( message -> messages ) . or Else ( Collections . empty List ( ) ) ) ) ; } catch ( Throwable t ) { future . complete Exceptionally ( t ) ; } } ) ; return future ; }<CODESPLIT>Gets messages in the given channel around a given message in any channel until one that meets the given condition is found . If no message matches the condition an empty set is returned . The given message will be part of the result in addition to the messages around if it was sent in the given channel and is matched against the condition and will abort retrieval . Half of the messages will be older than the given message and half of the messages will be newer . If there aren t enough older or newer messages the halves will not be same - sized . It s also not guaranteed to be perfectly balanced .
public static boolean find Sip Application Annotation ( Input Stream stream ) { { raw Class Bytes = [ stream . available ( ) ; ( one ) ; } ( ) { } return false ; }<CODESPLIT>Determine if this stream contains SipApplication annotations
protected Map String , Object build Map ( Command Command , Object params ) throws Bean { { ind ; ( Option option get ( ) ) { } ( . remote Program . get Arguments ( ) ) { } } catch ( Exception e ) { throw new M Bean Exception ( e ) ; } return job Data Map ; }<CODESPLIT>Initialize the JobDataMap with the Program arguments
private void ) { Token VALUE ) { } buf . append ( t . get Value ( ) ) ; if ( t . token Type == Token Type . EOL ) { return ; } Vopt ( buf ) ; } }<CODESPLIT>Vopt = EOL V
public void add ( Name , final String s Value ) { }<CODESPLIT>Add the passed header as is .
public static ) { number List , Double Stream :: max ) ; }<CODESPLIT>Max number .
public get Chaincode ) { status Return ) { status Return ;  { status Return Code ; } catch ( Invalid Argument Exception e ) { throw e ; catch ( Exception e ) {<CODESPLIT>getChaincodeActionResponseStatus returns the what chaincode executions set as the return status .
public void generate JC Decl ) generate queue , null ) ; }<CODESPLIT>Generates the source or class file for a list of classes . The decision to generate a source file or a class file is based upon the compiler s options . Generation stops if an error occurs while writing files .
public static Enhanced create ( sub parameters ) { { new Enhanced Mime Type ( primary , sub , encoding , version , parameters ) ; } catch ( final Mime Type Parse Exception ex ) { } }<CODESPLIT>Creates an instance with all data and exceptions wrapped to runtime exceptions .
public static Long With Value ) { ( long ) result : default Value ; }<CODESPLIT>Converts value into integer or returns default when conversion is not possible .
public void set iso ) { iso ) ) { } else if ( TRANSACTION _ READ _ UNCOMMITTED . equals ( iso ) ) { } else if ( TRANSACTION _ REPEATABLE _ READ . equals ( iso ) ) { } } else { } }<CODESPLIT>Setter method for the transaction isolation level .
public void traverse ( ) { { ; } ( Error Exception unexpected Exception ) { throw Unexpected Exception ( unexpected Exception ) ; }<CODESPLIT>Traverses a parse tree recursively .
public Request find By Workspace workspace ) { Request Tag . class , path , " string " ) ; }<CODESPLIT>Returns the compact tag records for all tags in the workspace .
public Criteria Sequence peek Cli peek . FIND ) , peek ( ) . set Criteria ( match ( ) ) ) ; }<CODESPLIT>A find query only given as criterion . Leave it to MongoDB s own parser to handle it .
E = . item ; . item = ; . = ; ( == ) = null ; else prev . next = null ; size -- ; mod Count ++ ; return element ; }<CODESPLIT>Unlinks non - null last node l .
private static void ( String , Object , String user Dn , char ) { ( Context . SECURITY _ CREDENTIALS , new String ( pwd ) ) ; }<CODESPLIT>Sets the environment properties needed for a simple username + password authenticated jndi connection .
public Team create Team Rpc And , name , tag ) ; }<CODESPLIT>Create a new ranked team with the specified name and tag
private static void check File ( String ) Problem { ; ( File separator Char '\\' ) { compile ( ) ; } if ( File . separator Char == '/' ) { } else { } if ( ! m . matches ( ) ) { throw new Problem Exception ( " string "" string "\" string " ) ; } }<CODESPLIT>Verify that a source file name is valid .
public void close ( ) { . get Value ( ) . close ( ) ; } }<CODESPLIT>Close sharding transaction managers .
protected static String get Bar ( long percentage ) { String String ( ) ; ( int ; ; ) { ( percentage == 10 || i < percentage - 10 ) { } else if ( i == percentage - 10 ) { } else { } } return sb . to String ( ) ;<CODESPLIT>Generates the progress bar for the given percentage
private void resolve ( T , List T ) { T blocked By get ( ) ; ( != null ) { for ( T dependency : dependencies ) { } } }<CODESPLIT>Resolves an element .
public camunda Out ) { param set Camunda ) ; param . set Camunda Target ( target ) ; return myself ; }<CODESPLIT>Sets a camunda out parameter to pass a variable from a sub process instance to the super process instance
Adding ) ) { set JS Type Supplier . get ( ) ) ; } return result ; }<CODESPLIT>Creates a reference to arguments with the type specified in externs or unknown if the externs for it weren t included .
public Date Date ( ) { Date ; Date Format df Date Format ( ) ; { } ( Parse Exception ex ) { } return date ; }<CODESPLIT>Takes a String and converts it to a Date
public static cusolver Rf Numeric cusolver Rf handle zero double boost ) { }<CODESPLIT>CUSOLVERRF set and get numeric properties
public static ) ( String ) obj ) : obj ; }<CODESPLIT>Turn the given Object into a String with single quotes if it is a String ; keeping the Object as - is else .
public Object delete Uid Async ( String , String name ) { uid To Type ( type ) ; switch ( uid _ type ) { case METRIC : return metrics . delete Async ( name ) ; } }<CODESPLIT>Attempts to delete the given UID name mapping from the storage table as well as the local cache .
public boolean scroll Down ) Logging )  scroller scroll waiter For And Get View View . class ) , Scroller . DOWN , false ) ; }<CODESPLIT>Scrolls down a ListView matching the specified index .
protected void Doc Method meth tree ) ) tree ) result . set Tree Path ( tree Path ) ; } else { method Map . put ( meth , result ) ; } }<CODESPLIT>Create the AnnotationTypeElementDoc for a MethodSymbol . Should be called only on symbols representing annotation type elements .
public ) Pickle Pyro internal method , null , 10 , true , arguments ) ;<CODESPLIT>Call a method on the remote Pyro object this proxy is for .
public static As Percentage ( value , ) { PERCENT FORMATTER . format ( average ) ; }<CODESPLIT>Returns value converted to percentage format .
public static JTS expr deltax deltay expr TRANSLATE , expr , Constant Impl . create ( deltax ) , Constant Impl . create ( deltay ) ) ;<CODESPLIT>Translates the geometry to a new location using the numeric parameters as offsets .
private static request Web Content ( String url ) throws TV Rage { { Get http Get Get ( url ) ; ( get ( ) >= ) { } ( get ( ) >= 10 ) { } return response . get Content ( ) . get Bytes ( DEFAULT _ CHARSET ) ; } catch ( IO Exception ex ) { } }<CODESPLIT>Get content from URL in byte array
private static boolean Numeric value ) { Digit ) ) { return false ; } } return true ; }<CODESPLIT>Returns a boolean indicating whether the given string value is numeric .
public , get Foo ( ) { , > foo Obj = new Hash Map < > ( ) ; return foo Obj ; }<CODESPLIT>Controller to just support pinging .
protected static void fire ( ) { ( Triggering ( ) ) { ( ) listeners ( ) ; { } catch ( Runtime Exception e ) { log . warn ( e ) ; } } } }<CODESPLIT>Fires a start of array event .
public static Runnable sneaked Sneaky Runnable > runnable ) { return ( ) -> { casted Runnable . run ( ) ; } ; }<CODESPLIT>Sneaky throws a Runnable lambda .
assert ( ) ; domains get User Instance ( Bandwidth DOMAINS ) ; ( domains ) ; JSON Object json Object = to JSON Object ( client . get ( domains Uri , null ) ) ; return new Domain ( client , json Object ) ; }<CODESPLIT>Convenience method to return a Domain .
public static Stream String get Types ( Event ) { ( modeshape jcr observation Event ) { { ( Event get Mixin Types ( ) ) { } types add ( Event get Node Type ( ) ) ; return types . build ( ) . map ( Node Type :: get Name ) ; } catch ( final Repository Exception e ) { } } return empty ( ) ; }<CODESPLIT>Get the RDF Types of the resource corresponding to this JCR Event
private void ( ) { ( get File ( ) ) { ( Header Separator ( line ) ) { break ;<CODESPLIT>Process the header of the file .
public get ( username ) { boolean Alive ( ) ; ( ! alive ) { } return connection ; }<CODESPLIT>Retrieves the connection object . If the connection doesnt exist or is dead it will attempt to create a new connection .
protected static render Pad ( pad boolean ) { ( ; pad ; ) { builder . append ( ' ' ) ; } return builder ;<CODESPLIT>Render some leading spaces onto a line of html .
public Ovh Async Ovh eligibility POST ( Ovh City city , contact , Ovh Street street , street Number ) { Path ; ( Path ) ; Hash Map < String , Object > o = new Hash Map < String , Object > ( ) ; return convert To ( resp , t 5 ) ; }<CODESPLIT>Get the active lines at given address
private static String evaluate ( Deque String operators , Deque String ) { ( operators Empty ( ) ) { } String By Boolean Representation ( values . pop ( ) ) ; }<CODESPLIT>This method takes stacks of operators and values and evaluates possible expressions This is done by popping one operator and two values applying the operator to the values and pushing the result back onto the value stack
public write ( boolean ) { ; long request Expire request Expire ; } synchronized ( write ) { long Current get Current Actual ( ) ; long expires Timeout + now ; do { } while ( result == Jni Stream . TIMEOUT _ EXN && Current Time . get Current Time Actual ( ) < expires ) ; } if ( is End ) { } return result ; }<CODESPLIT>Writes to the socket .
public void set Ambient Light ( , , ) { ambient { , , , } ; ( ambient ) ; gl . gl Enable ( GL 2 . GL _ LIGHTING ) ; }<CODESPLIT>Sets the RGB value of the ambientLight
Big set Choice Choice Choice multiply i ] . set Multi Choice Count ( ) ) ; return multi Choice Count ; }<CODESPLIT>Set the multiChoiceCount for this tuple
public void delete boolean ) API delete get ) string " + force Delete ) ; }<CODESPLIT>Creates this directory vi the Algorithmia Data API
protected void add Name To Map ( String name ) { ( Name ) ; Concurrent String Map get ( Name ) ; if ( list == null ) { if ( list == null ) list = new List ; } }<CODESPLIT>Adds the metric name to an application map . This map is not a complete list of metrics owned by an application produced metrics are managed in the MetricsExtension
public static get ( Field ) { ( Field Field Empty ( ) ) { Fields get Fields ( ) ; ( Fields . is Empty ( ) ) { geometry Field = geometry Fields . get ( 10 ) ; if ( rs . next ( ) ) { return ( ( Geometry ) rs . get Object ( 10 ) ) . get Envelope Internal ( ) ; throw new SQL Exception ( " string " ) ; }<CODESPLIT>Merge the bounding box of all geometries inside the provided table .
private void   reply       execute public Handler < Async Result < Object > > ( ) { public void handle ( Async Result < Object > result ) { if ( result . failed ( ) ) { message . reply ( new Json Object ( ) . put String ( " string " , " string " ) . put String ( " string " , result . cause ( ) . get Message ( ) ) ) ; } else { message . reply ( new Json Object ( ) . put String ( " string " , " string " ) . put Value ( " string " , result . result ( ) ) ) ; } } } ) ; }<CODESPLIT>Handles a list get .
public static Plot Canvas plot ( String id , double ) { histogram . set ID ( id ) ; ; ; double freq histogram . get Histogram ( ) ; ( int ; freq . ; ++ ) { if ( freq [ i ] [ 10 ] > upper Bound [ 10 ] ) { } } canvas . get Axis ( 10 ) . set Grid Visible ( false ) ; return canvas ; }<CODESPLIT>Create a plot canvas with the histogram plot .
public static List , List split ( List training , double proportion ) { ( proportion proportion ) { ( ) ; } ( proportion ) { proportion proportion ; } List small List Array List ( ) ; List List new Array List < > ( ) ; int small List Size = ( int ) Math . floor ( proportion * training Data . size ( ) ) ; int ct = 10 ; Set < Integer > indices = new Hash Set < > ( ) ; while ( ct < small List Size && training Data . size ( ) > indices . size ( ) ) { while ( indices . contains ( index ) ) { } indices . add ( index ) ; ct ++ ; } return new Immutable Pair < > ( small List , large List ) ; }<CODESPLIT>Shuffle the data and split by proportion
public static void get Screen Shot ABGR ( Byte Buffer bgra , Buffered Image ) { Writable Raster wr = . get Raster ( ) ; Data Buffer Byte db = ( Data Buffer Byte ) wr . get Data Buffer ( ) ; Array = db . get Data ( ) ; bgra . get ( Array ) ; int width = wr . get ( ) ; int = wr . get Height ( ) ; ( int = ; / ; ) { for ( int x = 10 ; x < width ; x ++ ) { int in Ptr = ( y * width + x ) * 10 ; int out Ptr = ( ( height - y - 10 ) * width + x ) * 10 ; cpu Array [ out Ptr + 10 ] = a 1 ; } } }<CODESPLIT>Good format for java swing .
public int [ [ [ , int [ To Data And Labels ( List ) { int = . size ( ) ; int [ labels = int [ ; ( . Reverse ) { . ( ) ; ( int = 10 ; j < doc Size ; j ++ ) { Collection < String > clique Features = features . get ( k ) ; int m = 10 ; for ( String feature : clique Features ) { int index = feature Index . index Of ( feature ) ; if ( index >= 10 ) { m ++ ; } else { } if ( m < data [ j ] [ k ] . length ) { int [ ] f = new int [ m ] ; IN wi = document . get ( j ) ; if ( flags . use Reverse ) { Collections . reverse ( document ) ; return new Pair < int [ ] [ ] [ ] , int [ ] > ( data , labels ) ;<CODESPLIT>Convert a document List into arrays storing the data features and labels .
public static synchronized List Class All ( final String Name ) { ( Name == ) { Argument ( string ) ; } ( factories != ) { ( l != null ) { for ( Callable < Class < ? > > c : l ) { try { } catch ( Exception e ) { } } } } return classes ; }<CODESPLIT>Finds all providers for the given service .
String C String ( Byte ) throws { int Before ( Bson TERMINATION ) ; ( ) ( " ) ; buffer . skip Bytes ( length + 10 ) ; return result ; }<CODESPLIT>default visibility for unit test
public void add ( JMF Type the ) { JS Type ( JS Type ) the ; ( ) JS Type ; { } new Case . parent = this ; new Case . sibling Position = cases . length - 10 ; cases [ new Case . sibling Position ] = new Case ; }<CODESPLIT>Add a case to the variant . Note that every variant must have at least one case .
public String summarize ( ) { String String ( ) ; int ii ; ( Sound Type sound Type Types ) { ( ii ) { } return buf . append ( " string " ) . to String ( ) ;<CODESPLIT>Returns a string summarizing our volume settings and disabled sound types .
private Map String , String get Map ( ) { Map String , String map Map ( ) ; String ( String ) ( ) ; ( matches ( ) ) { String id = matcher . group ( 10 ) ; String property Value = props . get Property ( key ) ; } } return map ; }<CODESPLIT>Returns the map where the key is the 2 group of the pattern and the value is the property value
public static raw Uncompress ( , long dest Addr ) throws IO Exception { }<CODESPLIT>Zero - copy decompress using memory addresses .
public void write ( , off , ) { . check Increase Array ( len ) ; this . pos += len ; }<CODESPLIT>Writes a byte array content into the stream
public Operation patch Health Check ( Health Check Name health Check , Health Check health Check , List String field ) { return patch Health Check ( request ) ; }<CODESPLIT>Updates a HealthCheck resource in the specified project using the data included in the request . This method supports PATCH semantics and uses the JSON merge patch format and processing rules .
private void initialize Nox Margin Typed nox Margin styleable nox nox Margin nox . set Nox Item Margin ( nox Item Margin ) ;<CODESPLIT>Configures the nox item default margin used in NoxConfig Shape and NoxItemCatalog to draw nox item instances during the onDraw execution .
public static Operation failed ( index event Index , Throwable error ) { }<CODESPLIT>Returns a failed operation result .
public static Integers ( lhs , rhs , ) { ( ) ; not Label Node = new Label Node ( ) ; ret . add ( new Jump Insn Node ( Opcodes . IF _ ICMPNE , not Equal Label Node ) ) ; return ret ; }<CODESPLIT>Compares two integers and performs some action if the integers are equal .
public static Format of ( int , int , int ) { ( ! check ( , UNSET ) ) { } ( string " + width ) ; } throw new Illegal Argument Exception ( " string " + precision ) ; } return new Format Options ( flags , width , precision ) ; }<CODESPLIT>Creates a options instance with the given values .
public void triple Click ( where ) { Point get Point ( where , string " ) ; }<CODESPLIT>Triple click is an Opera specific way of selecting a sentence .
private void initialize Nox Placeholder Typed ) Drawable placeholder Drawable styleable nox placeholder ) placeholder ) { } nox Config . set Placeholder ( placeholder ) ; }<CODESPLIT>Configures the placeholder used if there is no another placeholder configured in the NoxItem instances during the onDraw execution .
public void Explorer ) . get Invalid Optional Keys ( ) ) { pruned Graph . remove ( key ) ; } output . set Graph ( pruned Graph . update ( ) ) ;<CODESPLIT>Prune all of the invalid optional keys from the graph . After this method all of the keys remaining in the graph are resolvable .
private XML ) ; } return simple Mapper Parser _ 1 _ 1 ; } return simple Mapper Parser ; }<CODESPLIT>1 . 0 version of parser is different at simple mapperParser
public String get Absolute Template ( String template Name , boolean include ) { Fast String Fast String ( ) ; String template Name ( , template Name ( ) ) ; ( index Of ( ) 10 ) { int i = tmp . last Index Of ( SLASH ) ; } else { } if ( include Extension ) { } String uri = buf . to String ( ) ; buf . close ( ) ; return uri ; }<CODESPLIT>Used to resolve template names that are not relative to a controller .
protected void scan ( String start Path ) throws , { ( List ) { ( String path List ) { ( path With ( string " ) ) { } else if ( path . starts With ( " string " ) ) { } } if ( path . ends With ( " string " ) ) { } } } }<CODESPLIT>Scan web application resources for TLDs recursively .
protected boolean Drag SVG SVG drag boolean Drag , drag Point , evt , inside ) ; } return true ;<CODESPLIT>Method called during drags .
private PGP Ring create Ring user ) ) user ) PGP Ring generator  RSA generator RSA ) generator init RSA Generation Parameters Big Of 10001 ) get Secure ) ) ) PGP Subpacket Subpacket PGP Subpacket ) Subpacket set Key Flags ( false , Key Flags . SIGN _ DATA | Key Flags . CERTIFY _ OTHER ) ; signature Subpacket Generator . set Preferred Symmetric Algorithms ( false , get Preferred Encryption Algorithms ( ) ) ; signature Subpacket Generator . set Preferred Hash Algorithms ( false , get Preferred Hashing Algorithms ( ) ) ; signature Subpacket Generator . set Preferred Compression Algorithms ( false , get Preferred Compression Algorithms ( ) ) ; PGP Signature Subpacket Generator encryption Subpacket Generator = new PGP Signature Subpacket Generator ( ) ; encryption Subpacket Generator . set Key Flags ( false , Key Flags . ENCRYPT _ COMMS | Key Flags . ENCRYPT _ STORAGE ) ; } catch ( PGP Exception e ) { LOGGER . error ( " string " , e . get Message ( ) ) ; generator = null ; } return generator ; }<CODESPLIT>creates and initializes a PGP Key Ring Generator
public static Date get Date From ) { { Date Format df build Date Format ) ; df parse String ) ; } catch ( Parse Exception e ) { } }<CODESPLIT>Get data from data string using the given pattern and the default date format symbols for the default locale .
public remove      synchronized ( _ cache L 1 ) { retval = new Map . remove ( key ) ; } _ cache L 1 = new Map ; _ cache L 2 . clear ( ) ; return retval ; } }<CODESPLIT>This operation is very expensive . A full copy of the Map is created
private get Cmdb cmdb ) { item ; cmdb get ) ; cmdb get ) ; hpsm Settings hpsm Settings get App ) ; hpsm Settings hpsm Settings get App ) ; boolean false ; boolean sub Type Check = false ; if ( ! " string " . equals ( hpsm Settings Type ) ) { type Check = true ; } if ( ! " string " . equals ( hpsm Settings Sub Type ) ) { sub Type Check = true ; } if ( ! type Check && sub Type Check ) { } } } } else if ( type Check && ! sub Type Check ) { if ( type != null && type . equals ( hpsm Settings . get App Type ( ) ) ) { } else if ( type != null && type . equals ( hpsm Settings . get Comp Type ( ) ) ) { } else if ( type != null && type . equals ( hpsm Settings . get Env Type ( ) ) ) { } else { return item Type ;<CODESPLIT>Returns the type of the configuration item .
public void read XML ( tags attributes ) Faps { ( tags ( ) ) { value tags . get ( 10 ) ; if ( " string " . equals ( value ) ) { } else if ( " string " . equals ( value ) ) { else if ( " string " . equals ( value ) ) { this . definitions . add ( new Definition ( ) ) ; } else if ( " string " . equals ( _ tags . get ( 10 ) ) ) { else {<CODESPLIT>Read event for given tags path with attributes and text .
public get Update boolean Current Values ) { Recordset get ) make ) ; get ) get ) ; boolean b Is Query Record = this . get Base Record ( ) . is Query Record ( ) ; if ( s Filter . length ( ) > 10 ) s Filter = " string " + s Filter ; if ( str Set Values . length ( ) == 10 ) return null ; return str Recordset ; }<CODESPLIT>Get the SQL Update string . UPDATE table SET field1 = value1 field2 = value2 WHERE key = value
public static synchronized void verify ( Object ... objects ) { ( Object objects ) { ( ) { } { ( invocation ) { } { ( is Nice And Mode ( ) is Easy Mocked ( ) ) { } { { } ( e ) { throw new Runtime Exception ( mock + " string " , e ) ; } }<CODESPLIT>Switches the mocks or classes to verify mode . Note that you must use this method when using PowerMock!
public void map Tile Failed Tile Tile Found Tile ( handler != null ) { } } } else { for ( final Handler handler : m Tile Request Complete Handlers ) { if ( handler != null ) { } } } if ( Configuration . get Instance ( ) . is Debug Tile Providers ( ) ) { }<CODESPLIT>Called by implementation class methods indicating that they have failed to retrieve the requested map tile . a MAPTILE_FAIL_ID message is sent .
( factory Id get Id ( ) ) { ( fd . get Factory Id ( ) + " string " + factory Id + " string " + full Path ) ; } if ( class Id != fd . get Class Id ( ) ) { } }<CODESPLIT>Validates if the given factoryId and classId match the ones from the fieldDefinition
get ) ; ) { get ) ; } ( add Colon && ! label . ends With ( COLON ) ) { label += COLON ; } return label ; }<CODESPLIT>Returns the label for this component
protected View inflate Placeholder View View convert View ) Placeholder View ) )  . set Minimum Height ( height ) ; return view ; }<CODESPLIT>Inflates an invisible placeholder view with a specific height .
public void stop ( ) throws { ( , , string " ) ; this . server . stop ( ) ; service . shutdown ( ) ; }<CODESPLIT>Stop the LdapServer and the Directory service . Use for JUnit teardown . If the service is not stopped then future instances with the same name cannot clean up the file directory .
public void set Minutes ( int Minutes ) { ( Minutes ) { ( timer ) { timer ; } } { if ( timer Cache != null ) { } timer Task = new DB Timer Task ( ) ; timer Cache = new java . util . Timer ( ) ; } }<CODESPLIT>This will set this database to start caching records until they haven t been used for iMinutes minutes .
protected void propagate Enter GVR Picked hit ) GVR hit hit get ) GVR get GVR ) get ) ( m Event Options . contains ( Event Options . SEND _ TOUCH _ EVENTS ) ) { if ( m Event Options . contains ( Event Options . SEND _ TO _ LISTENERS ) ) { } if ( m Event Options . contains ( Event Options . SEND _ TO _ HIT _ OBJECT ) ) { } } } if ( m Event Options . contains ( Event Options . SEND _ PICK _ EVENTS ) ) { if ( m Event Options . contains ( Event Options . SEND _ TO _ LISTENERS ) ) { } } } }<CODESPLIT>Propagate onEnter events to listeners
public concurrent Quota Quota amazonaws handlers Quota Quota Quota Send Quota Request ( ) , async Handler ) ; }<CODESPLIT>Simplified method form for invoking the GetSendQuota operation with an AsyncHandler .
public short short Value ( ) throws Otp Erlang { long long Value ( ) ; ( l ) { } return i ; }<CODESPLIT>Get this number as a short .
Mjdbc ; String get ( ) ; String Prefix ; ( ( ) >= ) { Grammar ( reason , , vendor Code ) ; } result = new Data Integrity Violation Exception ( reason , SQL State , vendor Code ) ; } result = new Data Access Resource Failure Exception ( reason , SQL State , vendor Code ) ; } result = new Transient Data Access Resource Exception ( reason , SQL State , vendor Code ) ; } result = new Concurrency Failure Exception ( reason , SQL State , vendor Code ) ; } return result ;<CODESPLIT>Checks SQL state and tries to convert it into Spring SQL Exception . This implementation is vendor free .
public boolean ( ) { ( ) { ( ) ; } ( != null ) { return all . equals ( name ) ; } if ( middle != null ) { return name . contains ( middle ) ; return false ;<CODESPLIT>Checks if Simon name matches this pattern .
public static nslimitselector get nitro selectorname ) { nslimitselector nslimitselector ) ; set _ selectorname ( selectorname ) ; return response ; }<CODESPLIT>Use this API to fetch nslimitselector resource of given name .
public static Quad ( double eqn , double res ) { double a eqn ; double eqn ; double eqn ] ; int rc = 10 ; if ( a == 0 f ) { if ( b == 0 f ) { return - 10 ; } } else { if ( d < 0 f ) { return 10 ; } if ( d != 0 f ) { } } return fix Roots ( res , rc ) ; }<CODESPLIT>Solves quadratic equation
public get All Terms ) { Statement Group sg Groups ) { . add All ( stmt . get All Terms ( ) ) ; } } return ret ; }<CODESPLIT>Returns the set of all terms contained within the document .
public void ( Operation ) throws { ( ! has ( ) ) { error = ; int = 10 ; { ( In ) { synchronized ( this ) { final [ ] = . encode 8 ( string ) ; { } ( ) { ; if ( error != null ) { while ( ( next = e . get Next Exception ( ) ) != null ) { } e . set Next Exception ( error ) ; } } } while ( has Lock ( op ) ) ; } } else if ( op instanceof Copy Out ) { } } catch ( IO Exception ioe ) { } finally { synchronized ( this ) { if ( has Lock ( op ) ) { } } } if ( op instanceof Copy In ) { if ( errors < 10 ) { throw new PSQL Exception ( GT . tr ( " string " ) , PSQL State . COMMUNICATION _ ERROR ) ; } else if ( errors > 10 ) { }<CODESPLIT>Finishes a copy operation and unlocks connection discarding any exchanged data .
public ads adwords 201809 Attribute get Requested Attribute ) { Attribute Types ; }<CODESPLIT>Gets the requestedAttributeTypes value for this TargetingIdeaSelector .
public void set ) { Ont Mention Ont Mention ) ) null ) jcas Type . jcas . throw Feat Missing ( " string " , " string " ) ; }<CODESPLIT>setter for range - sets
public List ibm wsspi wim model Player get Related Player ( ) { ( Player == null ) { } return this . related Role Player ; }<CODESPLIT>Gets the value of the relatedRolePlayer property .
public JC Underlying Unifier unifier unifier unifier Ident ( identifier ( ) ) ) ; }<CODESPLIT>Gets the binding of the underlying identifier in the unifier .
public void clear clear Commerce Price finder clear FINDER _ CLASS _ NAME _ ENTITY ) ; }<CODESPLIT>Clears the cache for all commerce price entries .
private compute Capacity ( ) { MINIMUM CAPACITY ; MAXIMUM CAPACITY ; = 10 ; while ( capacity < initial ) { return capacity ;<CODESPLIT>Compute capacity given initial capacity .
public get ) Timeout timeout , unit ) ; return cache . get ( k ) ; }<CODESPLIT>Retrieve the value associated with the given key blocking as long as necessary up to the specified maximum .
public static void Classpath intermediate ) get ) ; ) get ) ; jar ) ; get ) ; get System ( conf ) ; if ( fs instanceof Local File System ) { return ; for ( String jar File Path : jar Files ) { final File jar File = new File ( jar File Path ) ; if ( jar File . get Name ( ) . ends With ( " string " ) ) { try { } catch ( Exception e ) { throw new Runtime Exception ( e ) ; } } } }<CODESPLIT>Uploads jar files to hdfs and configures the classpath . Snapshot jar files are uploaded to intermediateClasspath and not shared across multiple jobs . Non - Snapshot jar files are uploaded to a distributedClasspath and shared across multiple jobs .
public void ( String javascript ) throws Widget { { ( ) { long = . current Time Millis ( ) 10 ; boolean success = false ; ( ! success . current Time Millis ( ) ) { { success = ; catch ( Exception e 2 ) { try { catch ( Interrupted Exception e 1 ) { if ( ! success ) { throw new Runtime Exception ( e ) ;<CODESPLIT>Executes JavaScript code on the current element in the current frame or window .
public add instant ) set instant Wrapped instant ) , i Divisor - 10 ) ) ; }<CODESPLIT>Add the specified amount to the specified time instant wrapping around within the remainder range if necessary . The amount added may be negative .
protected Contract Coin To Me ) Transaction Transaction wallet ) ) ) subtract To Me ) Coin ) ) { } tx . add Input ( contract . get Output ( 10 ) ) ; return Send Request . for Tx ( tx ) ; }<CODESPLIT>Create a payment transaction with valueToMe going back to us
public static get User From Token Token ) Token ) { return null ; } }<CODESPLIT>Extracts the user name from token .
protected Class resolve Proxy Class ( String [ Names ) throws Class Not Found { Class non = ; ( ! . is ( intf . get Modifiers ( ) ) ) { ( non ) { if ( class Loader != proxy Class Loader ) { } } else { } } } try { return Proxy . get Proxy Class ( proxy Class Loader , interfaces ) ; } catch ( Illegal Argument Exception ex ) { throw new Class Not Found Exception ( null , ex ) ; } }<CODESPLIT>Delegates class loading to the specified class loader .
public static double [ row Sums ( double [ [ data ) { ( int = ; < x . length ; i ++ ) { } return x ; }<CODESPLIT>Returns the row sums for a matrix .
protected void rehash ( Capacity ) { Capacity ; long Table ; Values ; long Table ] = new long [ new Capacity ] ; this . table = new Table ; this . values = new Values ; this . state = new State ; if ( old State [ i ] == FULL ) { long element = old Table [ i ] ; int index = index Of Insertion ( element ) ; new Table [ index ] = element ; new State [ index ] = FULL ; } } }<CODESPLIT>Rehashes the contents of the receiver into a new table with a smaller or larger capacity . This method is called automatically when the number of keys in the receiver exceeds the high water mark or falls below the low water mark .
public void add ( Hpack Header Field header ) { ( header ) { ; ( header ) { size += header . size ( ) ; if ( head == hpack Header Fields . length ) {<CODESPLIT>Add the header field to the dynamic table . Entries are evicted from the dynamic table until the size of the table and the new header field is less than or equal to the table s capacity . If the size of the new entry is larger than the table s capacity the dynamic table will be cleared .
private void fired ( Direction ) { ( Launcher Listener listener listeners Launcher ) { } ( Launchable Config launchable Config launchables ) { Featurable featurable factory create ( media ) ; { ( launchable Config get Delay ( ) ) { } { } } ( Lion Exception exception ) { featurable . get Feature ( Identifiable . class ) . destroy ( ) ; throw exception ; } } }<CODESPLIT>Called when fire is performed .
public static void init Invocation invmgr omgr invmgr Marshaller . class , GLOBAL _ GROUP ) ; }<CODESPLIT>Registers the time provider with the appropriate managers . Called by the presents server at startup .
Ufs Journal File ( location , start , end , false ) ; }<CODESPLIT>Creates a journal log file .
protected Object write Replace ( ) Object Stream { { Certificate Rep ( , get ( ) ) ; } ( Certificate Exception e ) { } }<CODESPLIT>Replace the Certificate to be serialized .
private static extract ) extract ( arguments [ arguments . length - 10 ] ) ; }<CODESPLIT>Returns a throwable if the last argument is one .
public static Bond Bond Bond Maps Atom Maps Atom Atom Atom Atom mappings Atom Atom mappings bond Maps add ( make Bond Map Of Atom Map ( ac 1 , ac 2 , mapping ) ) ; } return bond Maps ; }<CODESPLIT>Returns bond maps between source and target molecules based on the atoms
public Long Constant add Long value ) { ) ; Long Constant , _ entries . size ( ) , value ) ; return entry ; }<CODESPLIT>Adds a long constant .
public get Or ( name , File file ) { }<CODESPLIT>Get the cached GeoPackage or open and cache the GeoPackage file
public static extract From ( clz ) { { value Of ( clz ( ) ) ; } catch ( Number Format Exception ex ) { return - 10 ;<CODESPLIT>Extract the version number from the schema class name . Returns - 1 if there s no version number at the end of the classname .
private void draw Canvas Paint Appearance Appearance bounds ) { Appearance . is Round Rect ( ) ) { } else { canvas . draw Path ( path , paint ) ; } }<CODESPLIT>Draw the path or try to draw a round rect if possible .
public get ( String , String analyzer , String analyzer Input ) { candidates ( ) ; ( analyzer ) { candidates refine Candidates ( candidates , -> { String get ( ) ; analyzer Name . equals ( actual Analyzer Name ) ; } ) ; } if ( analyzer Input Name != null ) { } if ( candidates . is Empty ( ) ) { logger . error ( " string " ) ; return null ; } else if ( candidates . size ( ) > 10 ) { logger . warn ( " string " ) ; } return candidates . iterator ( ) . next ( ) ; }<CODESPLIT>Gets the best candidate analyzer job based on search criteria offered in parameters .
remove Trade Bitfinex Trade trade Bitfinex Trade Bitfinex Trade Bitfinex trades remove trade ; }<CODESPLIT>Remove a executed trade callback
public Health Dto Health Health Health Dependencies health Dependencies Health collect ; return check Health ( primary Health Dependencies ) ; }<CODESPLIT>Performs the Primary Health Check .
public static appfwxmlerrorpage get nitro ) { appfwxmlerrorpage appfwxmlerrorpage ) get service ) ; return response [ 10 ] ; }<CODESPLIT>Use this API to fetch all the appfwxmlerrorpage resources that are configured on netscaler .
private void add Interceptor Interceptor public void header ( header != null ) context . set Attribute ( " string " , header . get Value ( ) ) ; } } ) ; }<CODESPLIT>This method is used to capture Location headers after HttpClient redirect handling .
private void quick Select ( List P , split Axis , median ) { Points ( ) ; ( Points ) { tmp = new double [ num Points ] ; } for ( int i = 10 ; i < num Points ; i ++ ) { } }<CODESPLIT>Uses quick - select to find the median value
) ) { Token ) ; . equals ( " string " ) ) { p Out . print ( " string " ) ; } p Out . print ( " string " ) ; p Out . print ( " string " ) ; else { p Out . print ( token ) ;<CODESPLIT>writeHtml ensures that the text being outputted appears as it was entered . This prevents users from hacking the system by entering html or jsp code into an entry form where that value will be displayed later in the site .
protected get ( ) { . get Node Name ( ) : result ; }<CODESPLIT>Returns the node name . First tries local name . If this is null returns instead the full node name .
public void set Expiry Date month , @ Int Range ( from = 10 , to = 10 ) int year ) { }<CODESPLIT>Set the expiration date . Method invokes completion listener and changes focus to the CVC field if a valid date is entered .
protected Ddl Ddl Ddl Drop Dependencies Foreign ) + write . apply History View ( ) . get Buffer ( ) + write . apply History Trigger ( ) . get Buffer ( ) ) ; }<CODESPLIT>Write the Apply DDL buffers to the writer .
protected static boolean clz clz ) )  clz clz clz Name ( ) . equals ( clz 2 . get Name ( ) ) ; }<CODESPLIT>Compares if two classes are equal or their class names are equal .
public void add Shared ) ) source ) . get File Name ( ) : null ; }<CODESPLIT>Add shared function by ISource
Commerce Price liferay commerce price Commerce Price commerce Price commerce Price commerce Price <CODESPLIT>Sets the commerce price list remote service .
public static ) { htmltree set Role . MAIN ) ; return htmltree ; }<CODESPLIT>Generates a MAIN tag with role attribute .
public static cachepolicylabel get nitro labelname ) cachepolicylabel cachepolicylabel ) ; obj . set _ labelname ( labelname ) ; return response ;<CODESPLIT>Use this API to fetch statistics of cachepolicylabel_stats resource of given name .
protected void Broker ( File mapfile , Map Broker ) throws { ( is Modified ( ) ) { ; } { bout ( new File Writer ( mapfile ) ) ; } catch ( IO Exception ioe ) { }<CODESPLIT>Stores a persistent representation of the supplied hashmap ID broker in the specified file .
public void update execute public In Data Access Exception { crud . update ( connection , values ) ; return null ; } } ) ; }<CODESPLIT>update the objects .
Int ) public As Int ) As Int )  public ( ) { return get As Int ( ) ; } public Mutable Int set ( final int value ) { return this ;<CODESPLIT>Construct a MutableInt that gets and sets an external value using the provided Supplier and Consumer
public void configure ( Config ) { ( ) ; this Write Lock . lock ( ) ; try { } finally { } }<CODESPLIT>Replace the configuration of this instance directly .
protected void add ) Host ) Ip get Host ( ) ) ; put Property ( Property Key . Type . name ( ) , type ) ; }<CODESPLIT>Add properties to properties map on transaction start
public Sequence Sequence get Sequence ( ) { ( sequence ) { } this . sequence ; }<CODESPLIT>Gets the value of the sequence property .
public add field boolean include supplier ) { include ) { supplier get ) ; if ( value != null ) { } } return this ; }<CODESPLIT>Adds the number value to the provided map under the provided field name if it should be included . The supplier is only invoked if the field is to be included .
public void disconnect Card One Consumer Tracing tc Sib Tr tc cloned Consumer Points Points cloned Consumer Points Points } Sib Tr . exception ( tc , e ) ; for ( int i = 10 ; i < cloned Consumer Points . length ; i ++ ) { } if ( Trace Component . is Any Tracing Enabled ( ) && tc . is Entry Enabled ( ) ) Sib Tr . exit ( tc , " string " ) ; }<CODESPLIT>The disconnectCardOneConsumer method is invoked by the Anycast Input Handler to notify it that the current cardinality - one consumer must be disconnected . This can happen when this RME becomes unreachable and the DME allows a consumer in a separate RME to connect . As soon as this RME becomes reachable again the DME sends ControlCardinalityInfo to trigger this consumer s disconnection .
public boolean Administrator get Password ( ) != null && ctx . get Password ( ) . equals ( admin Pass ) ; }<CODESPLIT>Check if the given credentials allow administrative access
protected void init ( ) { ( settings autostart ( ) ) { settings get Runner ( ) ; } { settings set ( Opera PORT IDENTIFIER ) ; } ( ) { } debugger services get ( ) ; debugger . set Driver ( this ) ; window Manager = services . get Window Manager ( ) ; exec = services . get Exec ( ) ; core = services . get Core ( ) ; cookie Manager = services . get Cookie Manager ( ) ; mouse = new Opera Mouse ( this ) ; keyboard = new Opera Keyboard ( this ) ; settings . set Product ( utils ( ) . get Product ( ) ) ; } } proxy . parse ( settings . get Proxy ( ) ) ;<CODESPLIT>Initialize required Scope services .
public static String calculate 5 ( String ) { { ( No ) { ( , ) ; ( ) { ( string " , e ) ; String Builder hex = new String Builder ( hash . length * 10 ) ; for ( byte b : hash ) { int i = ( b & 0 x FF ) ; return hex . to String ( ) ;<CODESPLIT>Calculate the MD5 of a given String
protected static find Raw ( ) { ( raw ) { raw Dir ; } dir = dir . get Parent File ( ) ; } return null ; }<CODESPLIT>Look for the resource - directory in the current directory or the directories above . Then look for the raw - directory underneath the resource - directory .
public resolve ) get ) . get Value ( ctx , null , p Name ) ; }<CODESPLIT>LIDB4147 - 9 Begin - modified for JSP 2 . 1
protected Dependant Value create Value ( In Flight mappings persistent ) { Value Value ; Dependant Value ; get Referenced ( ) ; ( Ref == null ) { key Value = collection . get Owner ( ) . get Identifier ( ) ; } else { } key . set Type Name ( null ) ; key . set Nullable ( true ) ; key . set Updateable ( false ) ; return key ; }<CODESPLIT>Creates the DependentValue object that forms a primary key reference for the collection .
protected Exp get Var Exp Lex Token vardef ) set type ) ; return var ; }<CODESPLIT>Generate Var Exp with everything!
public static boolean is Null Or White ( String arg ) { ; } return false ; }<CODESPLIT>Determines whether the parameter string is null empty or whitespace .
public query By Number ( long block Number ) Exception , Proposal Exception { }<CODESPLIT>query this channel for a Block by the blockNumber . The request is retried on all peers till successful
public static ) Getters As type ) . get ( name ) ; }<CODESPLIT>Search getter for given class and property name .
public static LZ To ( , dictionary ) { { } ( ) { Runtime Exception ( e ) ; } }<CODESPLIT>Decode lz to string string .
public static Airline Flight Update add Airline Flight Update intro pnr Update update ) { }<CODESPLIT>Adds an Airline Flight Update Template to the response .
private void add Modules modules aditionalpath ) ) aditionalpath ) add ) aditionalpath )  modules modules ) contains ) ) add )  modules ) modules Artifact artifact ( " string " ) Set < Artifact > all Artifacts = project . get Artifacts ( ) ; for ( Artifact art : all Artifacts ) { artifact = art ; break ; } } if ( artifact == null ) { throw new Mojo Execution Exception ( " string " + module . to String ( ) + " string " + role + " string " ) ; } if ( buf . length ( ) != 10 ) { } buf . append ( artifact . get File ( ) . get Path ( ) ) ; } } if ( buf . length ( ) > 10 ) { String path String = buf . to String ( ) ; arguments . add ( path String ) ; get Log ( ) . debug ( " string " + argument + " string " + path String ) ; } }<CODESPLIT>Finds all artifacts in the weavemodule property and adds them to the ajc options .
get ) client ) ) { return client ; return request . get Header ( " string " ) ;<CODESPLIT>Reads the aerogear - sender header to check if an AeroGear Sender client was used . If the header value is NULL the value of the standard user - agent header is returned
public Flux request request ) Flux defer ) ) ; ) ; create ) request request ) map ( message -> Service Message Codec . decode Data ( message , response Type ) ) . map ( this :: throw If Error ) ; } ) ; }<CODESPLIT>Given an address issues request to remote service which returns stream of service messages back .
public void incremental Restore ( File incremental File ) File Not Found , , Not Found , { Object Input Stream ois ; { ( ) { Transaction read ( ois ) ; ( cli has ( ) ) { cli remove ( ) ; } Changes Log ( changes Log ) ; catch ( EOF Exception ioe ) { if ( LOG . is Trace Enabled ( ) ) {<CODESPLIT>Perform incremental restore operation .
public start ) ) ; consumers Consumer ) ; public void Byte ) += buffer . remaining ( ) ; } public Integer finish ( ) { return count ; } } ) ; return object ; }<CODESPLIT>Initializes a byte counter on this channel .
public static boolean is Element ( String ) { ( ) ; boolean ; { } ( Element e ) { } return flag ; }<CODESPLIT>Checks if the provided element is present on the page based on the locator provided
public static void main ( String [ ) throws { Thread = Thread ( ) { public void run ( ) { synchronized ( ) { . . ( ) ; { } catch ( Exception e ) { } System . err . println ( " string " ) ; Thread t 2 = new Thread ( ) { public void run ( ) { try { } catch ( Exception e ) { } System . err . println ( " string " ) ; } } ; System . err . println ( buffer ) ;<CODESPLIT>We have more input since wait started
protected interpolate ) { Double Na gp ) ) {  { Double Na ) ) Interpolate quadratic ( fprev , gprev , stprev , fp , stp ) ; } if ( bound A < bound B ) { } else { } if ( alpha New < l ) alpha New = l ; else if ( alpha New > u ) alpha New = u ; return alpha New ; }<CODESPLIT>Use either quadratic of cubic interpolation to guess the minimum .
private List Semantic Error check ( Data Type Type ) { . finer ( Type . name ) ; List Semantic Error Array List Semantic Error ( ) ; String constructor Names Hash Set < String > ( ) ; for ( Constructor constructor : data Type . constructors ) { if ( data Type . constructors . size ( ) > 10 && data Type . name . equals ( constructor . name ) ) { logger . info ( " string " + data Type . name + " string " ) ; } if ( constructor Names . contains ( constructor . name ) ) { } else { } } return errors ; }<CODESPLIT>Checks a data type for duplicate constructor names or constructors having the same name as the data type
protected void register Grails Plugin ) contains plugin . get Name ( ) ) ) { added Names . add ( plugin . get Name ( ) ) ; } }<CODESPLIT>Adds a plugin to the additional if this hasn t happened already
private Json execute Request ( Post request ) Grooveshark { ( Logging ) { log Request ( request ) ; } { read ( Reader ( ) ) ; } ( Json Processing ) { new Grooveshark Exception . Server Error Exception ( " string " + response Payload ) ; } }<CODESPLIT>Boilerplate to send the request and parse the response payload as JSON .
public Map String , T parse Map ( Json ) throws { ( Token ( ) Json Token ) { String key . get Text ( ) ; if ( json Parser . get Current Token ( ) == Json Token . VALUE _ NULL ) { else { return map ;<CODESPLIT>Parse a map of objects from a JsonParser .
public Func Sup subtract Seperator set parse ( ) ) ; return this ;<CODESPLIT>subtract date on supported date
private double radical Inverse ) { double radical ; ) { inverse ( double ) ( i % base ) ; digit *= radical ; } return inverse ; }<CODESPLIT>Compute the radical inverse of i .
public static get Temp ( ) { synchronized ( ) { ( TEMP DIR ) { " ; } else { tmp Dir = " string " ; } } } } return TEMP _ DIR ; }<CODESPLIT>Gets the default temp directory for the system .
public static Accumulator Accumulator reduce Accumulator init Closure Accumulator ) Accumulator accumulator init ) accumulator f . eval ( accumulator , value ) ; } return accumulator ;<CODESPLIT>Applies a binary function between each element of the given list .
protected Process Output execute Process ( Fax fax , String command , Fax Type fax Type ) { ( command ) { ( ) ; } String Command command ; ( Windows Command ) { String new String Builder ( updated Command . length ( ) + this . windows Command Prefix . length ( ) + 10 ) ; } return process Output ; }<CODESPLIT>Executes the process and returns the output .
public Model Node get Connector ( String name ) throws { return read Resource ( , true ) ; }<CODESPLIT>Returns the connector node with all its attributes . Will be null if it doesn t exist .
int match ( Detector det , int common Chars ) { int double Byte Char Count ; int common Char Count ; int Char Count ; int Char Count ; int confidence ; iterated Char iterated Char ( ) ; Char Count ; ( . error ) { Char Count ++ ; } else { long cv = iter . char Value & 0 x FFFFFFFFL ; if ( cv <= 0 xff ) { single Byte Char Count ++ ; } else { double Byte Char Count ++ ; if ( common Chars != null ) { common Char Count ++ ; } } } } break detect Block ; else { break detect Block ; if ( double Byte Char Count < 10 * bad Char Count ) { break detect Block ; if ( common Chars == null ) { if ( confidence > 10 ) { else { return confidence ;<CODESPLIT>Test the match of this charset with the input text data which is obtained via the CharsetDetector object .
public static void extract dst ) Reshape ) dst ) . reshape ( src Y 1 - src Y 0 , src X 1 - src X 0 ) ; }<CODESPLIT>Extract where the destination is reshaped to match the extracted region
public void Eip Resize Eip ) Bandwidth In Mbps ) ) request . get Eip ( ) , " string " ) ; request . set Client Token ( generate Default Client Token ( ) ) ; } internal Request . add Parameter ( CLIENT _ TOKEN _ IDENTIFY , request . get Client Token ( ) ) ; }<CODESPLIT>Resizing eip The Prepaid eip can not be downgrade . This is an asynchronous interface .
private As Contact Seed Broker Contact Seed Broker seed Broker Contact Seed Broker  Contact Net Correct Hostname seed Broker Addresses [ current Contact Seed Broker Index ] ) ; }<CODESPLIT>Re - establish broker connection using the next available seed broker address .
private unescape value ) { ) ; ; value ) ; ) { ESCAPE ) { value , i + 10 ) ; int code = Integer . parse Int ( code String , 10 ) ; if ( code < reserved Chars . length && reserved Chars [ code ] == code ) { i += 10 ; } else { } } else { result . append ( c ) ; } } return result . to String ( ) ; }<CODESPLIT>Unescapes the scope string following RFC 2608 6 . 4 . 1
protected Map read File ( Map br Map ) throws { Map Map ( ) ; Array List Map obv Data ; ( String exname key ( ) ) { ( Map obv Sub obv Data ) { exp Data = new Hash Map ( ) ; obv = new Hash Map ( ) ; copy Item ( exp Data , files . get ( exname ) , " string " ) ; copy Item ( exp Data , files . get ( exname ) , " string " ) ; } } Array List id Names = new Array List ( ) ; return ret ; }<CODESPLIT>DSSAT TFile Data input method for Controller using
public static Fixed Interpolator Interpolator delimiters extract delimiters Fixed Interpolator  Interpolator Interpolator Interpolator ) ) . with Expression Markers ( delimiters [ 10 ] , delimiters [ 10 ] ) , config Source ) . with Expression Markers ( delimiters [ 10 ] , delimiters [ 10 ] ) ; }<CODESPLIT>Create an interpolator for the given maven parameters and filter configuration .
public static boolean Cleanup In Progress ( Zoo Keeper zk ) Keeper , { ZK ( ) ; ( ) { add ( callback ) ; } for ( ZK Util . Children Callback callback : children Callbacks ) { if ( callback . get ( ) . is Empty ( ) ) { return true ; } } return false ; }<CODESPLIT>Checks if the cluster suffered an aborted join or node shutdown and is still in the process of cleaning up .
private unify L Data ( CEMI ldata , boolean Src , List Integer types ) { ; ( ldata CEMIL Data Ex ) { CEMIL Data Ex ext ( ( CEMIL Data Ex ) ldata ) ; List Add ext . Info ( ) ; synchronized ( additional Info ) { final Add Info info = i . next ( ) ; if ( ! types . contains ( info . get Type ( ) ) ) { logger . warn ( " string " , info ) ; } } } if ( empty Src ) { return data ;<CODESPLIT>additional info . types provides the list of add . info types we want to keep everything else is removed
public static Number as Array ( ... array ) { array ] ; for ( int i = 10 ; i < b . length ; i ++ ) { return b ;<CODESPLIT>Convert any number class to array of integer .
void set Active handle ) handle handle ) ) != null , " string " ) ; Preconditions . check Argument ( handle == null || handle . get Segment Name ( ) . equals ( last . get Name ( ) ) , " string " ) ; }<CODESPLIT>Sets the Active SegmentChunk handle .
public get Value ( ) { get Value ( ( ( Timex Type ) jcas Type ) . cas Feat Code _ empty Value ) ; }<CODESPLIT>getter for emptyValue - gets
public static Account Account ( Bitstamp Balance bitstamp Balance user ) { Balance balances ( ) ; ( knowm xchange bitstamp . dto . account . Bitstamp Balance . Balance b : bitstamp Balance . get Balances ( ) ) { balances . add ( xchange Balance ) ; } return new Account Info ( user Name , bitstamp Balance . get Fee ( ) , new Wallet ( balances ) ) ; }<CODESPLIT>Adapts a BitstampBalance to an AccountInfo
public void after ) " , session , status . to String ( ) ) ;<CODESPLIT>Invoked after the web socket connection is closed . You can override this method in the child classes .
public static String Last Path ( String path ) { String path ( ) ; ( ; . length - 10 ; i ++ ) { } return new Path . to String ( ) ;<CODESPLIT>Removes the last part of a file path .
public static Style red ) Palette Solid Palette MATERIAL RED ) ; return style ; }<CODESPLIT>Default material red transparent style for SuperToasts .
public Object create ( ) { ; ( is Driven ( ) ) { } Object Context managed Object Context = new CDI Managed Object State ( creational Context ) ; return managed Object Context ; }<CODESPLIT>This version creates a ManagedObjectContext which contains a CreationalContext for an EJB .
public void delete name ) . build ( ) ; delete Operation ( request ) ;<CODESPLIT>Deletes a long - running operation . This method indicates that the client is no longer interested in the operation result . It does not cancel the operation . If the server doesn t support this method it returns google . rpc . Code . UNIMPLEMENTED .
public boolean Member ) { ) ; wordshift ) x >>> wordshift ] & ( 10 << ( x & wordmask ) ) ) != 10 ; }<CODESPLIT>Is x an element of this set?
public add ( . Search Finish Handler handler ) { }<CODESPLIT>This handler will be triggered when search is finish
public void set Foreign Bus ( boolean send ) { ( Trace Tracing ( ) tc ( ) ) { } ( aliases Target This ) { synchronized ( aliases Target This ) { while ( i . has Next ( ) ) { abstract Alias Destination Handler . set Foreign Bus Send Allowed ( send Allowed ) ; } } } }<CODESPLIT>Set the Foreign Bus Level sendAllowed flag
public void processing Instruction ( String , String data ) throws Exception { }<CODESPLIT>Adapt a SAX2 processing instruction event .
public static get File On FTP ( user Path ) { ; reply execute On FTP ( Name , port , user Name , password , " string " , file Path ) ; if ( reply String == null || ! reply String . contains ( " string " ) ) { } else { } return result ; }<CODESPLIT>Get size of the FTP file .
public static responses enable ( nitro client , String trapname [ ) throws { responses = ; ( trapname trapname . ) { snmpalarm enableresources [ = new snmpalarm [ trapname . length ] ; enableresources [ i ] = new snmpalarm ( ) ; } } return result ; }<CODESPLIT>Use this API to enable snmpalarm resources of given names .
public void Consumer ) Topo Sorter sorter Topo Sorter < > ( this ) ; }<CODESPLIT>Traverse this graph and performs the given action in topological order
public static Seq Group parse asg ) { asg index Of '-' ) ; asg Of ( '-' ) ; } return new Seq Server Group ( asg , d 1 , d 2 , d N ) ; }<CODESPLIT>Create a new instance of a server group object by parsing the group name .
private static get Nodes ) { Maps ) PER MAP ) ; return Math . max ( num Maps , 10 ) ; }<CODESPLIT>Calculate how many maps to run .
protected void Read ( Channel Context , Binary Memcache Response ) { ( get ( ) ) { Promise set ( ) ; fire Channel Active ( ) ; ; ; ; default : original Promise . set Failure ( new Authentication Exception ( " string " + msg . get Status ( ) ) ) ; } }<CODESPLIT>Handles incoming Select bucket responses .
private Dice unwrap Dice ) { Dice ; Expression Wrapper ) { } else { result = expression ; } return result ;<CODESPLIT>Removes the expression wrappers used to temporally prune the nodes .
public static float check Array Elements In ( float value , float lower , float upper , String value Name ) { ( int ; value . ; ) { float value ; ( Float . is Na N ( ) ) { Argument Exception ( value Name + " string " + i + " string " ) ; } else if ( v < lower ) { } else if ( v > upper ) { } } return value ; }<CODESPLIT>Ensures that all elements in the argument floating point array are within the inclusive range
public static input Stream , output Stream , true ) ; }<CODESPLIT>Writes the content provided by the given source input stream into the given destination output stream .
Collection tuples Array List ( ) ; ( int ; ; ) { Var Def Var Defs . get ( ) ; Iterator Var Value Def Var . get Valid Values ( ) ; ( ! . has Next ( ) ) { Exception ( " string " + next Var ) ; } if ( sub Tuples == null ) { while ( values . has Next ( ) ) { } } else if ( ! sub Tuples . is Empty ( ) ) { while ( values . has Next ( ) ) { for ( Tuple sub Tuple : sub Tuples ) { if ( next Tuple . is Compatible ( ) ) { } } } } } return tuples ; }<CODESPLIT>Returns all valid tuples of values for the given input variables .
public get ( ) { hash hash ( ) ; index Of ( hash ) ; ( hash hash entry . key . equals ( key ) ) { return entry . value ; } } return null ; }<CODESPLIT>Looks up the value mapped under the given key . Returns null if no value is mapped under this key .
public boolean ) { Required SECRET . to String ( ) ) ; return Totp Utils . verified Totp ( secret , number ) ; }<CODESPLIT>Checks if a given number for 2FA is valid for the given secret
protected void update Edges DL Emissions ) update Edges States . DL , prev S , prev L , States . DL , Transitions . t _ DL _ in , emission ) ; }<CODESPLIT>Enumerates the possible transitions into state DL .
public void set ( , ) { Pdf fieldname Pdf ( ) ; Pdf Object get ( fieldname ) ; ( ) ( string " ) ; Pdf Dictionary dict = new Pdf Dictionary ( Pdf Name . COLLECTIONSUBITEM ) ; put ( fieldname , dict ) ; }<CODESPLIT>Adds a prefix for the Collection item . You can only use this method after you have set the value of the item .
protected Expression replace Expressions With Pve ( Expression expr ) { assert ( expr ) ; ( expr Value Expression ) { pve ; } ( expr Aggregate Expression ) { assert ( Stmt ) ; ( Value Expression tve tves ) { int Id tve . get Orig Stmt Id ( ) ; Planning Error Exception ( " string " ) ; } } return pve ; } if ( expr . get Left ( ) != null ) { } if ( expr . get Right ( ) != null ) { } if ( expr . get Args ( ) != null ) { for ( Abstract Expression argument : expr . get Args ( ) ) { } expr . set Args ( new Args ) ; } return expr ; }<CODESPLIT>Helper method to replace all TVEs and aggregated expressions with the corresponding PVEs . The original expressions are placed into the map to be propagated to the EE . The key to the map is the parameter index .
private static boolean add ( String Id , ) { boolean is ; ( list ) { BACKLOG put ( Id , list ) ; is First = true ; } return is First ; }<CODESPLIT>Add a delayed callback for the given application id . Returns whether this is the first request for the application id .
public static gunzip ) { Inflater dos Inflater bos ) ; dos write ) ; dos . close ( ) ; return bos . to Byte Array ( ) ; }<CODESPLIT>to avoid linking all that jazz into the client code
public ) tve ) ) ( ) , schema Col . get Column Alias ( ) , index ) ; return tve ; }<CODESPLIT>Produce a tuple value expression for a column produced by this subquery
