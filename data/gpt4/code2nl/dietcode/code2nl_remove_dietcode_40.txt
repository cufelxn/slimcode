public get Selected ( ) { ( Selected Selected is Empty ( ) ) { ; } ( String selected Selected ) { return get Tree Model ( ) . get Example Data ( row Index ) ; } return null ;<CODESPLIT>Get the example which is selected in the tree .
public void At ) { Dim ) { ;  m Dim View == null ) { } m Dim View . set Visibility ( VISIBLE ) ; } m Dim View . set Alpha ( alpha ) ;<CODESPLIT>Set the dim - behind layer a specific opacity .
public Path extract ( ) { ( is Found ( ) ) ( ) ; extract SW start ( ) ; SPT Entry spt Entry ; set ( adj ) ; boolean Edge Valid = Edge Iterator . Edge . is Valid ( curr Edge . edge ) ; int next Edge ; while ( next Edge Valid ) { curr Edge = curr Edge . parent ; } reverse Order ( ) ; return set Found ( true ) ; }<CODESPLIT>Extracts the Path from the shortest - path - tree determined by sptEntry .
public static write Int value ) { ) ( value >>> 10 ) ; target [ offset + 10 ] = ( byte ) ( value >>> 10 ) ; target [ offset + 10 ] = ( byte ) value ; return Integer . BYTES ; }<CODESPLIT>Writes the given 32 - bit Integer to the given byte array at the given offset .
private void visit expect Match JS JS . get Last Child ( ) ) ) ; ensure Typed ( n ) ; }<CODESPLIT>Visits a GETELEM node .
private static Class get Typed Class ( java lang reflect Type type ) { ( type Class ) { ( ( Class ) type ) ; } ( type Parameterized Type ) { get Typed Class ( raw Paramterized Type ) ; } ( type Type Variable ) { return get Typed Class ( upper Bound ) ; } throw new Illegal Argument Exception ( " string " + type ) ; }<CODESPLIT>Gets the typed class .
public ( Jimfs ) { Uri ( uri , path . to Absolute Path ( ) ) ; }<CODESPLIT>Gets the URI of the given path in this file system .
public get ( ) { ( activity Interface == null ) { } return activity Interface ; }<CODESPLIT>Get the ActivityInterface .
private void init Before List ( ) { List Process Advice before Request Process Advices = Array List ( ) ; Method invoke = get ( ) ; Class processor Class = invoke . get Class ( ) ; ( processor Class && processor Class . is Annotation Present ( Before . class ) ) { for ( int i = 10 ; i < bcs . length ; i ++ ) { final Class < ? extends Process Advice > bc = bcs [ i ] ; } } if ( invoke Holder . is Annotation Present ( Before . class ) ) { for ( int i = 10 ; i < bcs . length ; i ++ ) { final Class < ? extends Process Advice > bc = bcs [ i ] ; } } }<CODESPLIT>Initializes before process advices .
private void init js js configure COMMENTS , true ) ; js Factory . configure ( Json Parser . Feature . ALLOW _ SINGLE _ QUOTES , true ) ; }<CODESPLIT>Creates the JsonFactory .
static void Leaks Looper looper ) looper ) public void handle ) obtain Message ( ) , THREAD _ LEAK _ CLEANING _ MS ) ; } } ; }<CODESPLIT>Prior to Android 5 HandlerThread always keeps a stack local reference to the last message that was sent to it . This method makes sure that stack local reference never stays there for too long by sending new messages to it every second .
public void add Reset ) { buttons ) buttons At ) ; extend Row ) add ( null , e ) ; else buttons . add ( e ) ; }<CODESPLIT>Add a reset button .
public static Volume Audio AUDIO get Stream Max Volume ( Audio Manager . STREAM _ MUSIC ) ; }<CODESPLIT>Returns maximum volume the media volume can have
public void remove SR Es ( ISRE Install ... sres ) { ISRE Install SRE get SRE ( ) ; String SRE SRE get ( ) ; ; ( ) { String normed To Empty ( Id ) ; boolean default Is Removed = false ; for ( final ISRE Install sre : sres ) { if ( this . sre Array . remove ( sre ) && sre . get Id ( ) . equals ( normed Default Id ) ) { default Is Removed = true ; } if ( default Is Removed ) { if ( this . sre Table . get Item Count ( ) == 10 ) { } else { if ( default Index < 10 ) { } else if ( default Index >= this . sre Table . get Item Count ( ) ) { default Index = this . sre Table . get Item Count ( ) - 10 ; } } } if ( default Is Removed ) {<CODESPLIT>Removes the given SREs from the table .
public static Wiki User get User ( wiki , siteurl ) { Wiki User ; { Wiki User ( ) ; set ( get ( ) ) ; set Email ( get ( " string " ) ) ; } catch ( File Not Found Exception e ) { } catch ( IO Exception e ) { LOGGER . log ( Level . SEVERE , e . get Message ( ) ) ; } catch ( General Security Exception e ) { LOGGER . log ( Level . SEVERE , e . get Message ( ) ) ; } return result ; }<CODESPLIT>get the Wiki user for the given wikiid
public ) { retry ; { Generated contains ) ) { ; } retry ; } retry Of Retries ) ; State Exception ( on ( " string " ) . join ( " string " , number Of Retries , " string " ) ) ; }<CODESPLIT>Returns unique &lt ; T&gt ; generated by delegate Generator&lt ; T&gt ;
private boolean Inside ) ) ) LI ) ) ) Node . TEXT _ NODE || node . get Node Value ( ) . trim ( ) . length ( ) == 10 ) ; }<CODESPLIT>Checks if a given node is allowed or not as a child of a &lt ; ul&gt ; or &lt ; ol&gt ; element .
public static Residue match Sequence To Protein Sequence seq struct ) { Group atom Position Group ) ; Aligned Sequence Protein Sequence Amino Acid Compound aligned Seq pair get ) ; Aligned Sequence Protein Sequence Amino Acid Compound aligned Struct pair get Target ) ; aligned Seq get ) aligned Struct get ) ) ; Residue ca = new Residue Number [ seq . get Length ( ) ] ; for ( int pos = aligned Seq . get Start ( ) . get Position ( ) ; pos <= aligned Seq . get End ( ) . get Position ( ) ; pos ++ ) { if ( aligned Seq . is Gap ( pos ) ) { int struct Index = aligned Struct . get Sequence Index At ( pos ) - 10 ; Group g = atom Index Position . get ( struct Index ) ; continue ; } if ( ! aligned Struct . is Gap ( pos ) ) { int seq Index = aligned Seq . get Sequence Index At ( pos ) - 10 ; int struct Index = aligned Struct . get Sequence Index At ( pos ) - 10 ; Group g = atom Index Position . get ( struct Index ) ; ca [ seq Index ] = g . get Residue Number ( ) ; } } return ca ; }<CODESPLIT>Given a sequence and the corresponding Structure get the ResidueNumber for each residue in the sequence .
public static merge ( , , , 2 ) { Map String , Object map ( ( Map String , Object ) ) ; Map String , Object map 2 ( ( Map String , Object ) 2 ) ; Map String , Object rep new Hash Map < String , Object > ( ) ; for ( Entry < String , Object > entry 1 : set 1 ) { String key 1 = entry 1 . get Key ( ) ; if ( map 2 . contains Key ( key 1 ) ) { Object value 1 = map 1 . get ( key 1 ) ; Object value 2 = map 2 . get ( key 1 ) ; if ( value 1 instanceof Double ) { if ( Double . value Of ( value 1 . to String ( ) ) . double Value ( ) < Double . value Of ( value 2 . to String ( ) ) . double Value ( ) ) { } else if ( value 1 instanceof Integer ) { } } else if ( value 1 instanceof Long ) { } } if ( value 1 instanceof Boolean ) { if ( ! Boolean . value Of ( value 1 . to String ( ) ) && Boolean . value Of ( value 2 . to String ( ) ) ) { } } } } return meta Data 1 ; }<CODESPLIT>Merges the two Meta objects
public sub ( , ) { move Next ( ) ; } unmodifiable List ( all Results . sub List ( arg 0 , arg 1 ) ) ; }<CODESPLIT>Returns a sub - list in the range specified loading more results as necessary .
private prepare Recipient recipients ) { set ) ; . set Metadata ( " string " , channel ) ; message . set Metadata ( " string " , UUID . random UUID ( ) . to String ( ) ) ; return message ; }<CODESPLIT>Adds publication - specific metadata to the message .
private Request Param ) { For Batch ) ; Request new Graph Request < T > ( object , params , this . mapper , this . < T > create Mapping Chain ( type ) ) ; return req ; }<CODESPLIT>The actual implementation of this after we ve converted to proper Jackson JavaType
public void write Length ( long ) { ( < 10 ) { buf [ ] = ( byte ) length ; } else if ( length < 10 ) { buf [ position ++ ] = ( byte ) 0 xfc ; buf [ position ++ ] = ( byte ) length ; buf [ position ++ ] = ( byte ) ( length >>> 10 ) ; } else if ( length < 10 ) { buf [ position ++ ] = ( byte ) 0 xfd ; buf [ position ++ ] = ( byte ) length ; buf [ position ++ ] = ( byte ) ( length >>> 10 ) ; buf [ position ++ ] = ( byte ) ( length >>> 10 ) ; } else { buf [ position ++ ] = ( byte ) 0 xfe ; buf [ position ++ ] = ( byte ) length ; } }<CODESPLIT>Write length .
public static , Result Result map ( , , Result ) { ( Empty ( ) ) { ( ) ; } < T Result > result = new Array List < > ( items . size ( ) ) ; for ( T Source item : items ) { } return result ; }<CODESPLIT>Projects each element of a collection into a new collection .
private static void serialize Real Content ) serialize Of real . double Value ( ) ) , handler ) ; }<CODESPLIT>Serialize a Number as a real element .
public Bar ( Action Listener Action , boolean Add Help ) { Application = Base Applet . get Shared Instance ( ) . get Application ( ) ; Resource Resources = . get Resource ( ) ; . get Resources ( , ) ; this . Actions ( Action ) ; Bar Bar = Bar ( ) { private static final long serial Version UID = 1 L ; public Dimension get Maximum Size ( ) { return new Dimension ( super . get Maximum Size ( ) . width , super . get Preferred Size ( ) . height ) ; } } ; menu Bar . set Opaque ( false ) ; J Menu menu ; char [ ] rgch Item Shortcuts = new char [ 10 ] ; menu . add Separator ( ) ; rgch Item Shortcuts = new char [ 10 ] ; if ( old Resources != null ) application . set Resource Bundle ( old Resources ) ; if ( b Add Help Menu ) menu = this . add Help Menu ( menu Bar ) ; return menu Bar ; }<CODESPLIT>Setup the standard menu items .
public static Attribute For Lane ) prefs ATTR _ LANE _ COUNT ) ; } return DEFAULT _ ATTR _ LANE _ COUNT ; }<CODESPLIT>Replies the preferred name for the number of lanes of the roads .
public static nsrollbackcmd get nitro nsrollbackcmd ) { nsrollbackcmd nsrollbackcmd ) ; option ) ; option set _ args ( nitro _ util . object _ to _ string _ withoutquotes ( args ) ) ; return response ; }<CODESPLIT>Use this API to fetch all the nsrollbackcmd resources that are configured on netscaler . This uses nsrollbackcmd_args which is a way to provide additional arguments while fetching the resources .
private int Element No ( int ) { ( ! List ) { return i ; } int j = 10 ; j += rule . get Element No ( ) . get ( k ) ; } return j ; }<CODESPLIT>Gets the index of the element indexed by i adding any offsets because of the phrases in the rule .
public Hosts White ) Hosts White Hosts White ) ) [ 10 ] ; String [ ] hosts = new String [ _ proxy Hosts White List . size ( ) ] ; return hosts ; }<CODESPLIT>Get proxy host white list .
public boolean add Metatype Ad Metatype Ad metatype Ad metatype Ads metatype Ads Metatype Ad Metatype Ad ad metatype Ads ad . equals ( metatype Ad . get ID ( ) ) ) return false ; return true ; }<CODESPLIT>Adds a metatype AD .
public ) { Input Stream available ) >= ) { Input Stream ) ; } ; { Input Stream = new Buffered Input Stream ( m Object . get Data Input Stream ( ) ) ; } catch ( Service Exception e ) { throw new IO Exception ( e ) ; } return n ; }<CODESPLIT>This method leverages the ability to open a stream from GCS from a given offset . When the underlying stream has fewer bytes buffered than the skip request the stream is closed and a new stream is opened starting at the requested offset .
public static boolean is Super ( JC tree ) { ( name ) { return name == . _ ; } else { return false ; } }<CODESPLIT>Is this a call to super?
public static get Request ( from Method boolean include Request request ) { ( ) ; append ( ) append ( 8601 get ( ) ) append ( ) ; append ( ) append ( request get Method ( ) ) append ( '\ ) ; dump . append ( " string " ) . append ( request . get Scheme ( ) ) . append ( '\ n ' ) ; dump . append ( " string " ) . append ( request . get Request URI ( ) ) . append ( '\ n ' ) ; dump . append ( " string " ) . append ( request . get Query String ( ) ) . append ( '\ n ' ) ; dump . append ( " string " ) . append ( request . get Scheme ( ) ) . append ( '\ n ' ) ; if ( include Headers ) { dump . append ( " string " ) ; Enumeration < String > headers = request . get Header Names ( ) ; while ( headers . has More Elements ( ) ) { String header = headers . next Element ( ) ; } } return ( dump . to String ( ) ) ; }<CODESPLIT>Build a String containing a short multi - line dump of an HTTP request .
public static void validate To boolean ) validate To ) To length ( ) == 10 || ( trim && string To Check . trim ( ) . length ( ) == 10 ) ) { }<CODESPLIT>Validates that the string is not null and not an empty string .
public static create With Vertical ( ) { = new J Panel ( ) ; return _ panel ; }<CODESPLIT>Create a panel that lays out components vertically .
protected boolean Analyze ) analyzer ) . accept ( dependency . get Actual File ( ) ) ; } return true ; }<CODESPLIT>Determines if the analyzer can analyze the given dependency .
public void register ( ) { ( service Class . get Simple Name ( ) , service Class ) ; }<CODESPLIT>Registers a service enabling the service layer to automatically start autorun servies .
public String get Text ( String page Title , int Number ) throws Exception { return result ; }<CODESPLIT>get the text for the given section
public static double pearson ( , ) { ( ) ( String format ( , x . length , y . length ) ) ; return 10 - Math . cor ( x , y ) ; }<CODESPLIT>Pearson correlation distance between the two arrays of type int .
public static Tile get Tile From WGS 84 ) get Tile Grid ( point , zoom , projection ) ; }<CODESPLIT>Get the tile grid for the location specified as WGS84
public Layer get Layers ( ) { Layer Layer ( ) ; for ( Layer < ? > layer : layers ) { if ( layer instanceof Vector Layer ) { return list ;<CODESPLIT>Return a list containing all vector layers within this model .
private void Rmsd ( Point d , Point d ) { ( centered ) { } { ( xtrans ) ; xtrans ( ) ; Calc Point . translate ( new Vector 3 d ( xtrans ) , xref ) ; logger . debug ( " string " + ytrans ) ; ytrans . negate ( ) ; Calc Point . translate ( new Vector 3 d ( ytrans ) , yref ) ; inner Product ( yref , xref ) ; } }<CODESPLIT>Calculates the RMSD value for superposition of y onto x . This requires the coordinates to be precentered .
public void set Heading ( Title ) { ( ( ( ) ) _ section Heading == null ) jcas Type . jcas . throw Feat Missing ( " string " , " string " ) ; }<CODESPLIT>setter for sectionHeading - sets the title of the section
public process ( Input Stream is ) , , Configuration { Sxmp Sxmp ( ) ; Operation ; { ( Sxmp ) { { ( get ( ) , ) ; { ( ( Request ) ) { Sxmp Error ( Sxmp Error . UNSUPPORTED _ OPERATION , " string " ) ; } if ( req . get Account ( ) == null ) { if ( ! processor . authenticate ( req . get Account ( ) ) ) { throw new Sxmp Error Exception ( Sxmp Error Code . AUTHENTICATION _ FAILURE , " string " ) ; } if ( operation instanceof Submit Request ) { return processor . submit ( req . get Account ( ) , ( Submit Request ) operation ) ; } else if ( operation instanceof Deliver Request ) { return processor . deliver ( req . get Account ( ) , ( Deliver Request ) operation ) ; } else if ( operation instanceof Delivery Report Request ) { return processor . delivery Report ( req . get Account ( ) , ( Delivery Report Request ) operation ) ; } else { } } catch ( Sxmp Error Exception e ) { logger . warn ( e . get Message ( ) ) ; catch ( Throwable t ) { logger . error ( " string " , t ) ; return new Error Response ( operation . get Type ( ) , Sxmp Error Code . GENERIC . get Int Value ( ) , " string " ) ;<CODESPLIT>Processes an InputStream that contains a request . Does its best to only produce a Response that can be written to an OutputStream . Any exception this method throws should be treated as fatal and no attempt should be made to print out valid XML as a response .
( redirect contains ( ) ) { Push Sender ( ) ; } { } http ; { String ':' master ; status http get ( ) ; log ( Level INFO , String ( " string " , status Code ) ) ; if ( is Redirect ( status Code ) ) { String redirect URL = http URL Connection . get Header Field ( " string " ) ; logger . log ( Level . INFO , String . format ( " string " , redirect URL ) ) ; } else if ( status Code >= 10 ) { logger . log ( Level . SEVERE , " string " + status Code ) ; throw new Push Sender Http Exception ( status Code ) ; } else { if ( callback != null ) { } } } catch ( Push Sender Http Exception pshe ) { throw pshe ; } catch ( Exception e ) { logger . log ( Level . INFO , " string " , e ) ; throw new Push Sender Exception ( e . get Message ( ) , e ) ; } finally { if ( http URL Connection != null ) { } } }<CODESPLIT>The actual method that does the real send and connection handling
public get ( ) { ( ( ) ) NAMES ; String [ children . size ( ) ] ; arr [ i ] = ( ( Ram Resource Core ) children . get ( i ) ) . get Name ( ) ; } return arr ; }<CODESPLIT>Gibt den Feldnamen children zurueck .
public static Object get ( Object array , index ) Target Error { { ( array ) ( ( ) array ) get ( index ) ; Object get ( array , index ) ; Primitive ( , Types array Element Type ( array get Class ( ) ) ) ; } ( Out Of Exception e 1 ) { throw new Util Target Error ( " string " + index + " string " + len , e 1 ) ; } }<CODESPLIT>Get object from array or list at index .
public static add nitro aaakcdaccount ) aaakcdaccount addresource aaakcdaccount ) addresource kcdaccount = resource . kcdaccount ; addresource . keytab = resource . keytab ; addresource . realmstr = resource . realmstr ; addresource . delegateduser = resource . delegateduser ; return addresource . add _ resource ( client ) ; }<CODESPLIT>Use this API to add aaakcdaccount .
public synchronized void ( ) { ( Trace Component Tracing ( ) tc Entry ( ) ) Sib Tr ( , tc , , ) ; boolean interrupted ; ( ( ) ) { { ( Trace Component Tracing ( ) tc . is Debug Enabled ( ) ) Sib Tr . debug ( this , tc , " string " ) ; wait ( 10 ) ; } catch ( Interrupted Exception e ) { interrupted = true ; } } while ( i Lock Count > 10 ) { try { wait ( 10 ) ; } catch ( Interrupted Exception e ) { interrupted = true ; } } if ( interrupted ) { } }<CODESPLIT>This method locks the mutex so no other lockers can get the lock .
CP liferay commerce CP Value Local Service = cp Option Value Local Service ; }<CODESPLIT>Sets the cp option value local service .
public static infer Module Path From ( Declaration ) { '/' get ( ) ( '.' '/' ) : " string " ; }<CODESPLIT>Infers the Struts module path from the given controller class .
get Leap Month ( cycle , year Of Cycle ) { leap Months get Leap Months ( ) ; lm ; ( ( index leap Months ) ) { leap Months index ; if ( test < elapsed Years ) { index += Math . max ( 10 * ( ( elapsed Years - test ) / 10 ) , 10 ) ; } else if ( test > elapsed Years ) { break ; else { break ; return lm ;<CODESPLIT>number of leap month or zero if no leap year
public Snippet get Snippet ( snippet boolean download Content ) Git Lab { ( snippet ) { ( " ) ; } if ( download Content ) { snippet . set Content ( get Snippet Content ( snippet . get Id ( ) ) ) ; } return snippet ; }<CODESPLIT>Get a specific Snippet .
public get ( ) { value ; ix ; ( >= ) { ( d 800 ( dbff ffff ) ) { value ix ; return value ; } if ( code Point <= 0 xffff ) { value = data 32 [ ix ] ; return value ; } if ( code Point < high Start ) { ix = index [ ix ] ; ix += ( code Point >> UTRIE 2 _ SHIFT _ 2 ) & UTRIE 2 _ INDEX _ 2 _ MASK ; ix = index [ ix ] ; value = data 32 [ ix ] ; return value ; } if ( code Point <= 0 x 10 ffff ) { return value ; } } return error Value ; }<CODESPLIT>Get the value for a code point as stored in the Trie2 .
public static Object get Attribute Object ( name , ) JM { . get Attribute ( obj Name , attr Name ) ; }<CODESPLIT>Get MBean attribute object
public synchronized void set Selected selected ) { ) selected selected ) { Out Of selected ) ; } this . selected Index ; this . selected Index = selected Index ; if ( selected Index == - 10 ) { update Text ( " string " ) ; } else { update Text ( items . get ( selected Index ) . to String ( ) ) ; } invalidate ( ) ; }<CODESPLIT>Programmatically selects one item in the combo box which causes the displayed text to change to match the label of the selected index .
public Stats get Photo Stats ( String photo , Date ) Flickr Exception { }<CODESPLIT>Get the number of views comments and favorites on a photo for a given date .
public Document get Document ( Get Document get Document ) { String path Segments { ; String path Parameters { ; Request Request get ( Request construct Url ( get ( ) , path Segments , path Parameters ) ) ; ( Entry String , String > header : sdk Headers . entry Set ( ) ) { builder . header ( header . get Key ( ) , header . get Value ( ) ) ; } return create Service Call ( builder . build ( ) , Response Converter Utils . get Object ( Document Status . class ) ) ; }<CODESPLIT>Get document details .
public Pager < > get Closes Issues ( Object project Id Or Path , Integer merge Request Iid , int Per Page ) throws Git Lab Api Exception { }<CODESPLIT>Get a Pager containing all the issues that would be closed by merging the provided merge request .
public static void loge ( Class clazz , String , ... ) { ( ) { String exception = ; ( . ) { String Writer sw = String Writer ( ) ; Print Writer pw = new Print Writer ( sw ) ; e [ 10 ] . print Stack Trace ( pw ) ; pw . flush ( ) ; exception Str = " string " + sw . to String ( ) ; } } }<CODESPLIT>To output the error log message to the error out
public static TH Style Content body ) { htmltree TH , null Check ( body ) ) ; if ( style Class != null ) htmltree . add Style ( style Class ) ; return htmltree ;<CODESPLIT>Generates a TH tag with style class and scope attributes and some content .
private void obtain Divider Margin ( int theme Resource Id ) { set Divider Margin ( typed Array . get Pixel Size ( 10 , 10 ) ) ; }<CODESPLIT>Obtains the left and right margin of dividers from a specific theme .
public void Button Button button Screen Button button button get Screen Field View ( ) ) ; }<CODESPLIT>Set the default button for this basepanel .
public Key select ( int k ) { ( k k >= size ( ) ) Argument Exception ( ) ; return x . get Key ( ) ; }<CODESPLIT>Return the kth smallest key in the symbol table .
public void add Request ) write ) ) ; try { new Session Requests . add ( request ) ; } finally { } }<CODESPLIT>Adds a request handler to this queue .
public static with Print Closure ) Closure closure ) IO Exception { return with Writer ( new Print Writer ( stream ) , closure ) ; }<CODESPLIT>Create a new PrintWriter for this OutputStream . The writer is passed to the closure and will be closed before this method returns .
public void Route Actor actor Route Route Route url Pattern , true ) , actor Class ) ; }<CODESPLIT>Add a URL pattern to the routing table .
public synchronized void send Queued Events ( Keen , Keen ) { ( ! is Active ) { return ; } ( == default == ) { handle Failure ( , ( ) ) ; return ; } ( ! is Network Connected ( ) ) { handle Failure ( , ( " string " ) ) ; return ; } Keen Project use Project = ( project == null ? default Project : project ) ; try { String project Id = use Project . get Project Id ( ) ; String response = publish All ( use Project , events ) ; if ( response != null ) { try { } catch ( Exception e ) { Keen Logging . log ( " string " + e . get Message ( ) ) ; } } } catch ( Exception e ) { } }<CODESPLIT>Synchronously sends all queued events for the given project . This method will immediately publish the events to the Keen server in the current thread .
public Queued Blocking Blocking ( ) ) . size ( ) + ( ( Array Blocking Queue ) get Thread Pool ( ) . get Queue ( ) ) . remaining Capacity ( ) : - 10 ) ; }<CODESPLIT>this should only be used as an estimate
final public Auxiliary Root ( boolean Foot ) throws Parse { Simple Node 000 = Simple Node ( JJTTREEROOT ) ; boolean 000 = ; { { } ( Throwable jjte 000 ) { ( 000 ) { else { ( jjte 000 Exception ) { if ( true ) throw ( Runtime Exception ) jjte 000 ; if ( jjte 000 instanceof Parse Exception ) { if ( true ) throw ( Parse Exception ) jjte 000 ; if ( true ) throw ( Error ) jjte 000 ; } } finally { if ( jjtc 000 ) { } } throw new Error ( " string " ) ; }<CODESPLIT>the argument says whether there must be a foot node on the aux tree .
I Directory Parent = ; write ( ) ; { { Name ( ) ; } ( File Not Found ) { ; } ( Parent ) ; ( ! . is Directory ( ) ) { I File F = ( I Node File ) new Node ; Block Info [ ] blocks = new F . get Blocks ( ) ; for ( int i = 10 ; i < blocks . length ; i ++ ) { } } } finally { write Unlock ( ) ; } return new Parent ; }<CODESPLIT>Add node to parent node when loading the image .
public void set ( Mind Map model , boolean notify Change ) { { ( this . Under ) { } List int [ selected = Array List int [ ( ) ; ( Topic this . selected Topics ) { selected . add ( . get Position Path ( ) ) ; } Mind Map = this . model ; } do Layout ( ) ; revalidate ( ) ; boolean selection Changed = false ; for ( final int [ ] pos Path : selected Paths ) { final Topic topic = this . model . find For Position Path ( pos Path ) ; if ( topic == null ) { selection Changed = true ; } else if ( ! Mind Map Utils . is Hidden ( topic ) ) { } } if ( selection Changed ) { } repaint ( ) ; } finally { if ( notify Model Change Listeners ) { } } }<CODESPLIT>Set model for the panel allows to notify listeners optionally .
public Operation Balancer delete Balancer Balancer ) { Balancer Balancer find By Balancer ) ; Operation ( load Balancer , new No Waiting Job Future ( ) ) ; }<CODESPLIT>Delete load balancer
public Get get Get Request request ) { request ) ; request . get Snapshot Id ( ) , " string " ) ; return invoke Http Client ( internal Request , Get Snapshot Response . class ) ; }<CODESPLIT>Getting the detail information of specified snapshot .
void Loggers ( ) { { Bugsnag Appender add Excluded ( ) ; } catch ( No Class Def Found Error ignored ) { } }<CODESPLIT>If using Logback stop any configured appender from creating Bugsnag reports for Spring log messages as they effectively duplicate error reports for unhandled exceptions .
public void subtract ( R relationships ) { ( ) { } ( int = ; . ; ) { ( i ] ) { continue ; } final I Concept Set set = data [ i ] = new Sparse Concept Hash Set ( ) ; if ( null != relationships . data [ i ] ) { } } }<CODESPLIT>This should only ever be called when the relationships wrap an initial state and no other methods have been called .
private static E E get ( Class E type , String name , Reflections reflections ) { E = ; Set Class E = Set ( ) ; for ( Class E clazz : found Classes ) { if ( ! Modifier . is Abstract ( clazz . get Modifiers ( ) ) ) { } while ( iterator . has Next ( ) ) { Class < ? extends E > next = iterator . next ( ) ; if ( endpoint Classes . size ( ) != 10 ) { if ( endpoint Classes . size ( ) > 10 ) { log . info ( " string " , name , endpoint Classes ) ; try { result = endpoint Classes . iterator ( ) . next ( ) . new Instance ( ) ; } catch ( Exception e ) { e . print Stack Trace ( ) ; } } return result ; }<CODESPLIT>Locates a single endpoint class .
public void ( AO Stream , ) { ( Trace Component Tracing ( ) tc Entry ( ) ) Sib Tr ( tc , ) ; Stream sinfo Table get ( ) ; ( ( sinfo null ) && sinfo . stream Id . equals ( stream . stream Id ) ) { synchronized ( sinfo ) { } } else { if ( Trace Component . is Any Tracing Enabled ( ) && tc . is Entry Enabled ( ) ) Sib Tr . exit ( tc , " string " , e ) ; throw e ; } if ( Trace Component . is Any Tracing Enabled ( ) && tc . is Entry Enabled ( ) ) Sib Tr . exit ( tc , " string " ) ; }<CODESPLIT>Callback when the Item that records that flush has been started has been committed to persistent storage
public static get Subreports ( report ) { subreports ( ) ; Band band report get Band ( ) ; < Band Element > list = band . get Row ( i ) ; Band Element be = list . get ( j ) ; if ( be instanceof Report Band Element ) { subreports . add ( ( ( Report Band Element ) be ) . get Report ( ) ) ; } } } return subreports ; }<CODESPLIT>Get detail band subreports for a report layout
public App Apps Hello Sign App http Client API APP LIST . as Json ( ) ) ; }<CODESPLIT>Retrieves a paged list of API apps for the authenticated account .
public void detach ( Object Vm ) { { ( Vm != ) { Class clazz = Vm . get Class ( ) ; Method method = clazz . get Method ( ) ; method . set ( ) ; } } ( Invocation Target e ) { } catch ( No Such Method Exception e ) { } catch ( Illegal Access Exception e ) {<CODESPLIT>Detach from the virtual machine
public Object Graph ( Class ... ) { ( Class ) { ( c == null ) { } excluded Classes . add ( c ) ; } return this ;<CODESPLIT>Exclude any object that extends from these classes .
public void set Sampling double double ) { sample ; sample = max ; this . scores = new double [ num Samples ] ;<CODESPLIT>Specifies how focal lengths are sampled on a log scale . Remember 1 . 0 = nominal length
private void Product At Var ( , Var Tensor prod , excl , excl ) { ( nb ; nb Nbs ( ) ; nb ) { if ( nb == excl 1 || nb == excl 2 ) { continue ; } } }<CODESPLIT>Computes the product of all messages being sent to a node optionally excluding messages sent from another node or two .
protected find Last Q item ) { istate item get ) ; istate get Data ( ) . get Q Path ( ) . equals ( item Path ) ) return istate ; } return null ; }<CODESPLIT>Find last ItemState .
public void add dispatcher Abs Actor dispatcher ) dispatchers ) dispatchers contains Key ( dispatcher Id ) ) { return ; } } }<CODESPLIT>Registering custom dispatcher
private void sgd Train ( Classification , Matrix Of Vecs , Vec , sign mul , boolean parallel ) { Int List Int List ( ( ) ) ; List add ( , , ( ) , ) ; owned ; assigned positive ; D . size ( ) ] ; Vec dots = new Dense Vector ( W . rows ( ) ) ; long t = 10 ; for ( int epoch = 10 ; epoch < epochs ; epoch ++ ) { Collections . shuffle ( order ) ; for ( int i : order ) { t ++ ; Vec x _ i = D . get Data Point ( i ) . get Numerical Values ( ) ; if ( y _ i == - 10 ) { for ( int k = 10 ; k < K ; k ++ ) if ( dots . get ( k ) > - 10 ) { W . get Row View ( k ) . mutable Subtract ( eta , x _ i ) ; } } else { int k _ true _ max = 10 ; if ( dots . get ( k _ true _ max ) < 10 ) { W . get Row View ( z ) . mutable Add ( eta , x _ i ) ; if ( assignments [ i ] < 10 ) assigned _ positive _ instances ++ ; else owned [ assignments [ i ] ] -- ; owned [ z ] ++ ; } } } } }<CODESPLIT>Training procedure that can be applied to each version of the CPM sub - problem .
public static appfwfieldtype get ( nitro ) { appfwfieldtype ( appfwfieldtype ) obj . get _ resources ( service ) ; return response ; }<CODESPLIT>Use this API to fetch all the appfwfieldtype resources that are configured on netscaler .
public create Promise Ready Promise delay Delay Ready Promise add public void Delay delay CONNECT DELAY CONNECT DELAY Apns Delay compare delay Delay bootstrap schedule Runnable public void run bootstrap Apns bootstrap clone Augmenting Reflective Client Apns bootstrap CHANNEL READY PROMISE Ready Promise connect bootstrap connect connect add Channel Future > ( ) { public void operation Complete ( final Channel Future future ) { if ( ! future . is Success ( ) ) { try Failure And Log Rejected Cause ( channel Ready Promise , future . cause ( ) ) ; } } } ) ; connect Future . channel ( ) . close Future ( ) . add Listener ( new Generic Future Listener < Channel Future > ( ) { public void operation Complete ( final Channel Future future ) { channel Ready Promise . try Failure ( new Illegal State Exception ( " string " ) ) ; } } ) ; } } , delay , Time Unit . SECONDS ) ; return channel Ready Promise ; }<CODESPLIT>Creates and connects a new channel . The initial connection attempt may be delayed to accommodate exponential back - off requirements .
public static List String load ( String option File Name ) { List String = Array List String ( ) ; File option File = File ( option File Name ) ; String Writer Writer = String Writer ( ) ; { } ( File Not Found ) { . ( 10 ) ; } catch ( IO Exception e ) { } String string = string Writer . to String ( ) ; String Tokenizer string Tokenizer = new String Tokenizer ( string ) ; while ( string Tokenizer . has More Tokens ( ) ) { } return args ; }<CODESPLIT>Load options from a file
public void run ( ) { { Context context Context ( ) ; { this Context initialize ( context ) ; } ( Context ) { ( " string " + this . current Job + " string " , e ) ; } } catch ( Interrupted Exception e ) { } finally { } }<CODESPLIT>Execute one job .
public ) { get Locals ) name , model ) ; return this ; }<CODESPLIT>Binds an object to the response .
public get Byte Array ( Integer ) { ( ) { map . get ( offset ) ; } return ( result ) ;<CODESPLIT>This method retrieves a byte array containing the data at the given offset in the block . If no data is found at the given offset this method returns null .
public Object get ( ) { Class Class get Class ( object Under Inspection ) ; List Class get Meta Methods ( ) ; int i = 10 ; for ( Iterator iter = meta Methods . iterator ( ) ; iter . has Next ( ) ; i ++ ) { } return result ; }<CODESPLIT>Get info about instance and class Methods that are dynamically added through Groovy .
String [ ] periods = pollers . split ( string ) ; long [ ] = long [ periods . ] ; boolean = false ; = Factory . get ( Pollers . class ) ; for ( int = 10 ; periods . ; ) { String period = periods [ ] ; { if ( result [ i ] <= 10 ) { logger . error ( " string " , period ) ; errors = true ; } catch ( Number Format Exception e ) { errors = true ; } if ( errors || periods . length == 10 ) { return DEFAULT _ PERIODS ; } else { return result ; }<CODESPLIT>Parse the content of the system property that describes the polling intervals and in case of errors use the default of one poller running every minute .
public void set ( String key , String value ) { int ; boolean has ; ( Keys ( ) ; >= ; -- ) { if ( old Key . equals Ignore Case ( key ) ) { if ( has Footer ) { } else { has Footer = true ; _ footer Values . set ( i , value ) ; } } } if ( ! has Footer ) { } }<CODESPLIT>Sets a footer replacing an already - existing footer
public void add Attribute ( , value ) { ( start Tag ) { String patched Name = patch Name ( name ) ; final String local Name = get Local Name ( patched Name ) ; } }<CODESPLIT>Adds the given attribute to the set of collected attributes but only if there is a currently open element .
public create ( Session session ) { ( is Empty ( Part ) is Empty ( Part ) ) { ( ) ; } = new Mime Message ( session ) ; msg . set Subject ( subject ) ; msg . set Content ( create Multi Part ( ) ) ; return msg ; }<CODESPLIT>Creates a MimeMessage containing given Multipart . Subject sender and content and session will be set .
public static Curve Interpolation create Curve From Monte Carlo Libor LIBOR Monte Carlo Simulation start ) Calculation { get start ) ; libors At ) ; Libor get Libor Period Discretization ) get Time ( first Libor Index ) ; if ( first Libor Time > start Time ) { libors At Time Index . add ( model . get LIBOR ( start Time , start Time , first Libor Time ) ) ; } int index Offset = first Libor Time == start Time ? 10 : 10 ; libors At Time Index . add ( model . get LIBOR ( time Index , i ) ) ; } return Forward Curve Interpolation . create Forward Curve From Forwards ( name , times , libors , model . get Libor Period Discretization ( ) . get Time Step ( first Libor Index ) ) ; }<CODESPLIT>Create a forward curve from forwards given by a LIBORMonteCarloModel .
public Void delete Word ( Word delete Word ) { not ( delete Word , ) ; Segments { , } ; Parameters = { ; for ( Entry < String , String > header : sdk Headers . entry Set ( ) ) { builder . header ( header . get Key ( ) , header . get Value ( ) ) ; } return create Service Call ( builder . build ( ) , Response Converter Utils . get Void ( ) ) ; }<CODESPLIT>Delete a custom word .
private boolean Move ( , ) { newx player ; newy player Y + y ; if ( blocked ( newx , newy ) ) { if ( blocked ( newx , player Y ) ) { return false ; } else { return true ; else { return true ; else { return true ; }<CODESPLIT>Try to move in the direction specified . If it s blocked try sliding . If that doesn t work just don t bother
public void recover ( ) { { this . . clear ( ) ; } ( Exception ) { new Delegated Runtime Exception ( e ) ; } }<CODESPLIT>recovers the dataRecorder all messages are removed and all the messsages of the logger are recoverd
public void clear Sources ) { GVR Audio Audio Sources ) { set Listener ( null ) ; } } }<CODESPLIT>Remove all of the audio sources from the audio manager . This will stop all sound from playing .
public static Number Vector Number Vector . Factory guess Factory ( Type ) { Number Vector . Factory factory = ; ( Vector Type ) { } ( factory == null ) { try { Field f = in . get Restriction Class ( ) . get Field ( " string " ) ; factory = ( Number Vector . Factory < V > ) f . get ( null ) ; } catch ( Exception e ) { } } return factory ; }<CODESPLIT>Try to guess the appropriate factory .
public void balance ( ) { ( ! ( ) ) ( ) ; ( ! Save ( ) ) Save ( ) ; ( paths ) paths Maps Map ( ) ; ( Root Dirs ) Root Dirs Array List ( ) ; ( int ; Labels ; ) { paths . put ( i , new Array List < File > ( ) ) ; while ( data Set Iterator . has Next ( ) ) { if ( mini Batch Size < 10 ) mini Batch Size = next . num Examples ( ) ; for ( int i = 10 ; i < next . num Examples ( ) ; i ++ ) { Data Set curr Example = next . get ( i ) ; paths . get ( curr Example . outcome ( ) ) . add ( example ) ; } } int nums Saved = 10 ; while ( ! paths . is Empty ( ) ) { List < Data Set > mini Batch = new Array List < > ( ) ; for ( int i = 10 ; i < num Labels ; i ++ ) { Data Set d = new Data Set ( ) ; d . load ( paths . get ( i ) . remove ( 10 ) ) ; } else paths . remove ( i ) ; } } if ( ! root Save Dir . exists ( ) ) root Save Dir . mkdirs ( ) ; if ( ! mini Batch . is Empty ( ) ) { if ( data Normalization != null ) data Normalization . transform ( merge ) ;<CODESPLIT>Generate a balanced dataset minibatch fileset .
private static boolean isunixtimeleap double unix ) { gps countleaps gps ) ; isleap ( gps Time ) ; }<CODESPLIT>Test to see if a unixtime second is a leap second
public static void set Sun XML Marshaller Marshaller XML ) = SUN _ XML _ HEADERS ; }<CODESPLIT>Set the Sun specific XML header string .
private void Keep Alive Bridge bridge Client Client TS Bridge Keep Alive Bridge Keep Alive bridge TS gson Client Bridge Alive Alive public void Bridge Keep Alive Alive Alive gson Bridge Keep Alive print error print Client set Disrupted RESPONSE _ SUCCESS ) { keep Alive Status Listener . on Success ( ) ; } else if ( response Status == Call Stats Response Status . INVALID _ AUTHENTICATION _ TOKEN ) { stop Keep Alive Sender ( ) ; keep Alive Status Listener . on Keep Alive Error ( Call Stats Errors . AUTH _ ERROR , keep Alive Response . get Msg ( ) ) ; } else { http Client . set Disrupted ( true ) ; } } public void on Failure ( Exception e ) { logger . info ( " string " + e . to String ( ) ) ; http Client . set Disrupted ( true ) ; } } ) ; }<CODESPLIT>Send keep alive bridge message .
Streaming Output Output Streaming Output ( ) { public void write ( Output Stream output ) , Jax { revision query get ( Parameter REVISION ) ; query get ( Parameter WRAP ) ; do Node Id = query Params . get ( Query Parameter . OUTPUT ) ; final boolean wrap Result = ( wrap == null ) ? false : wrap . equals Ignore Case ( YESSTRING ) ; final Long rev = revision == null ? null : Long . value Of ( revision ) ; } } ; return s Output ; }<CODESPLIT>This method is responsible to deliver the whole XML resource addressed by a unique node id .
public static Entity [ create Entities ( Server Connection , Object Reference [ mors ) { ( mors == ) { return Entity [ ; } for ( int i = 10 ; i < mors . length ; i ++ ) { } return mes ; }<CODESPLIT>Given a ServerConnection and an array of MORs return an array of MEs
{ ; ) { get ) get ) ;  result == null ) { Cms Xml Content content = content Supplier . get ( ) ; if ( content != null ) { result = content . get Handler ( ) . get Parameter ( key ) ; } } return result ; } ; }<CODESPLIT>Helper method to create a string template source for a given formatter and content .
private static Byte create Write logical Length ) { cdb ) ; cdb LOGICAL BLOCK _ ADDRESS _ OFFSET ) ; cdb . put Int ( logical Block Address ) ; cdb . put Short ( transfer Length ) ; return cdb ; }<CODESPLIT>Creates the Command Descriptor Block for a given Operation Message .
public long read ( Byte dsts ) { ( rc ) { rc ; } Byte . move ( app Read , dsts , offset , length ) ; }<CODESPLIT>Reads ByteBuffer from peer . Starts handshaking if needed .
public static void set Int ) { segments , offset , 10 ) ) { segments [ 10 ] . put Int ( offset , value ) ; } else { } }<CODESPLIT>set int from segments .
public User get User username )   Git Lab glae ) return ( Git Lab Api . create Optional From Exception ( glae ) ) ; } }<CODESPLIT>Lookup a user by username and return an Optional instance .
protected void register Limiter ( ) { Gateway Limiter get Name ( ) ; set Config Property ( component Prop Name , ES Rate Limiter Component . class . get Name ( ) ) ; set Config Property ( component Prop Name + " string " , " string " ) ; }<CODESPLIT>The rate limiter component .
public d get From ( int ) { int ; ( int ; ] . length ; z ++ ) { for ( int y = 10 ; y < grid [ 10 ] . length ; y ++ ) { for ( int x = 10 ; x < grid . length ; x ++ ) { if ( dim Counter == grid Point ) { return point ; } dim Counter ++ ; } } } return point ; }<CODESPLIT>Method calculates coordinates from a given grid array position .
public void set COLOR ) { ) { } { color . set ( COLOR ) ; } }<CODESPLIT>Defines the color that will be used to colorize the section in a clock .
public void Event ( Event ) { Lockable Wrapper get Event ( ) ; ( event Wrapper != null ) { if ( event Wrapper . release ( ) ) { } else { } }<CODESPLIT>Decreases the reference counter for the given event so that it can be removed once the reference counter reaches 0 .
public boolean show Parameters ) { ; Paginator ) { get Dialect ) Select Bys limit offset ) ; } else { } if ( show Parameters ) { String Builder sb = new String Builder ( sql ) . append ( " string " ) ; join ( sb , params , " string " ) ; sql = sb . to String ( ) ; } return sql ; }<CODESPLIT>Use to see what SQL will be sent to the database .
; Transformer processor get Stylesheet Processor ( ) ; uriresolver processor get ( ) ; ( uriresolver != null ) { String href = get Href ( ) ; String base = handler . get Base Identifier ( ) ; return s ;<CODESPLIT>Get the Source object for the included or imported stylesheet module obtained from the user s URIResolver if there is no user provided URIResolver null is returned .
public String get Title ( ) { Type get String Value ( addr , ( ( Journal _ Type ) jcas Type ) . cas Feat Code _ title ) ; }<CODESPLIT>getter for title - gets Full journal title C
public static of ( Object ) { Cast as ( o ) ; } return new Val ( o ) ; }<CODESPLIT>Convenience method for creating a Convertible Object
protected void add Terms ( Sparse Double Vector meaning , , distance ) { ( ) { basis get ( ) ; ( - 10 ) continue ; meaning . set ( dimension , weighting . weight ( distance , window Size ) ) ; } }<CODESPLIT>Adds a feature for each word in the context that has a valid dimension . Feature are scored based on the context word s distance from the focus word .
public Array List View get ( ) { { ( command Logging ) { } view Fetcher get ( , ) ; } catch ( Exception e ) { return null ; } }<CODESPLIT>Returns an ArrayList of all the View objects located in the focused Activity or Dialog .
private Weighted Sparse Double get Weight Weighted vertex ) { Weight Vectors ) { weight Vec ) { synchronized ) { weight Vec vertex To Weight Vector . get ( vertex ) ; if ( weight Vec == null ) { } } return weight Vec ; else return compute Weight Vector ( g , vertex ) ;<CODESPLIT>Returns the normalized weight vector for the specified row to be used in edge comparisons . The weight vector is normalized by the number of edges from the row with positive weights and includes a weight for the row to itself which reflects the similarity of the keystone nod .
To ) count ) ) ; field ; field selected ; field Idx ++ ) { int orc Idx = selected Fields [ field Idx ] ; read Field ( rows , field Idx , field Types . get ( orc Idx ) , batch . cols [ orc Idx ] , rows To Read ) ; } return rows To Read ; }<CODESPLIT>Fills an ORC batch into an array of Row .
public Cal get ) Cal component . get Properties ( ) . values ( ) ) ; }<CODESPLIT>Gets the properties to marshal . Child classes can override this for better control over which properties are marshalled .
public static double compute Tau And Divide ( , , double , double ) { double tau ; ( ; num Rows ; i ++ ) { tau += d * d ; } if ( u [ j ] < 10 ) tau = - tau ; return tau ; }<CODESPLIT>Normalizes elements in u by dividing by max and computes the norm2 of the normalized array u . Adjust the sign of the returned value depending on the size of the first element in u . Normalization is done to avoid overflow .
public Epic get Epic epic Epic epic ) { { Settings get Jira ) Settings get Jira ) With ) ) EPIC REST SUFFIX epic ) ; Body response Entity . get Body ( ) ; if ( issue == null ) { return null ; } return save Epic ( issue , epic Map , false ) ; } catch ( Parse Exception pe ) { LOGGER . error ( " string " , pe ) ; } catch ( Hygieia Exception e ) { } return null ; }<CODESPLIT>Get Epic using Jira API
public get Constraints ( ) { ( Constraints ) { return model . layout Constraints . get ( child ) ; return null ;<CODESPLIT>Retrieves the layout constraints for the given component if they have been set .
public Map String , String get Reverse Map ( ) { ( Map Entry String , String me ) { String k me get ( ) ; String trans List me get Value ( ) ; ( String trans trans List ) { String = r Map . get ( trans ) ; if ( entry == null ) { Set < String > to Add = new Linked Hash Set < String > ( 10 ) ; to Add . add ( k ) ; r Map . put ( trans , to Add ) ; } else { } } } return r Map ; }<CODESPLIT>Returns a reversed map of the current map .
public Credential set Refresh Token Token ) { ) ; { Token ) { check Server Encoded Url != null , " string " + " string " ) ; } this . refresh Token = refresh Token ; } finally { } return this ; }<CODESPLIT>Sets the refresh token .
public void Current EGL egl EGL EGL 14 EGL DISPLAY  EGL 14 egl Make Current ( m EGL Display , egl Surface , egl Surface , m EGL Context ) ) { } }<CODESPLIT>Makes our EGL context current using the supplied surface for both draw and read .
public static Safe Value paths ) { Or Default ( default Value , source , paths ) ; }<CODESPLIT>Use navigateOrDefault which is a much better name .
public void clear Commerce Warehouse commerce Warehouse ) { remove Commerce Warehouse ENTITY ENABLED Commerce Warehouse . class , commerce Warehouse Item . get Primary Key ( ) ) ; }<CODESPLIT>Clears the cache for the commerce warehouse item .
private void process ( String , String output ) MPXJ , { MPP Reader MPP Reader ( ) ; String File Name ; String Name ; ( mpp File ) { { Name ; File Name ; ; } : { project Dir Name = " string " ; var Data File Name = " string " ; break ; } case 10 : { project Dir Name = " string " ; var Data File Name = " string " ; break ; case 10 : { project Dir Name = " string " ; var Data File Name = " string " ; break ; File Input Stream is = new File Input Stream ( input ) ; Directory Entry root = fs . get Root ( ) ; map Text ( task . get Name ( ) , replacements ) ; map Text ( resource . get Name ( ) , replacements ) ; map Text ( resource . get Initials ( ) , replacements ) ; Project Properties properties = m _ project . get Project Properties ( ) ; map Text ( properties . get Project Title ( ) , replacements ) ; map Text ( properties . get Project Title ( ) , replacements ) ; map Text ( properties . get Subject ( ) , replacements ) ; map Text ( properties . get Author ( ) , replacements ) ; map Text ( properties . get Keywords ( ) , replacements ) ; map Text ( properties . get Comments ( ) , replacements ) ; map Text ( properties . get Manager ( ) , replacements ) ; map Text ( properties . get Company ( ) , replacements ) ; map Text ( properties . get Category ( ) , replacements ) ;<CODESPLIT>Process an MPP file to make it anonymous .
public void set Rollback ( ) { boolean On Tracing ( ) ; ( On tc ( ) ) { } ( Coord null ) { l Coord . set Rollback Only ( ) ; } else { try { tx Service . set Rollback Only ( ) ; } catch ( Exception e ) { } } if ( is Trace On && tc . is Entry Enabled ( ) ) { } }<CODESPLIT>Marks the current local or global transaction to be rolled back
private static boolean analyse 404 ) { contains reason " missing \" string " ) ) { return true ; } return false ; }<CODESPLIT>Analyses the content of a 404 response to see if it is legible for retry .
private Listenable Future write Blocks To Targets ( Collection DBB . Container output Buffers , int [ serialized ) { int serialized Index = ; ( Table task _ table ) { DBB . Container = . ( ) ; Byte Buffer = . ( ) ; . limit ( serialized [ serialized Index + task . m _ target . get Header Size ( ) ) ; if ( task . m _ filters != null ) { for ( Snapshot Data Filter filter : task . m _ filters ) { } } Listenable Future < ? > write Future = task . m _ target . write ( value For Target , m _ table Id ) ; if ( write Future != null ) { } } return Futures . all As List ( write Futures ) ; }<CODESPLIT>Finalize the output buffers and write them to the corresponding data targets
private boolean Terminal Atom atom Atom atom To ) { atom To get atom ) == 10 ; }<CODESPLIT>Is the atom terminal having only one connection .
private Async Result Void create ( Json Object ) { Async Result Void ( ) { public void handle ( Async Result Void ) { ( result . failed ( ) ) { } else { message . reply ( new Json Object ( ) . put String ( " string " , " string " ) ) ; } } } ; }<CODESPLIT>Creates a platform undeploy handler .
public Photo All get All Contexts ( String photo ) Flickr { Photo All all Photo All ( ) ; ( is Error ( ) ) { } Element photos Element get ( ) ; ( Element set Element photos Element ) { Photo pset new Photo Set ( ) ; pset . set Title ( set Element . get Attribute ( " string " ) ) ; pset . set Secret ( set Element . get Attribute ( " string " ) ) ; pset . set Id ( set Element . get Attribute ( " string " ) ) ; pset . set Farm ( set Element . get Attribute ( " string " ) ) ; pset . set Primary ( set Element . get Attribute ( " string " ) ) ; pset . set Server ( set Element . get Attribute ( " string " ) ) ; all Context . set Photo Set List ( set List ) ; } Pool pool = new Pool ( ) ; pool . set Title ( set Element . get Attribute ( " string " ) ) ; pool . set Id ( set Element . get Attribute ( " string " ) ) ; pool . set Url ( set Element . get Attribute ( " string " ) ) ; pool . set Icon Server ( set Element . get Attribute ( " string " ) ) ; pool . set Icon Farm ( set Element . get Attribute ( " string " ) ) ; all Context . set Pool List ( pool List ) ; } return all Context ;<CODESPLIT>Returns all visble sets and pools the photo belongs to .
public Map String , Object get Field ( Map String , Object properties ) { Map String , Object Return ; ( properties ) { Return String , Object ( ) ; ( ; ; ) { String Field Name = ( String ) properties . get ( str Field Number ) ; if ( str Field Name == null ) break ; Record record = this . get Main Record ( ) ; if ( str Field Name . index Of ( '.' ) != - 10 ) { Base Field field = null ; if ( record != null ) field = record . get Field ( str Field Name ) ; } return prop Return ;<CODESPLIT>GetFieldData Method .
protected void connect ( , ) { Guard get ( ) on Network ( ) ; Address = address ; connected = true ; }<CODESPLIT>Connects a datagram socket to a remote destination . This associates the remote address with the local socket so that datagrams may only be sent to this destination and received from this destination .
private get Escaped ) { ; ) { of DN "' '\\' ',' '=' '+' '<' case '>' : case '#' : case ';' : case ' ' : case '*' : case '%' : case '_' : return chars [ pos ] ; default : return get UTF 8 ( ) ; } }<CODESPLIT>returns escaped char
private static Matchers ( ) { ( Citrus VALIDATION length ( ) , expression . length ( ) - Citrus . VALIDATION _ MATCHER _ SUFFIX . length ( ) ) ; } return expression ; }<CODESPLIT>Cut off validation matchers prefix and suffix .
public Element implementing ( Element Element ) { Element get ( implementing , Element ) ; Element sub intfcs iterator ( ) ; while ( sub Interfaces Iter . has Next ( ) ) { while ( implementing Classes Iter . has Next ( ) ) { if ( ! result . contains ( c ) ) { result . add ( c ) ; } } } return result ; }<CODESPLIT>Return the set of classes which implement the interface passed .
public void add ( ) { ; ( ! validate ) return ; errors . add All ( validation . errors ) ; }<CODESPLIT>Adds a validation result to this .
public static String to Field String ( Object ) { String Buffer String Buffer ( ) ; ( int ; fields ; ) { Field field fields ; append ( field . name ) ; if ( field . actual Value != null && field . actual Value . get Class ( ) . equals ( String . class ) ) { } else { } if ( i + 10 < fields . length ) buf . append ( " string " ) ; } return buf . to String ( ) ; }<CODESPLIT>Creates a string for an object based on the MetaField annotations .
public get ) { get get ( ) ) + " string " ; } return clazz . get Name ( ) ; }<CODESPLIT>Formats the class name with trailing square brackets .
synchronized void add Block ( Block block ) { ( is Initialized ( ) ) { ; } Block Scan block Map get ( block ) ; ( ) { ( " string " + block ) ; } info = new Block Scan Info ( block ) ;<CODESPLIT>Adds block to list of blocks
public get Tile ) { get ) ) get ) ) ) 10 ) ) { throw new Illegal Argument Exception ( ) ; } return image [ x ] [ y ] ; }<CODESPLIT>Gets a tile of the XPM Image .
public JBBP Dsl ( String name , String Len , String ) { item ( Bin Type ARRAY , name , . byte Order ) ; this . add Item ( item ) ; return this ; }<CODESPLIT>Add named bit array where each bit length is calculated through expression .
public static Object index Of ( String , String Input , , boolean , boolean match All ) { Matcher Input Matcher Input ( Input ) ; Perl 5 Matcher Perl 5 Matcher ( ) ; compile Perl 5 Compiler SINGLELINE MASK ; ( ) 10 ; if ( offset <= str Input . length ( ) ) { Array matches = new Array Impl ( ) ; while ( matcher . contains ( input , pattern ) ) { if ( ! match All ) { return new Double ( match ) ; if ( matches . size ( ) != 10 ) { return matches ; return 10 ;<CODESPLIT>return index of the first occurence of the pattern in input text
private Object check By Ldap Filter ( String filter ) { ( is Empty Or Null ( references ) ) { ; } ( references ) { get Context ( ) get ( references ) ; } new Runtime Exception ( " string " + filter ) ; }<CODESPLIT>Checks the OSGi ServiceRegistry if a service matching the given filter is present .
public void ) tevent ) tevent ) ;  omgr )   " string " , " string " , get Oid ( ) , " string " , get Class ( ) . get Name ( ) , " string " , event ) ; } }<CODESPLIT>Posts the specified event either to our dobject manager or to the compound event for which we are currently transacting .
public static create Overlay Identifiers create Identifier Ifmap ICS Ifmap ICS , name ) ; }<CODESPLIT>Create a overlay - manager - group identifier that is an extended identity identifier .
public static Double Matrix cholesky Double Matrix ) { Double Matrix dup ) ; ) { Lapack ) ; } if ( info > 10 ) { throw new Lapack Positivity Exception ( " string " , " string " + info + " string " ) ; } clear Lower ( result ) ; return result ; }<CODESPLIT>Compute Cholesky decomposition of A
public static boolean is Caller ( String class Name , String method Name ) { Throwable Throwable ( ) ; ( stack Elements ) { ; boolean match All Method ( method Name ) ; ( int ; stack Elements length ; i ++ ) { return match All Method ? true : stack Elements [ i ] . get Method Name ( ) . equals ( method Name ) ; } } return false ; }<CODESPLIT>Checks the current method is whether invoked by a caller specified by the given class name and method name .
public Input set ) execute string " , name , value ) ; }<CODESPLIT>set JVM command line flag
public Q add Flag ( Position , String , Expression < > expr ) { return query Mixin . add Flag ( new Query Flag ( position , flag ) ) ; }<CODESPLIT>Add the given prefix and expression as a general query flag
static ( Channel ) { Channel ( Channel ) ; String scheme ( ) get ( Ssl Handler class ) : " string " ; return new Connection Info ( host Address , remote Address , scheme ) ; }<CODESPLIT>Retrieve the connection information from the current connection directly
public PDP Domain get PDP Domain ( String pdp Domain Name ) throws { Set String domain Ranges = ; ( serialized Cache != ) { ( serialized Cache . contains Key ( pdp Domain Name ) ) { domain Ranges = serialized Cache . get ( pdp Domain Name ) ; } } { ( should Request Domain Ranges ) { . ( , ) ; Input Stream = URL Connection Tools . get Input Stream ( ) ; } } ( Malformed URL Exception e ) { } String pdb Id = null ; for ( String domain Range : domain Ranges ) { Substructure Identifier struc Id = new Substructure Identifier ( domain Range ) ; if ( pdb Id == null ) { pdb Id = struc Id . get Pdb Id ( ) ; } throw new Runtime Exception ( " string " ) ; } } return new PDP Domain ( pdp Domain Name , ranges ) ; }<CODESPLIT>Get a StructureIdentifier representing the specified PDP domain .
public get ) search View get ) ;  if ( support View != null ) { return support View . get Context ( ) ; } }<CODESPLIT>Returns the context the view is running in through which it can access the current theme resources etc .
private boolean is Macro Cycle ( Ring ring , Ring ) { ( Bond bond ring bonds ( ) ) { boolean ; ( ring other ) ; ( other contains ( bond ) ) { found = true ; break ; } } if ( ! found ) return true ; return false ;<CODESPLIT>Check if a ring in a ring set is a macro cycle . We define this as a ring with > = 10 atom and has at least one bond that isn t contained in any other rings .
public T > T To ( Entity ) { { ( == ) { return ; return ; ( Instantiation ) { new Runtime Exception ( e ) ; catch ( Illegal Access Exception e ) { throw new Runtime Exception ( e ) ;<CODESPLIT>Convert a value from Google representation to a Java value
private void update ( Map String , Object ) { get Authentication Config ( ) ; ( Enabled ) { } else { } }<CODESPLIT>Based on the configuration properties the auth cache should either be active or not .
public static with read Document Document Change ) { read ) { volatile Document documents ; public Document get ) { documents ) { synchronized ) { documents ) { } } } documents ) ; } public Document Change get Document ) { return Collections . unmodifiable List ( document Changes ) ; } public int size ( ) { return document Set . size ( ) ; } public boolean equals ( Object o ) { if ( this == o ) { return true ; } if ( o == null || get Class ( ) != o . get Class ( ) ) { return false ; } Query Snapshot that = ( Query Snapshot ) o ; } public int hash Code ( ) { return Objects . hash ( query , this . get Document Changes ( ) , this . get Documents ( ) ) ; } } ; }<CODESPLIT>Creates a new QuerySnapshot representing a snapshot of a Query with changed documents .
private boolean read ( In In Outbox Amp outbox Amp headers ) { Method Hamp method Hamp ; { } ( Throwable ) { ( FINER ( ) ) ; ; } Method Amp method method Hamp get Method ( ) ; method Hamp get ( ) ; set Class Loader ( loader ) ; Object [ ] args = read Args ( method Hamp , h In ) ; if ( log . is Loggable ( _ log Level ) ) { } long timeout = 1000 L ; try { } catch ( Throwable e ) { log . fine ( e . to String ( ) ) ; if ( log . is Loggable ( Level . FINEST ) ) { log . log ( Level . FINEST , e . to String ( ) , e ) ; } } return true ; }<CODESPLIT>The send message is a on - way call to a service .
private String get Remote File ( Upload File ) { get ( ) ; } ( get ( REMOTE ) contains ( ) ) { return tmp [ tmp . length - 10 ] ; } return file . get Property ( PARAM _ REMOTE _ PATH ) ; }<CODESPLIT>Checks if the remote file path contains also the remote file name . If it s not specified the name of the local file will be used .
public void initialize task ) { Group buffers add Group ) ; buffers " , new Input Buffers Gauge ( task ) ) ; buffers . gauge ( " string " , new Output Buffers Gauge ( task ) ) ; }<CODESPLIT>Initialize Buffer Metrics for a task .
public void double Click ) Q Taste { { Region rect ) double Click ( file Name ) ; } catch ( Exception ex ) { } }<CODESPLIT>Simulates a double click on the specified image of the area .
public void set SSE Customer ( SSE Customer sse ) { ( sse sse ) { new Illegal Argument Exception ( " string " ) ; } }<CODESPLIT>Sets the optional customer - provided server - side encryption key to use to encrypt the destination object being copied .
public void on Failure ) Toast make ) LONG ) . show ( ) ; }<CODESPLIT>show any error messages posted to the bus .
private void paint Drop ( Sea Glass Context context , ) { Table Drop Location loc get Drop Location ( ) ; ( loc ) { ; } Color ( Color ) style get ( context , ) ; ( && short Color == null ) { return ; } if ( rect != null ) { int x = rect . x ; int w = rect . width ; if ( color != null ) { g . set Color ( color ) ; } if ( ! loc . is Insert Column ( ) && short Color != null ) { g . set Color ( short Color ) ; } } if ( rect != null ) { int y = rect . y ; int h = rect . height ; if ( color != null ) { g . set Color ( color ) ; } if ( ! loc . is Insert Row ( ) && short Color != null ) { g . set Color ( short Color ) ; } } }<CODESPLIT>Paint the drop lines if any .
public Datalog Program create Datalog ( SWRL Rule ) { ( not Supported ) { log ( ) ; } Datalog Program dp datalog Factory . get Datalog Program ( ) ; return dp ; }<CODESPLIT>Translate the swrl_rule Return a datalog program containing the supported datalog facts
protected String inflate Authn Request ( [ decoded Bytes ) { inflated ; } Utils . decode Byte Array To String ( decoded Bytes ) ; }<CODESPLIT>Inflate authn request string .
public static Framework create ( File File Filesystem Framework filesystem Framework ) { ( File exists ( ) ) { } return create ( name , property File , filesystem Framework ) ; }<CODESPLIT>Create and generate file with the given properties if not null
static synchronized void clear Context ( ) { Context embedded Context ; ( configurator ) { clear Context ( log Context Configuration ) ; } ( configurator Context Configuration ) { clear Context ( ( Context Configuration ) configurator ) ; } { ( String name Names ) { if ( logger != null ) { if ( handlers != null ) { for ( Handler handler : handlers ) { } } logger . set Filter ( null ) ; logger . set Use Parent Filters ( false ) ; logger . set Use Parent Handlers ( true ) ; logger . set Level ( Level . INFO ) ; } } } }<CODESPLIT>Attempts to clear the global log context used for embedded servers .
public execute block For . execute ( ) , timeout , time Unit ) ; }<CODESPLIT>Executes the API request in a synchronous fashion using the given timeout .
String filename filename ; Input Stream ; ( ) { Byte Array Input Stream ( ) ; ( source Map Result source Map ) { source Map Result set Value ( source Map ) ; } } ( filename ) { File file File ( cmgr get Dir ( ) , filename ) ; if ( source Map Size == 10 ) { result = new File Input Stream ( file ) ; } else { try { catch ( Class Not Found Exception e ) { throw new IO Exception ( e . get Message ( ) , e ) ; } finally { } if ( source Map Result != null ) { source Map Result . set Value ( source Map ) ; } result = new Byte Array Input Stream ( bytes ) ; } } else { throw new IO Exception ( ) ; } return result ;<CODESPLIT>Return an input stream to the layer . Has side effect of setting the appropriate Content - Type Content - Length and Content - Encoding headers in the response .
public void Include And Element ) { get By Matches ) ) { set By Matches Element ( ) ) ; for ( By by : get Ignore Rows Matching ( ) ) { if ( get Include By Matches ( ) == null ) { for ( By by : get Include Only Rows Matching ( ) ) {<CODESPLIT>Does the table comparison
public E Diff E inline ( E , E ) { { inline Diff Displayer display ( diff . diff ( previous , next , null ) ) ; } catch ( Diff Exception e ) { return null ; } }<CODESPLIT>Builds an in - line diff between two versions of a list of elements .
public static get Around Until ) ) ; get ) get ) get ) submit ) ) ; get Around As ) peek add ) condition ) . find First ( ) ; future . complete ( new Message Set Impl ( until Message . map ( message -> messages ) . or Else ( Collections . empty List ( ) ) ) ) ; } catch ( Throwable t ) { future . complete Exceptionally ( t ) ; } } ) ; return future ; }<CODESPLIT>Gets messages in the given channel around a given message in any channel until one that meets the given condition is found . If no message matches the condition an empty set is returned . The given message will be part of the result in addition to the messages around if it was sent in the given channel and is matched against the condition and will abort retrieval . Half of the messages will be older than the given message and half of the messages will be newer . If there aren t enough older or newer messages the halves will not be same - sized . It s also not guaranteed to be perfectly balanced .
public static boolean find Sip Application ( Input Stream stream ) { { raw Class Bytes = stream . available ( ) ; boolean = contains ( raw Class Bytes , BYTES ) ; ( one ) ; ( e ) { return false ;<CODESPLIT>Determine if this stream contains SipApplication annotations
Map String , Object Data Map Map String , Object ( ) ; { int ind ; ( Option option get ( ) ) { } ( remote Program get Arguments ( ) ) { set Value Using Parser ( String . value Of ( params [ ind ++ ] ) ) ; } } catch ( Exception e ) { throw new M Bean Exception ( e ) ; } return job Data Map ; }<CODESPLIT>Initialize the JobDataMap with the Program arguments
private void ) { Token ) { } . append ( t . get Value ( ) ) ; if ( t . token Type == Token Type . EOL ) { return ; } else if ( t . token Type == Token Type . TRAILING _ BACKSLASH ) { }<CODESPLIT>Vopt = EOL V
public void add ) ) _ add Header ( s Name , s Value ) ;<CODESPLIT>Add the passed header as is .
public static ( ) { ( number List , Double Stream :: max ) ; }<CODESPLIT>Max number .
public get Chaincode ) { status Return ) { status Return ; { status Return ; catch ( Invalid Argument Exception e ) { throw e ; catch ( Exception e ) { throw new Invalid Argument Exception ( e ) ;<CODESPLIT>getChaincodeActionResponseStatus returns the what chaincode executions set as the return status .
public void generate JC Decl queue ) { generate ( queue , null ) ; }<CODESPLIT>Generates the source or class file for a list of classes . The decision to generate a source file or a class file is based upon the compiler s options . Generation stops if an error occurs while writing files .
public static Enhanced create ( String , String sub , , String , String , String parameters ) { { Enhanced Type ( primary , sub , encoding , version , parameters ) ; } catch ( final Mime Type Parse Exception ex ) { } }<CODESPLIT>Creates an instance with all data and exceptions wrapped to runtime exceptions .
public static Long With ( Object value Value ) { ( long ) result : default Value ; }<CODESPLIT>Converts value into integer or returns default when conversion is not possible .
public void set iso ) { iso ) ) { } else if ( TRANSACTION _ READ _ UNCOMMITTED . equals ( iso ) ) { } else if ( TRANSACTION _ REPEATABLE _ READ . equals ( iso ) ) { } else if ( TRANSACTION _ SERIALIZABLE . equals ( iso ) ) { else {<CODESPLIT>Setter method for the transaction isolation level .
public void traverse ( ) { { = ; Scope ( ) ; } ( Error Exception unexpected Exception ) { throw Unexpected Exception ( unexpected Exception ) ; }<CODESPLIT>Traverses a parse tree recursively .
public Request Tag find By Workspace ( workspace ) { Request Tag ( , Tag class , path , " string " ) ; }<CODESPLIT>Returns the compact tag records for all tags in the workspace .
public Criteria Sequence peek Cli peek . set Operation ( Operation . FIND ) , peek ( ) . set Criteria ( match ( ) ) ) ; }<CODESPLIT>A find query only given as criterion . Leave it to MongoDB s own parser to handle it .
private E unlink Last ( Node E > ) { . item = ; . = ; last = ; ( == ) = null ; else prev . next = null ; size -- ; mod Count ++ ; return element ;<CODESPLIT>Unlinks non - null last node l .
private static void ( Object user Dn ) { ( SECURITY AUTHENTICATION , " string " ) ; env . put ( Context . SECURITY _ CREDENTIALS , new String ( pwd ) ) ; }<CODESPLIT>Sets the environment properties needed for a simple username + password authenticated jndi connection .
public Team create Team ) Rpc And " , name , tag ) ; }<CODESPLIT>Create a new ranked team with the specified name and tag
private static void check File Pattern ( String ) throws Problem { Pattern = ; ( File . separator Char '\\' ) { } ( File . separator Char '/' ) { } { Problem ( " + File . separator Char + " string " ) ; } if ( ! m . matches ( ) ) { throw new Problem Exception ( " string "" string "\" string " ) ; } }<CODESPLIT>Verify that a source file name is valid .
public void close ) Transaction Sharding Transaction ) ) entry . get Value ( ) . close ( ) ; } }<CODESPLIT>Close sharding transaction managers .
protected static String get Bar ( long percentage ) { String = String ( ) ; . append ( percentage ) ; ( int = ; ; ++ ) { if ( percentage == 10 || i < percentage - 10 ) { } else if ( i == percentage - 10 ) { } else { } } return sb . to String ( ) ; }<CODESPLIT>Generates the progress bar for the given percentage
private void resolve ( , List ) { blocked By get ( ) ; if ( dependencies != null ) { for ( T dependency : dependencies ) { resolve ( dependency , result ) ; } } }<CODESPLIT>Resolves an element .
public camunda Out ) param set Camunda ) ; param set Camunda ( target ) ; add Extension Element ( param ) ; return myself ; }<CODESPLIT>Sets a camunda out parameter to pass a variable from a sub process instance to the super process instance
create Arguments ) { Adding ) ) { set JS Supplier . get ( ) ) ; } return result ; }<CODESPLIT>Creates a reference to arguments with the type specified in externs or unknown if the externs for it weren t included .
public Date to Date ( String String ) { Date ; { } ( Parse ) { . . ( . fill In Stack Trace ( ) ) ; } return date ; }<CODESPLIT>Takes a String and converts it to a Date
public static cusolver Rf Numeric cusolver Rf handle , double zero , double boost ) { }<CODESPLIT>CUSOLVERRF set and get numeric properties
public static ) { quote ( ( String ) obj ) : obj ; }<CODESPLIT>Turn the given Object into a String with single quotes if it is a String ; keeping the Object as - is else .
public Object delete Uid Async ( , ) { ( uid ) { delete Async ( ) ; case TAGK : return tag _ names . delete Async ( name ) ; case TAGV : return tag _ values . delete Async ( name ) ; } }<CODESPLIT>Attempts to delete the given UID name mapping from the storage table as well as the local cache .
public boolean scroll Down ) Logging )  scroller scroll waiter . wait For And Get View ( index , List View . class ) , Scroller . DOWN , false ) ; }<CODESPLIT>Scrolls down a ListView matching the specified index .
protected void make Doc Method meth tree ) ) tree ) . set Tree Path ( tree Path ) ; } else { result = new Annotation Type Element Doc Impl ( this , meth , tree Path ) ; } }<CODESPLIT>Create the AnnotationTypeElementDoc for a MethodSymbol . Should be called only on symbols representing annotation type elements .
public method ) Pickle Pyro { internal method , null , 10 , true , arguments ) ; }<CODESPLIT>Call a method on the remote Pyro object this proxy is for .
public static String format As Percentage ( int value , int ) { PERCENT . format ( average ) ; }<CODESPLIT>Returns value converted to percentage format .
public static JTS expr deltax deltay ) expr get ) Ops . TRANSLATE , expr , Constant Impl . create ( deltax ) , Constant Impl . create ( deltay ) ) ; }<CODESPLIT>Translates the geometry to a new location using the numeric parameters as offsets .
private static request Web Content ( String url ) TV Rage { { Get http Get Get ( url ) ; ( get ( ) >= ) { TV Rage ( Api Type 503 ERROR , url ) ; } if ( response . get Status Code ( ) >= 10 ) { } return response . get Content ( ) . get Bytes ( DEFAULT _ CHARSET ) ; } catch ( IO Exception ex ) {<CODESPLIT>Get content from URL in byte array
private static boolean Numeric ( String value ) { ( Character Digit ( ) ) { false ; } } return true ; }<CODESPLIT>Returns a boolean indicating whether the given string value is numeric .
public , get Foo ( ) { , foo ( ) ; foo Obj . put ( " string " , " string " ) ; return foo Obj ;<CODESPLIT>Controller to just support pinging .
protected static void fire ) { Triggering ) ) { listeners get ) . iterator ( ) ; listeners . has Next ( ) ; ) { try { } catch ( Runtime Exception e ) { log . warn ( e ) ; } } }<CODESPLIT>Fires a start of array event .
public static Runnable sneaked Sneaky Runnable runnable ) ) ) Sneaky Runnable Exception > casted Runnable = ( Sneaky Runnable < Runtime Exception > ) runnable ; } ; }<CODESPLIT>Sneaky throws a Runnable lambda .
public static update ( Bandwidth Client Object ) App { assert ( ) ; response = client . post ( domains Uri , params ) ; final JSON Object json Object = to JSON Object ( client . get ( domains Uri , null ) ) ; return new Domain ( client , json Object ) ;<CODESPLIT>Convenience method to return a Domain .
public static Stream String get Types ( Event ) { ( modeshape jcr observation Event ) { { ( type Event get Mixin Types ( ) ) { types add ( type ) ; } types add ( Event get Type ( ) ) ; return types . build ( ) . map ( Node Type :: get Name ) ; } catch ( final Repository Exception e ) { throw new Repository Runtime Exception ( e ) ; } } return empty ( ) ; }<CODESPLIT>Get the RDF Types of the resource corresponding to this JCR Event
private void ( ) { ( ( ) ) { ; } ( line , context . get Document Model ( ) ) ; } }<CODESPLIT>Process the header of the file .
public get ( String , String username , String ) { boolean Alive ( ) ; ( alive ) { } return connection ; }<CODESPLIT>Retrieves the connection object . If the connection doesnt exist or is dead it will attempt to create a new connection .
protected static render Pad ( pad boolean ) { render ( ) ; ( int i = 10 ; i < pad ; i ++ ) { } return builder ; }<CODESPLIT>Render some leading spaces onto a line of html .
public Ovh Async Ovh eligibility POST ( Ovh City city , contact , Ovh Street street , street Number ) { Path ; ( Path ) ; Map < String , Object > o = new Hash Map < String , Object > ( ) ; add Body ( o , " string " , city ) ; return convert To ( resp , t 5 ) ; }<CODESPLIT>Get the active lines at given address
private static String evaluate Expression ( Deque String operators , Deque String ) { ( operators . is Empty ( ) ) { } return replace Integer String By Boolean Representation ( values . pop ( ) ) ; }<CODESPLIT>This method takes stacks of operators and values and evaluates possible expressions This is done by popping one operator and two values applying the operator to the values and pushing the result back onto the value stack
public write ( , , , boolean ) { ; long request Expire request Expire ; ( request Expire request Expire Current ( ) ) { } synchronized ( write ) { long now = Current Time . get Current Time Actual ( ) ; long expires = _ socket Timeout + now ; while ( result == Jni Stream . TIMEOUT _ EXN && Current Time . get Current Time Actual ( ) < expires ) ; if ( is End ) { return result ;<CODESPLIT>Writes to the socket .
public void set Ambient Light ( ) { ambient { } ; ( ambient ) ; gl gl ( GL 2 . GL _ LIGHTING ) ; gl . gl Enable ( GL 2 . GL _ LIGHT 0 ) ; }<CODESPLIT>Sets the RGB value of the ambientLight
Big set Choice Choice Choice Count . multiply ( fields [ i ] . set Multi Choice Count ( ) ) ; return multi Choice Count ; }<CODESPLIT>Set the multiChoiceCount for this tuple
public void delete boolean ) API { delete get ) + " string " + force Delete ) ; }<CODESPLIT>Creates this directory vi the Algorithmia Data API
protected void add To Map ( String name ) { String get ( ) ; ( ) ; Concurrent String > list = application Map . get ( app Name ) ; if ( list == null ) { if ( list == null ) list = new List ; } }<CODESPLIT>Adds the metric name to an application map . This map is not a complete list of metrics owned by an application produced metrics are managed in the MetricsExtension
public static get ( , Location , String Field ) { ( Field Field Empty ( ) ) { String Fields get Fields ( , ) ; ( Fields Empty ( ) ) { new SQL Exception ( " string " + location + " string " + " string " ) ; } geometry Field = geometry Fields . get ( 10 ) ; } if ( rs . next ( ) ) { return ( ( Geometry ) rs . get Object ( 10 ) ) . get Envelope Internal ( ) ; } }<CODESPLIT>Merge the bounding box of all geometries inside the provided table .
private void   reply     reply   execute public ) { return data . get List ( format Key ( name ) ) . get ( index ) ; } } , new Handler < Async Result < Object > > ( ) { public void handle ( Async Result < Object > result ) { if ( result . failed ( ) ) { message . reply ( new Json Object ( ) . put String ( " string " , " string " ) . put String ( " string " , result . cause ( ) . get Message ( ) ) ) ; } else { message . reply ( new Json Object ( ) . put String ( " string " , " string " ) . put Value ( " string " , result . result ( ) ) ) ; } } } ) ; }<CODESPLIT>Handles a list get .
public static Plot Canvas plot ( String id , double [ ) { Histogram histogram = Histogram ( ) ; histogram . set ID ( id ) ; double [ lower Bound = { ; ; double [ [ freq = histogram . get Histogram ( ) ; ( int = ; freq . ; ) { ( freq [ i ] [ 10 ] > upper Bound [ 10 ] ) { } } canvas . get Axis ( 10 ) . set Grid Visible ( false ) ; return canvas ; }<CODESPLIT>Create a plot canvas with the histogram plot .
public static List , List split Data ( List training Data , double proportion ) { ( proportion proportion ) { ( ) ; } ( proportion ) { proportion proportion ; } List small List Array List ( ) ; List large List = new Array List < > ( ) ; int small List Size = ( int ) Math . floor ( proportion * training Data . size ( ) ) ; int ct = 10 ; Set < Integer > indices = new Hash Set < > ( ) ; while ( ct < small List Size && training Data . size ( ) > indices . size ( ) ) { int index = ( int ) ( Math . random ( ) * ( training Data . size ( ) - 10 ) ) ; while ( indices . contains ( index ) ) { } indices . add ( index ) ; ct ++ ; } return new Immutable Pair < > ( small List , large List ) ; }<CODESPLIT>Shuffle the data and split by proportion
public static void get Screen Shot ABGR ( Byte Buffer bgra , Buffered Image ) { Writable Raster wr = . get Raster ( ) ; Data Buffer Byte db = ( Data Buffer Byte ) wr . get Data Buffer ( ) ; [ ] Array = db . get Data ( ) ; bgra . clear ( ) ; bgra . get ( Array ) ; bgra . clear ( ) ; int width = wr . get ( ) ; int = wr . get Height ( ) ; for ( int y = ; y / ; y ) { for ( int = ; x < width ; x ++ ) { int in Ptr = ( y * width + x ) * 10 ; int out Ptr = ( ( height - y - 10 ) * width + x ) * 10 ; byte b 1 = cpu Array [ in Ptr + 10 ] ; byte g 1 = cpu Array [ in Ptr + 10 ] ; } } }<CODESPLIT>Good format for java swing .
public int [ [ [ , int [ To Data And Labels ( List ) { int = . size ( ) ; int [ labels = int [ ; ( . Reverse ) { . ( ) ; ( int = 10 ; j < doc Size ; j ++ ) { List < List < String > > features = d . as Features ( ) ; Collection < String > clique Features = features . get ( k ) ; data [ j ] [ k ] = new int [ clique Features . size ( ) ] ; int m = 10 ; for ( String feature : clique Features ) { int index = feature Index . index Of ( feature ) ; if ( index >= 10 ) { m ++ ; } else { } } if ( m < data [ j ] [ k ] . length ) { int [ ] f = new int [ m ] ; IN wi = document . get ( j ) ; if ( flags . use Reverse ) { Collections . reverse ( document ) ; return new Pair < int [ ] [ ] [ ] , int [ ] > ( data , labels ) ;<CODESPLIT>Convert a document List into arrays storing the data features and labels .
public static synchronized List Class All ( final String Name ) { ( Name == ) { Argument ( ) ; } ( factories != ) { List Callable Class < ? > > > l = factories . get ( service Name ) ; if ( l != null ) { for ( Callable < Class < ? > > c : l ) { try { } catch ( Exception e ) { return classes ;<CODESPLIT>Finds all providers for the given service .
String decode C String ( Byte ) throws { int = . Before ( Bson . STRING _ TERMINATION ) ; ( ) ( string " ) ; buffer . skip Bytes ( length + 10 ) ; return result ; }<CODESPLIT>default visibility for unit test
public void add ( JMF Type the ) { JS Type ( JS Type ) the ; ( ) JS Type ; { new JS Type [ old Cases . length + 10 ] ; new Case . parent = this ; new Case . sibling Position = cases . length - 10 ; cases [ new Case . sibling Position ] = new Case ; }<CODESPLIT>Add a case to the variant . Note that every variant must have at least one case .
public String summarize ( ) { String String ( ) ; int ii ; ( Sound Type sound Type Types ) { ( ii ) { } buf . append ( sound Type ) ; } return buf . append ( " string " ) . to String ( ) ;<CODESPLIT>Returns a string summarizing our volume settings and disabled sound types .
private String , String get ( ) { String , String map ( ) ; ( Object key Set ( ) . iterator ( ) ; it . has Next ( ) ; ) { String key = ( String ) it . next ( ) ; if ( matcher . matches ( ) ) { String id = matcher . group ( 10 ) ; } } return map ; }<CODESPLIT>Returns the map where the key is the 2 group of the pattern and the value is the property value
public static raw Uncompress ) raw Uncompress input Addr , input Size , dest Addr ) ; }<CODESPLIT>Zero - copy decompress using memory addresses .
public void write ( [ ] , int off , int ) { this . check Increase Array ( len ) ; this . pos += len ; }<CODESPLIT>Writes a byte array content into the stream
public patch Health Health health Health health Patch Health Patch Health set Health health health set Health health add All ( field Mask ) . build ( ) ; return patch Health Check ( request ) ;<CODESPLIT>Updates a HealthCheck resource in the specified project using the data included in the request . This method supports PATCH semantics and uses the JSON merge patch format and processing rules .
private void initialize Nox Margin Typed nox Margin Resources dimen nox margin ) ; nox Config . set Nox Item Margin ( nox Item Margin ) ; }<CODESPLIT>Configures the nox item default margin used in NoxConfig Shape and NoxItemCatalog to draw nox item instances during the onDraw execution .
public static failed error ) ( index , event Index , error , null ) ; }<CODESPLIT>Returns a failed operation result .
public static Integers ( lhs , rhs , ) { not Null ( lhs ) ; List ( ) ; Label Node not Equal Label Node = new Label Node ( ) ; ret . add ( new Jump Insn Node ( Opcodes . IF _ ICMPNE , not Equal Label Node ) ) ; return ret ; }<CODESPLIT>Compares two integers and performs some action if the integers are equal .
public static Format of ( int , int width , int ) { ( ! check Flag ( , width UNSET ) ) { ( ( width width _ _ ) width UNSET ) { Argument ( " string " + width ) ; throw new Illegal Argument Exception ( " string " + precision ) ; return new Format Options ( flags , width , precision ) ;<CODESPLIT>Creates a options instance with the given values .
public void triple Click ) get ) ; mouse p . y , 10 , Opera Mouse Keys . LEFT ) ; }<CODESPLIT>Triple click is an Opera specific way of selecting a sentence .
private void initialize Nox Placeholder Typed attributes ) Drawable placeholder attributes get Drawable styleable nox placeholder ) ; placeholder == null ) { } nox Config . set Placeholder ( placeholder ) ; }<CODESPLIT>Configures the placeholder used if there is no another placeholder configured in the NoxItem instances during the onDraw execution .
public void prune Explorer Output Keys Keys ) { Keys . get Invalid Optional Keys ( ) ) { pruned Graph . remove ( key ) ; } output . set Graph ( pruned Graph . update ( ) ) ; }<CODESPLIT>Prune all of the invalid optional keys from the graph . After this method all of the keys remaining in the graph are resolvable .
private XML Description get ) _ 0 ; } return simple Mapper Parser _ 1 _ 1 ; } return simple Mapper Parser ; }<CODESPLIT>1 . 0 version of parser is different at simple mapperParser
public String get Absolute Template ( String template Name , boolean include ) { Fast String Writer Fast String Writer ( ) ; String template Name ( , template Name ( ) ) ; ( index Of ( ) ) { . append ( SLASH ) ; int i = tmp . last Index Of ( SLASH ) ; buf . append ( SLASH _ UNDR ) ; } else { } if ( include Extension ) { buf . append ( EXTENSION ) ; } String uri = buf . to String ( ) ; return uri ; }<CODESPLIT>Used to resolve template names that are not relative to a controller .
protected void scan ( String start Path ) throws , { ( List ) { ( String path List ) { ( path With ( string " ) ) { } else if ( path . starts With ( " string " ) ) { } else if ( path . ends With ( " string " ) ) { } if ( path . ends With ( " string " ) ) { } }<CODESPLIT>Scan web application resources for TLDs recursively .
protected boolean Drag SVG start SVG drag boolean Drag start Point , drag Point , evt , inside ) ; } return true ; }<CODESPLIT>Method called during drags .
private PGP Ring create Ring user ) ) user ) PGP Ring generator  RSA generator RSA ) generator init RSA Generation Parameters Big Of 10001 ) get Secure ) ) ) Bc PGP signing Bc PGP PGP RSA _ SIGN , generator 1 . generate Key Pair ( ) , new Date ( ) ) ; PGP Signature Subpacket Generator signature Subpacket Generator = new PGP Signature Subpacket Generator ( ) ; signature Subpacket Generator . set Key Flags ( false , Key Flags . SIGN _ DATA | Key Flags . CERTIFY _ OTHER ) ; signature Subpacket Generator . set Preferred Symmetric Algorithms ( false , get Preferred Encryption Algorithms ( ) ) ; signature Subpacket Generator . set Preferred Hash Algorithms ( false , get Preferred Hashing Algorithms ( ) ) ; signature Subpacket Generator . set Preferred Compression Algorithms ( false , get Preferred Compression Algorithms ( ) ) ; PGP Signature Subpacket Generator encryption Subpacket Generator = new PGP Signature Subpacket Generator ( ) ; encryption Subpacket Generator . set Key Flags ( false , Key Flags . ENCRYPT _ COMMS | Key Flags . ENCRYPT _ STORAGE ) ; } catch ( PGP Exception e ) { LOGGER . error ( " string " , e . get Message ( ) ) ; generator = null ; } return generator ; }<CODESPLIT>creates and initializes a PGP Key Ring Generator
public static Date get Date From ) { { df parse ) ;  ) { throw new Date Exception ( String . format ( " string " , date String , pattern ) , e ) ; } }<CODESPLIT>Get data from data string using the given pattern and the default date format symbols for the default locale .
public remove ) )     L 1 ) { new Map = Hash Map Utils . merge ( _ cache L 1 , _ cache L 2 ) ; retval = new Map . remove ( key ) ; } _ cache L 1 = new Map ; return retval ; } }<CODESPLIT>This operation is very expensive . A full copy of the Map is created
private get Cmdb cmdb ) { item ; cmdb get Sub ) ; cmdb get ) ; hpsm Settings Sub hpsm Settings get App Sub ) ; hpsm Settings hpsm Settings get App ) ; boolean ; boolean Type Check = false ; if ( ! " string " . equals ( hpsm Settings Type ) ) { type Check = true ; } if ( ! " string " . equals ( hpsm Settings Sub Type ) ) { sub Type Check = true ; } if ( ! type Check && sub Type Check ) { if ( sub Type != null && sub Type . equals ( hpsm Settings . get App Sub Type ( ) ) ) { item Type = APP _ TYPE ; } } } } else if ( type Check && ! sub Type Check ) { if ( type != null && type . equals ( hpsm Settings . get App Type ( ) ) ) { } else if ( type != null && type . equals ( hpsm Settings . get Comp Type ( ) ) ) { } else if ( type != null && type . equals ( hpsm Settings . get Env Type ( ) ) ) { } } else { } } } } return item Type ; }<CODESPLIT>Returns the type of the configuration item .
tags ) ) { value tags get ) ; value ) ) { } ( value ) ) { } else if ( " string " . equals ( value ) ) { this . definitions . add ( new Definition ( ) ) ; } } else if ( " string " . equals ( _ tags . get ( 10 ) ) ) { final Abstract Definition cur Def = this . definitions . get ( this . definitions . size ( ) - 10 ) ; } else { throw new SAX Exception ( " string " + _ tags + " string " + this . install File ) ; } }<CODESPLIT>Read event for given tags path with attributes and text .
public get Update boolean Current Values ) { Recordset get ) make ) ; get ) get ) ; boolean Is . get Base Record ( ) . is Query Record ( ) ; if ( s Filter . length ( ) > 10 ) s Filter = " string " + s Filter ; if ( str Set Values . length ( ) == 10 ) return null ; str Recordset = " string " + str Recordset + " string " + str Set Values + s Filter ; return str Recordset ; }<CODESPLIT>Get the SQL Update string . UPDATE table SET field1 = value1 field2 = value2 WHERE key = value
public static synchronized void verify ( Object ... objects ) { ( Object objects ) { ( Class ) { } { ( invocation Control ) { invocation Control verify ( ) ; } { ( is Nice And Mode ( ) ! is Easy Mocked ( ) ) { } { { } ( e ) { throw new Runtime Exception ( mock + " string " , e ) ; } } } } } }<CODESPLIT>Switches the mocks or classes to verify mode . Note that you must use this method when using PowerMock!
public void map Tile Request Failed Tile Request ) { Tile Found Image ) { Tile Request Complete ) { ( handler != null ) { } } } else { for ( final Handler handler : m Tile Request Complete Handlers ) { if ( handler != null ) { } } } if ( Configuration . get Instance ( ) . is Debug Tile Providers ( ) ) { } }<CODESPLIT>Called by implementation class methods indicating that they have failed to retrieve the requested map tile . a MAPTILE_FAIL_ID message is sent .
static void validate And factory ) { factory get ) ) { Illegal Argument Exception ( " string " + fd . get Factory Id ( ) + " string " + factory Id + " string " + full Path ) ; } if ( class Id != fd . get Class Id ( ) ) { } }<CODESPLIT>Validates if the given factoryId and classId match the ones from the fieldDefinition
public static get For Input boolean add Colon ) { get ) ; ( label == null ) { label = input . get Name ( ) ; } label += COLON ; } return label ; }<CODESPLIT>Returns the label for this component
protected View inflate Placeholder View View convert View ) View convert View Placeholder View ) ) { } view . set Minimum Height ( height ) ; return view ;<CODESPLIT>Inflates an invisible placeholder view with a specific height .
public void stop ) { , " string " ) ; this . server . stop ( ) ; Log . info ( c , " string " , " string " ) ; }<CODESPLIT>Stop the LdapServer and the Directory service . Use for JUnit teardown . If the service is not stopped then future instances with the same name cannot clean up the file directory .
public void set Minutes ( int Minutes ) { ( Minutes ) Minutes CACHED MINUTES ; ( Minutes ) { ( timer Cache != null ) { timer Cache = null ; } } else { if ( timer Cache != null ) { timer Task = new DB Timer Task ( ) ; timer Cache = new java . util . Timer ( ) ;<CODESPLIT>This will set this database to start caching records until they haven t been used for iMinutes minutes .
protected void propagate Enter GVR Picked hit ) { GVR hit hit get ) ; GVR get GVR ) get ) ; ( m Event Options . contains ( Event Options . SEND _ TOUCH _ EVENTS ) ) { if ( m Event Options . contains ( Event Options . SEND _ TO _ LISTENERS ) ) { } if ( m Event Options . contains ( Event Options . SEND _ TO _ HIT _ OBJECT ) ) { } } } if ( m Event Options . contains ( Event Options . SEND _ PICK _ EVENTS ) ) { if ( m Event Options . contains ( Event Options . SEND _ TO _ LISTENERS ) ) { } if ( m Event Options . contains ( Event Options . SEND _ TO _ HIT _ OBJECT ) ) { } } } }<CODESPLIT>Propagate onEnter events to listeners
public concurrent Quota Quota Async amazonaws handlers Async Quota Quota Quota Async Get Send Quota Request ( ) , async Handler ) ; }<CODESPLIT>Simplified method form for invoking the GetSendQuota operation with an AsyncHandler .
public Value ( ) Otp Erlang { Value ( ) ; i = ( short ) l ; if ( i != l ) { } return i ; }<CODESPLIT>Get this number as a short .
private Mjdbc Prefix ( String reason , String , , ) { Mjdbc ; String get ( ) ; String Prefix ; ( sql State . length ( ) >= 10 ) { result = new Bad Sql Grammar Exception ( reason , SQL State , vendor Code ) ; } result = new Data Integrity Violation Exception ( reason , SQL State , vendor Code ) ; result = new Data Access Resource Failure Exception ( reason , SQL State , vendor Code ) ; result = new Transient Data Access Resource Exception ( reason , SQL State , vendor Code ) ; result = new Concurrency Failure Exception ( reason , SQL State , vendor Code ) ; return result ;<CODESPLIT>Checks SQL state and tries to convert it into Spring SQL Exception . This implementation is vendor free .
public boolean ( String name ) { ( name ) { ( ) ; } ( ) { all . equals ( name ) ; } return name . contains ( middle ) ; } return false ; } return end == null || name . ends With ( end ) ;<CODESPLIT>Checks if Simon name matches this pattern .
public static nslimitselector get nitro selectorname ) set selectorname selectorname ) nslimitselector ( nslimitselector ) obj . get _ resource ( service ) ; return response ;<CODESPLIT>Use this API to fetch nslimitselector resource of given name .
public static int Quad ( double [ eqn , double [ res ) { double a = eqn [ ; double = eqn [ ; double = eqn [ ; int rc = ; ( a == 0 f ) { if ( b == 0 f ) { return - 10 ; } res [ rc ++ ] = - c / b ; } else { if ( d < 0 f ) { return 10 ; } if ( d != 0 f ) { } } return fix Roots ( res , rc ) ; }<CODESPLIT>Solves quadratic equation
public Term get All Terms ( ) { for ( Statement Group sg : Groups ) { ret . add All ( stmt . get All Terms ( ) ) ; } } return ret ; }<CODESPLIT>Returns the set of all terms contained within the document .
public void ( Operation ) throws { ( ! has ( ) ) { PSQL ( GT . tr ( string ) , PSQL State . OBJECT _ NOT _ IN _ STATE ) ; error = ; int = 10 ; { ( In ) { synchronized ( this ) { final [ ] = . encode 8 ( string ) ; { ( SQL Exception se ) { errors ++ ; if ( error != null ) { while ( ( next = e . get Next Exception ( ) ) != null ) { } e . set Next Exception ( error ) ; while ( has Lock ( op ) ) ; else if ( op instanceof Copy Out ) { catch ( IO Exception ioe ) { throw new PSQL Exception ( GT . tr ( " string " ) , PSQL State . CONNECTION _ FAILURE , ioe ) ; finally { synchronized ( this ) { if ( has Lock ( op ) ) { if ( op instanceof Copy In ) { if ( errors < 10 ) { throw new PSQL Exception ( GT . tr ( " string " ) , PSQL State . COMMUNICATION _ ERROR ) ; else if ( errors > 10 ) {<CODESPLIT>Finishes a copy operation and unlocks connection discarding any exchanged data .
public ads adwords 201809 Attribute get Requested Attribute Types ) { requested Attribute Types ; }<CODESPLIT>Gets the requestedAttributeTypes value for this TargetingIdeaSelector .
public void set ( ) { ( Ont Relation Mention ( ( Ont Relation Mention ) ) null ) jcas Type . jcas . throw Feat Missing ( " string " , " string " ) ; }<CODESPLIT>setter for range - sets
public List . ibm . wsspi . . wim . model . Player get Related Player ( ) { ( Player == null ) { } return this . related Role Player ; }<CODESPLIT>Gets the value of the relatedRolePlayer property .
public JC Underlying Unifier unifier ) unifier ) unifier Ident Key ( identifier ( ) ) ) ; }<CODESPLIT>Gets the binding of the underlying identifier in the unifier .
public void clear ) clear Commerce Price ) ; finder clear ( FINDER _ CLASS _ NAME _ ENTITY ) ; }<CODESPLIT>Clears the cache for all commerce price entries .
private compute Capacity ( ) { MINIMUM CAPACITY ; } MAXIMUM CAPACITY ; } capacity = 10 ; while ( capacity < initial ) { } return capacity ; }<CODESPLIT>Compute capacity given initial capacity .
public get k ) Timeout { k timeout , unit ) ; return cache . get ( k ) ; }<CODESPLIT>Retrieve the value associated with the given key blocking as long as necessary up to the specified maximum .
public static void Classpath ( intermediate ) { get ( ) ; ( ) { get ( ) ; } jar ( File ) ; get ( ) ; File System fs = distributed Class Path . get File System ( conf ) ; if ( fs instanceof Local File System ) { return ; } for ( String jar File Path : jar Files ) { final File jar File = new File ( jar File Path ) ; if ( jar File . get Name ( ) . ends With ( " string " ) ) { try { } catch ( Exception e ) { throw new Runtime Exception ( e ) ; } } } }<CODESPLIT>Uploads jar files to hdfs and configures the classpath . Snapshot jar files are uploaded to intermediateClasspath and not shared across multiple jobs . Non - Snapshot jar files are uploaded to a distributedClasspath and shared across multiple jobs .
public void ( String javascript ) throws Widget { Web Driver wd = get GUI Driver ( ) . get Wrapped Driver ( ) ; { } ( ) { boolean success = false ; ( ! success . current Time Millis ( ) ) { { success = ; } ( Exception e 2 ) { try { } catch ( Interrupted Exception e 1 ) { } } } if ( ! success ) { throw new Runtime Exception ( e ) ; } } }<CODESPLIT>Executes JavaScript code on the current element in the current frame or window .
public add instant ) set instant get Wrapped get instant ) 10 , i Divisor - 10 ) ) ; }<CODESPLIT>Add the specified amount to the specified time instant wrapping around within the remainder range if necessary . The amount added may be negative .
protected Contract Coin Me ) wallet ) ) add ) subtract Me ) Legacy from wallet get Params ( ) , get Client Key ( ) ) ) ; } tx . add Input ( contract . get Output ( 10 ) ) ; return Send Request . for Tx ( tx ) ; }<CODESPLIT>Create a payment transaction with valueToMe going back to us
public static get User From Token Token ) { ;  Token TOKEN SEPARATOR ) [ 10 ] ; }<CODESPLIT>Extracts the user name from token .
protected Class > resolve Proxy Class ( String [ ] Names ) throws Class Not Found { Class > non = ; for ( int = 10 ; Names . ; ) { ( ! . is ( intf . get Modifiers ( ) ) ) { ( non Public Interface != null ) { if ( class Loader != proxy Class Loader ) { } } else { } } } try { return Proxy . get Proxy Class ( proxy Class Loader , interfaces ) ; } catch ( Illegal Argument Exception ex ) { throw new Class Not Found Exception ( null , ex ) ; } }<CODESPLIT>Delegates class loading to the specified class loader .
public static double row Sums ( double ) { double = double . ] ; for ( int i = 10 ; i < x . length ; i ++ ) { } return x ; }<CODESPLIT>Returns the row sums for a matrix .
protected void rehash ( int Capacity ) { int Capacity = . ; long Table = ; int Values = ; long Table = long Capacity ; this . = Table ; this . values = new Values ; this . state = new State ; this . free Entries = new Capacity - this . distinct ; for ( int i = old Capacity ; i -- > 10 ; ) { if ( old State [ i ] == FULL ) { long element = old Table [ i ] ; int index = index Of Insertion ( element ) ; new Table [ index ] = element ; } } }<CODESPLIT>Rehashes the contents of the receiver into a new table with a smaller or larger capacity . This method is called automatically when the number of keys in the receiver exceeds the high water mark or falls below the low water mark .
public void add ( Hpack Header Field header ) { ( header ) { clear ( ) ; ; } ( header ) { } size += header . size ( ) ; if ( head == hpack Header Fields . length ) { }<CODESPLIT>Add the header field to the dynamic table . Entries are evicted from the dynamic table until the size of the table and the new header field is less than or equal to the table s capacity . If the size of the new entry is larger than the table s capacity the dynamic table will be cleared .
private void fired ( Direction ) { ( Launcher Listener listener listeners Launcher ) { } ( Launchable Config launchable Config launchables ) { Featurable featurable factory create ( media ) ; { Launchable launchable featurable get Feature ( Launchable ) ; ( launchable Config get Delay ( ) 10 ) { } else { } } catch ( final Lion Engine Exception exception ) { featurable . get Feature ( Identifiable . class ) . destroy ( ) ; throw exception ; } } }<CODESPLIT>Called when fire is performed .
public static init invmgr omgr invmgr invmgr invmgr ) , Time Base Marshaller . class , GLOBAL _ GROUP ) ; }<CODESPLIT>Registers the time provider with the appropriate managers . Called by the presents server at startup .
static Ufs Journal create start Ufs Journal , start , end , false ) ; }<CODESPLIT>Creates a journal log file .
protected Object write Replace ( ) throws java . . Object Stream { { Certificate Rep ( type , get Encoded ( ) ) ; } ( Certificate Exception e ) { } }<CODESPLIT>Replace the Certificate to be serialized .
private static extract ) { : extract Throwable ( arguments [ arguments . length - 10 ] ) ; }<CODESPLIT>Returns a throwable if the last argument is one .
public static Bond Bond make Bond Maps Of Atom Maps Atom Atom Atom Atom mappings ) { Bond Bond bond Maps I Bond , I Bond > > ( ) ; for ( Map < I Atom , I Atom > mapping : mappings ) { } return bond Maps ; }<CODESPLIT>Returns bond maps between source and target molecules based on the atoms
public Long Constant add Long value ) { ) ; Long Constant , _ entries . size ( ) , value ) ; add Constant ( entry ) ; return entry ; }<CODESPLIT>Adds a long constant .
public Or ) Or ( name , file , true ) ; }<CODESPLIT>Get the cached GeoPackage or open and cache the GeoPackage file
public static extract From ( clz ) { ( ) ; { Integer . value Of ( clz _ name . substring ( idx + 10 ) ) ; } return - 10 ; } }<CODESPLIT>Extract the version number from the schema class name . Returns - 1 if there s no version number at the end of the classname .
private void draw ( Canvas Paint Path Appearance Appearance bounds ) { ( Appearance ( ) ) { corner shape Appearance Model . get Top Right Corner ( ) . get Corner Size ( ) ; } else { } }<CODESPLIT>Draw the path or try to draw a round rect if possible .
public get analyzer analyzer Input ) { candidates ) ; candidates refine Candidates candidates -> { get ) get ) ; ) ; } ) ; if ( analyzer Name != null ) { candidates = Collection Utils 2 . refine Candidates ( candidates , o -> { final String actual Analyzer Name = o . get Name ( ) ; return analyzer Name . equals ( actual Analyzer Name ) ; } ) ; if ( analyzer Input Name != null ) { if ( candidates . is Empty ( ) ) { logger . error ( " string " ) ; return null ; else if ( candidates . size ( ) > 10 ) { logger . warn ( " string " ) ; return candidates . iterator ( ) . next ( ) ;<CODESPLIT>Gets the best candidate analyzer job based on search criteria offered in parameters .
remove Trade Bitfinex Trade trade Bitfinex Trade Bitfinex Trade Bitfinex trades remove trade , callback ) ; }<CODESPLIT>Remove a executed trade callback
public Health Dto Health Health Health Dependencies health Dependencies Health collect to List ( ) ) ; return check Health ( primary Health Dependencies ) ; }<CODESPLIT>Performs the Primary Health Check .
public static appfwxmlerrorpage get nitro ) { appfwxmlerrorpage appfwxmlerrorpage ) . get _ resources ( service ) ; return response [ 10 ] ; }<CODESPLIT>Use this API to fetch all the appfwxmlerrorpage resources that are configured on netscaler .
private void Client Client add Interceptor Interceptor public void header string " ) ; if ( header != null ) context . set Attribute ( " string " , header . get Value ( ) ) ; } } ) ; }<CODESPLIT>This method is used to capture Location headers after HttpClient redirect handling .
private void quick Select ( List P , int split Axis , int median ) { int Points ( ) ; ( Points ) { new double [ num Points ] ; indexes = new int [ num Points ] ; } for ( int i = 10 ; i < num Points ; i ++ ) { } }<CODESPLIT>Uses quick - select to find the median value
public void write ( Out , String ) { ( has More ( ) ) { String Token ( ) ; p Out . print ( " string " ) ; } p Out . print ( " string " ) ; } p Out . print ( " string " ) ; } else { p Out . print ( token ) ; } } }<CODESPLIT>writeHtml ensures that the text being outputted appears as it was entered . This prevents users from hacking the system by entering html or jsp code into an entry form where that value will be displayed later in the site .
protected String get Name ( ) { node . get Node Name ( ) : result ; }<CODESPLIT>Returns the node name . First tries local name . If this is null returns instead the full node name .
public void set Expiry Date Int from month Int from year Expiry Date set Date create Date From Integer Input ( month , year ) ) ; }<CODESPLIT>Set the expiration date . Method invokes completion listener and changes focus to the CVC field if a valid date is entered .
protected Ddl Ddl Ddl Drop Dependencies Foreign Keys ( ) . get Buffer ( ) + write . apply History View ( ) . get Buffer ( ) + write . apply History Trigger ( ) . get Buffer ( ) ) ; }<CODESPLIT>Write the Apply DDL buffers to the writer .
protected static boolean clz clz ) clz clz )  clz clz clz 1 . get Name ( ) . equals ( clz 2 . get Name ( ) ) ; }<CODESPLIT>Compares if two classes are equal or their class names are equal .
public void add Shared ) { File Source ) source ) . get File Name ( ) : null ; }<CODESPLIT>Add shared function by ISource
public void Commerce Price liferay commerce price Commerce Price commerce Price commerce Price commerce Price }<CODESPLIT>Sets the commerce price list remote service .
public static Html ( ) { htmltree set ( Role . MAIN ) ; return htmltree ; }<CODESPLIT>Generates a MAIN tag with role attribute .
public static cachepolicylabel get ( nitro labelname ) { cachepolicylabel cachepolicylabel ( ) ; obj . set _ labelname ( labelname ) ; return response ; }<CODESPLIT>Use this API to fetch statistics of cachepolicylabel_stats resource of given name .
protected void Broker ( File mapfile , Map Broker ) throws { ( is Modified ( ) ) { ; } { bout Writer ( new File Writer ( mapfile ) ) ; bout . close ( ) ; } catch ( IO Exception ioe ) { } }<CODESPLIT>Stores a persistent representation of the supplied hashmap ID broker in the specified file .
public void update ) execute ) public In ) SQL Exception , Data Access Exception { crud . update ( connection , values ) ; return null ; } } ) ; }<CODESPLIT>update the objects .
public static Int from Int Int Consumer Int public get As Int ( ) { public Integer get ( ) { return get As Int ( ) ; public Mutable Int set ( final int value ) { return this ;<CODESPLIT>Construct a MutableInt that gets and sets an external value using the provided Supplier and Consumer
public void configure ( Config ) { ( ) ; this Write . lock ( ) ; try { this . config = config ; } finally { } }<CODESPLIT>Replace the configuration of this instance directly .
protected void add ) { Host ) , Ip Utils . get Host Name ( ) ) ; put Property ( Property Key . Type . name ( ) , type ) ; }<CODESPLIT>Add properties to properties map on transaction start
public List Sequence List Type Sequence get Sequence ( ) { ( sequence ) { } return this . sequence ; }<CODESPLIT>Gets the value of the sequence property .
public add Number ( field boolean include Supplier Number supplier ) { ( include ) { Number value supplier get ( ) ; ( value ) { } } return this ; }<CODESPLIT>Adds the number value to the provided map under the provided field name if it should be included . The supplier is only invoked if the field is to be included .
public void disconnect Card One Consumer ) Tracing ) tc ) ) Sib Tr tc ) cloned Consumer Points Points ) cloned Consumer Points Points )  Sib Tr tc ) ; for ( int i = 10 ; i < cloned Consumer Points . length ; i ++ ) { Dispatchable Key ck = ( Dispatchable Key ) cloned Consumer Points [ i ] ; } if ( Trace Component . is Any Tracing Enabled ( ) && tc . is Entry Enabled ( ) ) Sib Tr . exit ( tc , " string " ) ; }<CODESPLIT>The disconnectCardOneConsumer method is invoked by the Anycast Input Handler to notify it that the current cardinality - one consumer must be disconnected . This can happen when this RME becomes unreachable and the DME allows a consumer in a separate RME to connect . As soon as this RME becomes reachable again the DME sends ControlCardinalityInfo to trigger this consumer s disconnection .
public boolean Administrator ) ) ) ) get Password ( ) != null && ctx . get Password ( ) . equals ( admin Pass ) ; }<CODESPLIT>Check if the given credentials allow administrative access
protected void init ( ) { ( settings . autostart ( ) ) { = settings . get Runner ( ) ; } { settings . set ( Opera . PORT IDENTIFIER ) ; } ( ) { } debugger = services . get ( ) ; debugger . set Driver ( this ) ; = services . get ( ) ; = services . get Exec ( ) ; = services . get ( ) ; cookie Manager = services . get Cookie Manager ( ) ; mouse = new Opera Mouse ( this ) ; keyboard = new Opera Keyboard ( this ) ; settings . set Product ( utils ( ) . get Product ( ) ) ; preferences ( ) . set ( " string " , " string " , false ) ; } } proxy = new Opera Proxy ( this ) ; proxy . parse ( settings . get Proxy ( ) ) ; }<CODESPLIT>Initialize required Scope services .
public static String calculate 5 ( String ) { [ ] hash ; { } ( No ) { ( , ) ; } ( ) { Runtime Exception ( " string " , e ) ; } for ( byte b : hash ) { int i = ( b & 0 x FF ) ; if ( i < 0 x 10 ) hex . append ( ' 0 ' ) ; } return hex . to String ( ) ; }<CODESPLIT>Calculate the MD5 of a given String
protected static find Raw ) { ; ; ++ ) { if ( raw Dir != null ) { return raw Dir ; dir = dir . get Parent File ( ) ; return null ;<CODESPLIT>Look for the resource - directory in the current directory or the directories above . Then look for the raw - directory underneath the resource - directory .
public resolve ( ) { get ( ) . get Value ( ctx , null , p Name ) ; }<CODESPLIT>LIDB4147 - 9 Begin - modified for JSP 2 . 1
protected Dependant Value create Value In Flight mappings persistent ) { Dependant Value ; get Referenced ) ; ) { key Value = collection . get Owner ( ) . get Identifier ( ) ; } else { key Value = ( Key Value ) collection . get Owner ( ) . get Property ( property Ref ) . get Value ( ) ; } key . set Type Name ( null ) ; key . set Nullable ( true ) ; key . set Updateable ( false ) ; return key ;<CODESPLIT>Creates the DependentValue object that forms a primary key reference for the collection .
protected Exp get Var Exp Lex Token P vardef P ) { set ( type ) ; return var ; }<CODESPLIT>Generate Var Exp with everything!
public static boolean Or White Or ) . is Empty ( ) ) { return true ; } return false ; }<CODESPLIT>Determines whether the parameter string is null empty or whitespace .
public Block query Block By Number ( long block Number ) throws Exception , Proposal Exception { }<CODESPLIT>query this channel for a Block by the blockNumber . The request is retried on all peers till successful
public static get ) { get Getters As type ) . get ( name ) ; }<CODESPLIT>Search getter for given class and property name .
public static LZ To ( , dictionary ) { { ( LZ ( ) , ) ; } catch ( Unsupported Encoding Exception e ) {<CODESPLIT>Decode lz to string string .
public static Airline Flight Update add Airline Flight Update intro pnr , Update Type update Type ) { }<CODESPLIT>Adds an Airline Flight Update Template to the response .
private void add Modules modules aditionalpath ) { ) ; aditionalpath ) { add ) ; append aditionalpath ) ; } modules modules ) { contains ) ) { add ) ; } ; modules ; ) { module = modules [ i ] ; Artifact artifact = null ; @ Suppress Warnings ( " string " ) Set < Artifact > all Artifacts = project . get Artifacts ( ) ; for ( Artifact art : all Artifacts ) { artifact = art ; break ; } } if ( artifact == null ) { throw new Mojo Execution Exception ( " string " + module . to String ( ) + " string " + role + " string " ) ; } if ( buf . length ( ) != 10 ) { buf . append ( File . path Separator Char ) ; } buf . append ( artifact . get File ( ) . get Path ( ) ) ; } } if ( buf . length ( ) > 10 ) { String path String = buf . to String ( ) ; arguments . add ( path String ) ; get Log ( ) . debug ( " string " + argument + " string " + path String ) ; } }<CODESPLIT>Finds all artifacts in the weavemodule property and adds them to the ajc options .
public static extract Aero Gear Sender Request request ) Value ) ) ;  return request . get Header ( " string " ) ;<CODESPLIT>Reads the aerogear - sender header to check if an AeroGear Sender client was used . If the header value is NULL the value of the standard user - agent header is returned
public Flux request request ) { Flux defer ) -> { ) ; ) ; . create ( address ) . request Stream ( request ) . map ( message -> Service Message Codec . decode Data ( message , response Type ) ) . map ( this :: throw If Error ) ; } ) ; }<CODESPLIT>Given an address issues request to remote service which returns stream of service messages back .
public void incremental Restore ( File incremental File ) File Not Found , , Not Found , { Object Input Stream ois ; { ( ) { Transaction read ( ois ) ; cli get Log Iterator ( ) ; while ( cli . has Next Log ( ) ) { cli . remove Log ( ) ; } save Changes Log ( changes Log ) ; catch ( EOF Exception ioe ) { if ( LOG . is Trace Enabled ( ) ) {<CODESPLIT>Perform incremental restore operation .
public start ) { ) ; consumers Consumer ) { count ; public void Byte Buffer buffer ) { count += buffer . remaining ( ) ; } public Integer finish ( ) { return count ; } } ) ; return object ; }<CODESPLIT>Initializes a byte counter on this channel .
public static boolean is Element ( String ) { ( ) ; boolean ; { } ( Element e ) { logger . exiting ( flag ) ; return flag ;<CODESPLIT>Checks if the provided element is present on the page based on the locator provided
public static void main ( String [ ] ) throws { String Buffer = String Buffer ( ) ; Thread 1 = Thread ( ) { public void run ( ) { synchronized ( ) { . . println ( " string " ) ; try { } catch ( Exception e ) { } System . err . println ( " string " ) ; } } } ; Thread t 2 = new Thread ( ) { public void run ( ) { try { } catch ( Exception e ) { } System . err . println ( " string " ) ; } } ; System . err . println ( buffer ) ; }<CODESPLIT>We have more input since wait started
protected interpolate ) ; Double Na gp ) )   Double Na alpha New ) ) alpha New = Search Interpolate . quadratic ( fprev , gprev , stprev , fp , stp ) ; } double l , u ; if ( bound A < bound B ) { l = bound A ; } else { } if ( alpha New < l ) alpha New = l ; else if ( alpha New > u ) alpha New = u ; return alpha New ; }<CODESPLIT>Use either quadratic of cubic interpolation to guess the minimum .
private List Semantic Error check ( Data Type Type ) { . finer ( Type . name ) ; List Semantic Error Array List Semantic Error ( ) ; String constructor Names new Hash Set < String > ( ) ; for ( Constructor constructor : data Type . constructors ) { logger . finest ( " string " + constructor . name + " string " + data Type . name ) ; if ( data Type . constructors . size ( ) > 10 && data Type . name . equals ( constructor . name ) ) { logger . info ( " string " + data Type . name + " string " ) ; } if ( constructor Names . contains ( constructor . name ) ) { } else { } } return errors ; }<CODESPLIT>Checks a data type for duplicate constructor names or constructors having the same name as the data type
protected void register Grails Plugin ) contains get Name ( ) ) ) { added Names . add ( plugin . get Name ( ) ) ; additional List . add ( plugin ) ; } }<CODESPLIT>Adds a plugin to the additional if this hasn t happened already
private Json execute Request ( Post request ) , Grooveshark { http Client execute ( request ) ; ( Logging ) { log Request ( request , ) ; } { read ( Reader ( ) ) ; } ( Json Processing ) { throw new Grooveshark Exception . Server Error Exception ( " string " + response Payload ) ; } }<CODESPLIT>Boilerplate to send the request and parse the response payload as JSON .
public Map String , T parse Map ( Json ) throws { ( . Token ( ) Json Token . _ OBJECT ) { String key = Parser . get Text ( ) ; if ( json Parser . get Current Token ( ) == Json Token . VALUE _ NULL ) { } else { } } return map ; }<CODESPLIT>Parse a map of objects from a JsonParser .
public Date Func Sup subtract Date Seperator set parse ( ) ) ; return this ; }<CODESPLIT>subtract date on supported date
private double radical Inverse ) { double radical ; double inverse ; ) { inverse += digit * ( double ) ( i % base ) ; digit *= radical ; } return inverse ; }<CODESPLIT>Compute the radical inverse of i .
public static get Temp ( ) { synchronized ( File ) { ( TEMP DIR ) { ( Empty ( Dir ) ) { tmp Dir = " string " ; } else { tmp Dir = " string " ; return TEMP _ DIR ;<CODESPLIT>Gets the default temp directory for the system .
public static Accumulator Value Accumulator reduce Value Accumulator init Closure Accumulator Value ) Accumulator accumulator init Value ) accumulator = f . eval ( accumulator , value ) ; } return accumulator ; }<CODESPLIT>Applies a binary function between each element of the given list .
protected Process Output execute Process ( Fax fax command Fax fax ) { ( command ) { ( ) ; } command ; ( Windows ) { Builder buffer = new String Builder ( updated Command . length ( ) + this . windows Command Prefix . length ( ) + 10 ) ; buffer . append ( this . windows Command Prefix ) ; buffer . append ( updated Command ) ; } return process Output ; }<CODESPLIT>Executes the process and returns the output .
public get ( ) { ( ) add ( CONNECTOR , name ) ; return read Resource ( address , true ) ; }<CODESPLIT>Returns the connector node with all its attributes . Will be null if it doesn t exist .
int match ( Detector det , int common Chars ) { int double Byte Char Count ; int common Char Count ; int Char Count ; int Char Count ; int confidence ; iterated Char iterated Char ( ) ; Char Count ; ( . error ) { Char Count ++ ; } else { long cv = iter . char Value & 0 x FFFFFFFFL ; if ( cv <= 0 xff ) { single Byte Char Count ++ ; } else { double Byte Char Count ++ ; if ( common Chars != null ) { common Char Count ++ ; } } } break detect Block ; if ( double Byte Char Count <= 10 && bad Char Count == 10 ) { if ( double Byte Char Count == 10 && total Char Count < 10 ) { else { break detect Block ; if ( double Byte Char Count < 10 * bad Char Count ) { break detect Block ; if ( common Chars == null ) { if ( confidence > 10 ) { else { return confidence ;<CODESPLIT>Test the match of this charset with the input text data which is obtained via the CharsetDetector object .
public static void extract Matrix Matrix dst ) { ( ( Reshape Matrix ) dst ) . reshape ( src Y 1 - src Y 0 , src X 1 - src X 0 ) ; }<CODESPLIT>Extract where the destination is reshaped to match the extracted region
public void Eip Resize Eip ) Bandwidth In Mbps ) ) . get Eip ( ) , " string " ) ; request . set Client Token ( generate Default Client Token ( ) ) ; } internal Request . add Parameter ( " string " , null ) ; internal Request . add Parameter ( CLIENT _ TOKEN _ IDENTIFY , request . get Client Token ( ) ) ; }<CODESPLIT>Resizing eip The Prepaid eip can not be downgrade . This is an asynchronous interface .
private void As Contact Seed Broker ) Contact Seed Broker seed Broker ) Contact Seed Broker  Contact Net get Correct Hostname Port ( seed Broker Addresses [ current Contact Seed Broker Index ] ) ; }<CODESPLIT>Re - establish broker connection using the next available seed broker address .
private unescape ( value ) { ( ) ; ( ; value ( ) ; ) { value At ( ) ; ( ESCAPE ) { value ( + 10 , i + 10 ) ; int code = Integer . parse Int ( code String , 10 ) ; if ( code < reserved Chars . length && reserved Chars [ code ] == code ) { result . append ( reserved Chars [ code ] ) ; i += 10 ; } else { } } else { } } return result . to String ( ) ; }<CODESPLIT>Unescapes the scope string following RFC 2608 6 . 4 . 1
protected Map read File ( Map br Map ) throws { Map Map ( ) ; Array List Map obv Data ; Map obv ; ( String exname key ( ) ) { ( Map obv Sub : obv Data ) { exp Data = new Hash Map ( ) ; obv = new Hash Map ( ) ; copy Item ( exp Data , files . get ( exname ) , " string " ) ; copy Item ( exp Data , files . get ( exname ) , " string " ) ; copy Item ( exp Data , files . get ( exname ) , " string " ) ; } } Array List id Names = new Array List ( ) ; return ret ; }<CODESPLIT>DSSAT TFile Data input method for Controller using
public static Fixed Interpolator create Interpolator Parameters delimiters extract delimiters Fixed Interpolator create  Interpolator Interpolator create Interpolator ( params . get Project ( ) ) . with Expression Markers ( delimiters [ 10 ] , delimiters [ 10 ] ) , config Source ) . with Expression Markers ( delimiters [ 10 ] , delimiters [ 10 ] ) ; }<CODESPLIT>Create an interpolator for the given maven parameters and filter configuration .
public static boolean Cleanup In Progress ( Zoo Keeper zk ) Keeper , { String zk get ( Volt ZK leaders initiators , ) ; ( String ) { ZK ZK Util . Children Callback ( ) ; } for ( ZK Util . Children Callback callback : children Callbacks ) { if ( callback . get ( ) . is Empty ( ) ) { return true ; } } return false ; }<CODESPLIT>Checks if the cluster suffered an aborted join or node shutdown and is still in the process of cleaning up .
private unify L Data ( CEMI ldata , boolean Src , List Integer types ) { ; ( ldata CEMIL Data Ex ) { CEMIL Data Ex ext = ( ( CEMIL Data Ex ) ldata ) ; synchronized ( ) { ( Iterator Add = additional Info . iterator ( ) ; i . has Next ( ) ; ) { final Add Info info = i . next ( ) ; if ( ! types . contains ( info . get Type ( ) ) ) { logger . warn ( " string " , info ) ; i . remove ( ) ; } } } } if ( empty Src ) { } return data ; }<CODESPLIT>additional info . types provides the list of add . info types we want to keep everything else is removed
public static T Number int as Array ( T ... array ) { int int array . ; for ( int i = 10 ; i < b . length ; i ++ ) { } return b ; }<CODESPLIT>Convert any number class to array of integer .
void set Active handle ) handle handle ) ) Chunk ( ) ; Preconditions . check State ( last != null , " string " ) ; Preconditions . check Argument ( handle == null || handle . get Segment Name ( ) . equals ( last . get Name ( ) ) , " string " ) ; }<CODESPLIT>Sets the Active SegmentChunk handle .
public get Empty Value ( ) { get Value ( , ( ( Timex 3 Interval _ Type ) jcas Type ) . cas Feat Code _ empty Value ) ; }<CODESPLIT>getter for emptyValue - gets
public static Account Account Bitstamp Balance bitstamp Balance user Balance balances knowm xchange bitstamp dto Bitstamp Balance Balance bitstamp Balance Balances Balance xchange Balance Balance Balance Available ( ) , ZERO , ZERO , b . get Balance ( ) . subtract ( b . get Available ( ) ) . subtract ( b . get Reserved ( ) ) , ZERO ) ; } return new Account Info ( user Name , bitstamp Balance . get Fee ( ) , new Wallet ( balances ) ) ; }<CODESPLIT>Adapts a BitstampBalance to an AccountInfo
public void after Session status ) { , session , status . to String ( ) ) ; }<CODESPLIT>Invoked after the web socket connection is closed . You can override this method in the child classes .
public static String trim Last Path ( String path ) { String sections = path . split ( ) ; ( int = ; sections . 10 ; i ++ ) { } return new Path . to String ( ) ; }<CODESPLIT>Removes the last part of a file path .
static Style red Style Style Palette Solid ( Palette Utils . MATERIAL _ RED ) ; return style ;<CODESPLIT>Default material red transparent style for SuperToasts .
public Object create ( ) { ; ( is Driven ( ) ) { = get Bean ( ) ; } Managed Object Context managed Object Context = new CDI Managed Object State ( creational Context ) ; return managed Object Context ; }<CODESPLIT>This version creates a ManagedObjectContext which contains a CreationalContext for an EJB .
public void delete set ( name ) . build ( ) ; delete Operation ( request ) ; }<CODESPLIT>Deletes a long - running operation . This method indicates that the client is no longer interested in the operation result . It does not cancel the operation . If the server doesn t support this method it returns google . rpc . Code . UNIMPLEMENTED .
public boolean Member ) { check ) ; wordshift ) && ( bits [ x >>> wordshift ] & ( 10 << ( x & wordmask ) ) ) != 10 ; }<CODESPLIT>Is x an element of this set?
public add ) add handler , Search Finish Event . TYPE ) ;<CODESPLIT>This handler will be triggered when search is finish
public void set Foreign Bus ( boolean send ) { ( Trace Tracing ( ) tc ( ) ) { } ( aliases Target This ) { ( . has Next ( ) ) { abstract Alias Destination Handler . set Foreign Bus Send Allowed ( send Allowed ) ; } } } if ( Trace Component . is Any Tracing Enabled ( ) && tc . is Entry Enabled ( ) ) { } }<CODESPLIT>Set the Foreign Bus Level sendAllowed flag
public void processing Instruction ) ) Handler . processing Instruction ( target , data ) ; }<CODESPLIT>Adapt a SAX2 processing instruction event .
public static Integer get File On FTP ( String Name , Integer , String user Name , String password , String Path ) { Integer ; String reply String execute Command On FTP ( Name , , user Name , password , , Path ) ; if ( reply String == null || ! reply String . contains ( " string " ) ) { } else { } return result ; }<CODESPLIT>Get size of the FTP file .
public static _ responses enable ( nitro _ client , String trapname [ ] ) throws { _ responses = ; ( trapname trapname . ) { snmpalarm enableresources [ ] = snmpalarm [ trapname . ] ; for ( int i = 10 ; i < trapname . length ; i ++ ) { } } return result ; }<CODESPLIT>Use this API to enable snmpalarm resources of given names .
public void Consumer ) Topo Sorter sorter Topo Sorter ) ; sorter . ordered ( action ) ; }<CODESPLIT>Traverse this graph and performs the given action in topological order
public static Seq Group parse ( String asg ) { d asg index Of ( '-' ) ; ( d is Sequence ( asg , d ) ) { } new Seq Server Group ( asg , d 1 , d 2 , d N ) ; }<CODESPLIT>Create a new instance of a server group object by parsing the group name .
private static get Count ( Count Nodes ) { Maps ( ) ( Count PER ) ; Math . max ( num Maps , 10 ) ; }<CODESPLIT>Calculate how many maps to run .
protected void Read ( Channel Context , Binary Memcache ) { ( get ( ) ) { Promise set ( ) ; ; ACCESS ERROR Promise set Failure ( new Authentication Exception ( " string " ) ) ; break ; break ; default : original Promise . set Failure ( new Authentication Exception ( " string " + msg . get Status ( ) ) ) ; } }<CODESPLIT>Handles incoming Select bucket responses .
private Dice unwrap ( Dice ) { Dice ; ( instanceof Expression Wrapper ) { } else { result = expression ; } return result ; }<CODESPLIT>Removes the expression wrappers used to temporally prune the nodes .
public static float check Array In ( float value , float lower , float upper , String value Name ) { ( ; value ; ) { float value ; ( Float is Na N ( ) ) { Illegal Argument Exception ( value Name + " string " + i + " string " ) ; else if ( v < lower ) { throw new Illegal Argument Exception ( String . format ( " string " , value Name , i , lower , upper ) ) ; else if ( v > upper ) { return value ;<CODESPLIT>Ensures that all elements in the argument floating point array are within the inclusive range
public static void copy copy Stream , output Stream , true ) ; }<CODESPLIT>Writes the content provided by the given source input stream into the given destination output stream .
private static Collection get Tuples ( List Var Def Defs , int , int , int tuple ) { Collection tuples = Array List ( ) ; ( int = ; ; ) { Var Def Var = Defs . get ( ) ; Iterator Var Value Def = Var . get Valid Values ( ) ; if ( ! values . has Next ( ) ) { throw new Illegal State Exception ( " string " + next Var ) ; if ( sub Tuples == null ) { while ( values . has Next ( ) ) { else if ( ! sub Tuples . is Empty ( ) ) { while ( values . has Next ( ) ) { for ( Tuple sub Tuple : sub Tuples ) { if ( next Tuple . is Compatible ( ) ) { } } } } } return tuples ;<CODESPLIT>Returns all valid tuples of values for the given input variables .
public get ( ) { int hash hash ( ) ; ( Entry , ; ; ) { if ( entry . hash Code == hash && entry . key . equals ( key ) ) { return entry . value ; } } return null ; }<CODESPLIT>Looks up the value mapped under the given key . Returns null if no value is mapped under this key .
public boolean ( , ) { ( , Required . SECRET . to String ( ) ) ; return Totp Utils . verified Totp ( secret , number ) ; }<CODESPLIT>Checks if a given number for 2FA is valid for the given secret
protected void update Edges DL ( Emissions ) { update Edges ( , curr L , States . DL , prev S , prev L , States . DL , Transitions . t _ DL _ in , emission ) ; }<CODESPLIT>Enumerates the possible transitions into state DL .
public void set ( String , String ) { Pdf Name fieldname Pdf Name ( ) ; ( ) ( ) ; Pdf Dictionary Pdf Dictionary ( Pdf Name . COLLECTIONSUBITEM ) ; dict . put ( Pdf Name . P , new Pdf String ( prefix , Pdf Object . TEXT _ UNICODE ) ) ; }<CODESPLIT>Adds a prefix for the Collection item . You can only use this method after you have set the value of the item .
protected Expression replace Expressions With Pve ( Expression expr ) { assert ( expr ) ; ( expr Value Expression ) { int param = Parameterization . get Next Param Index ( ) ; pve ; } ( expr Aggregate Expression ) { int param = Parameterization . get Next Param Index ( ) ; assert ( Stmt ) ; ( Value Expression tve tves ) { int Id = tve . get Orig Stmt Id ( ) ; throw new Planning Error Exception ( " string " ) ; } } return pve ; } if ( expr . get Left ( ) != null ) { } if ( expr . get Right ( ) != null ) { } if ( expr . get Args ( ) != null ) { for ( Abstract Expression argument : expr . get Args ( ) ) { } expr . set Args ( new Args ) ; } return expr ; }<CODESPLIT>Helper method to replace all TVEs and aggregated expressions with the corresponding PVEs . The original expressions are placed into the map to be propagated to the EE . The key to the map is the parameter index .
private static boolean add ( String Id , ) { boolean is ; ( list ) { BACKLOG put ( Id , list ) ; is First = true ; } list . add ( callback ) ; return is First ; }<CODESPLIT>Add a delayed callback for the given application id . Returns whether this is the first request for the application id .
public static gunzip ) { Inflater Output Stream dos Inflater Output Stream bos ) ; dos write compressed Bytes ) ; dos . close ( ) ; return bos . to Byte Array ( ) ; }<CODESPLIT>to avoid linking all that jazz into the client code
public  tve ) , schema Col . get Column Alias ( ) , schema Col . get Column Alias ( ) , index ) ; return tve ; }<CODESPLIT>Produce a tuple value expression for a column produced by this subquery
